
SeguidorOficial1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000024f6  0000258a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000024f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006e  0080011a  0080011a  000025a4  2**0
                  ALLOC
  3 .stab         00005fc4  00000000  00000000  000025a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00007785  00000000  00000000  00008568  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c8  00000000  00000000  0000fcf0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001207  00000000  00000000  0000feb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000318  00000000  00000000  000110bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aef  00000000  00000000  000113d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00011ec8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000288  00000000  00000000  00011fac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001344  00000000  00000000  00012234  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00013578  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 36 00 	jmp	0x6c	; 0x6c <__dtors_end>
       4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
       8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
       c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      1c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      24:	0c 94 77 0a 	jmp	0x14ee	; 0x14ee <__vector_9>
      28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      2c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      38:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      54:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      58:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      5c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      60:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
      64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>

00000068 <__ctors_start>:
      68:	f9 0a       	sbc	r15, r25

0000006a <__ctors_end>:
      6a:	fa 0a       	sbc	r15, r26

0000006c <__dtors_end>:
      6c:	11 24       	eor	r1, r1
      6e:	1f be       	out	0x3f, r1	; 63
      70:	cf ef       	ldi	r28, 0xFF	; 255
      72:	d8 e0       	ldi	r29, 0x08	; 8
      74:	de bf       	out	0x3e, r29	; 62
      76:	cd bf       	out	0x3d, r28	; 61

00000078 <__do_copy_data>:
      78:	11 e0       	ldi	r17, 0x01	; 1
      7a:	a0 e0       	ldi	r26, 0x00	; 0
      7c:	b1 e0       	ldi	r27, 0x01	; 1
      7e:	e6 ef       	ldi	r30, 0xF6	; 246
      80:	f4 e2       	ldi	r31, 0x24	; 36
      82:	02 c0       	rjmp	.+4      	; 0x88 <__do_copy_data+0x10>
      84:	05 90       	lpm	r0, Z+
      86:	0d 92       	st	X+, r0
      88:	aa 31       	cpi	r26, 0x1A	; 26
      8a:	b1 07       	cpc	r27, r17
      8c:	d9 f7       	brne	.-10     	; 0x84 <__do_copy_data+0xc>

0000008e <__do_clear_bss>:
      8e:	11 e0       	ldi	r17, 0x01	; 1
      90:	aa e1       	ldi	r26, 0x1A	; 26
      92:	b1 e0       	ldi	r27, 0x01	; 1
      94:	01 c0       	rjmp	.+2      	; 0x98 <.do_clear_bss_start>

00000096 <.do_clear_bss_loop>:
      96:	1d 92       	st	X+, r1

00000098 <.do_clear_bss_start>:
      98:	a8 38       	cpi	r26, 0x88	; 136
      9a:	b1 07       	cpc	r27, r17
      9c:	e1 f7       	brne	.-8      	; 0x96 <.do_clear_bss_loop>

0000009e <__do_global_ctors>:
      9e:	10 e0       	ldi	r17, 0x00	; 0
      a0:	ca e6       	ldi	r28, 0x6A	; 106
      a2:	d0 e0       	ldi	r29, 0x00	; 0
      a4:	04 c0       	rjmp	.+8      	; 0xae <__do_global_ctors+0x10>
      a6:	22 97       	sbiw	r28, 0x02	; 2
      a8:	fe 01       	movw	r30, r28
      aa:	0e 94 3b 11 	call	0x2276	; 0x2276 <__tablejump__>
      ae:	c8 36       	cpi	r28, 0x68	; 104
      b0:	d1 07       	cpc	r29, r17
      b2:	c9 f7       	brne	.-14     	; 0xa6 <__do_global_ctors+0x8>
      b4:	0e 94 ac 00 	call	0x158	; 0x158 <main>
      b8:	0c 94 6e 12 	jmp	0x24dc	; 0x24dc <__do_global_dtors>

000000bc <__bad_interrupt>:
      bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <_pololu_atmel_studio_6_workaround>:
#define _POLOLU_ATMEL_STUDIO_6_WORKAROUND

static void __attribute__((used)) _pololu_atmel_studio_6_workaround(void)
{
    static volatile unsigned char w = 1;
    w++;
      c0:	80 91 0b 01 	lds	r24, 0x010B
      c4:	8f 5f       	subi	r24, 0xFF	; 255
      c6:	80 93 0b 01 	sts	0x010B, r24
}
      ca:	08 95       	ret

000000cc <initialize>:
 */

#include <pololu/3pi.h>

void initialize()
{
      cc:	cf 93       	push	r28
      ce:	df 93       	push	r29
	

	// This must be called at the beginning of 3pi code, to set up the
	// sensors.  We use a value of 2000 for the timeout, which
	// corresponds to 2000*0.4 us = 0.8 ms on our 20 MHz processor.
	pololu_3pi_init(2000);
      d0:	80 ed       	ldi	r24, 0xD0	; 208
      d2:	97 e0       	ldi	r25, 0x07	; 7
      d4:	0e 94 40 0b 	call	0x1680	; 0x1680 <pololu_3pi_init>
	
	// Display battery voltage and wait for button press
	while(!button_is_pressed(BUTTON_B))
	{
		lcd_goto_xy(0,0);
		print("Press B");
      d8:	c0 e0       	ldi	r28, 0x00	; 0
      da:	d1 e0       	ldi	r29, 0x01	; 1
	// sensors.  We use a value of 2000 for the timeout, which
	// corresponds to 2000*0.4 us = 0.8 ms on our 20 MHz processor.
	pololu_3pi_init(2000);
	
	// Display battery voltage and wait for button press
	while(!button_is_pressed(BUTTON_B))
      dc:	0b c0       	rjmp	.+22     	; 0xf4 <initialize+0x28>
	{
		lcd_goto_xy(0,0);
      de:	80 e0       	ldi	r24, 0x00	; 0
      e0:	60 e0       	ldi	r22, 0x00	; 0
      e2:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
		print("Press B");
      e6:	ce 01       	movw	r24, r28
      e8:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
		delay_ms(100);
      ec:	84 e6       	ldi	r24, 0x64	; 100
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
	// sensors.  We use a value of 2000 for the timeout, which
	// corresponds to 2000*0.4 us = 0.8 ms on our 20 MHz processor.
	pololu_3pi_init(2000);
	
	// Display battery voltage and wait for button press
	while(!button_is_pressed(BUTTON_B))
      f4:	80 e1       	ldi	r24, 0x10	; 16
      f6:	0e 94 27 0a 	call	0x144e	; 0x144e <button_is_pressed>
      fa:	88 23       	and	r24, r24
      fc:	81 f3       	breq	.-32     	; 0xde <initialize+0x12>
		delay_ms(100);
	}

	// Always wait for the button to be released so that 3pi doesn't
	// start moving until your hand is away from it.
	wait_for_button_release(BUTTON_B);
      fe:	80 e1       	ldi	r24, 0x10	; 16
     100:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <wait_for_button_release>
	delay_ms(1000);
     104:	88 ee       	ldi	r24, 0xE8	; 232
     106:	93 e0       	ldi	r25, 0x03	; 3
     108:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
     10c:	cc ee       	ldi	r28, 0xEC	; 236
     10e:	df ef       	ldi	r29, 0xFF	; 255

	// Auto-calibration: turn right and left while calibrating the
	// sensors.
	for(counter=0;counter<80;counter++)
	{
		if(counter < 20 || counter >= 60)
     110:	c8 32       	cpi	r28, 0x28	; 40
     112:	d1 05       	cpc	r29, r1
     114:	38 f0       	brcs	.+14     	; 0x124 <initialize+0x58>
			set_motors(40,-40);
     116:	88 e2       	ldi	r24, 0x28	; 40
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	68 ed       	ldi	r22, 0xD8	; 216
     11c:	7f ef       	ldi	r23, 0xFF	; 255
     11e:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
     122:	06 c0       	rjmp	.+12     	; 0x130 <initialize+0x64>
		else
			set_motors(-40,40);
     124:	88 ed       	ldi	r24, 0xD8	; 216
     126:	9f ef       	ldi	r25, 0xFF	; 255
     128:	68 e2       	ldi	r22, 0x28	; 40
     12a:	70 e0       	ldi	r23, 0x00	; 0
     12c:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		// This function records a set of sensor readings and keeps
		// track of the minimum and maximum values encountered.  The
		// IR_EMITTERS_ON argument means that the IR LEDs will be
		// turned on during the reading, which is usually what you
		// want.
		calibrate_line_sensors(IR_EMITTERS_ON);
     130:	81 e0       	ldi	r24, 0x01	; 1
     132:	0e 94 08 0b 	call	0x1610	; 0x1610 <calibrate_line_sensors>

		// Since our counter runs to 80, the total delay will be
		// 80*20 = 1600 ms.
		delay_ms(20);
     136:	84 e1       	ldi	r24, 0x14	; 20
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
     13e:	21 96       	adiw	r28, 0x01	; 1
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	// Auto-calibration: turn right and left while calibrating the
	// sensors.
	for(counter=0;counter<80;counter++)
     140:	cc 33       	cpi	r28, 0x3C	; 60
     142:	d1 05       	cpc	r29, r1
     144:	29 f7       	brne	.-54     	; 0x110 <initialize+0x44>

		// Since our counter runs to 80, the total delay will be
		// 80*20 = 1600 ms.
		delay_ms(20);
	}
	set_motors(0,0);
     146:	80 e0       	ldi	r24, 0x00	; 0
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	60 e0       	ldi	r22, 0x00	; 0
     14c:	70 e0       	ldi	r23, 0x00	; 0
     14e:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
}
     152:	df 91       	pop	r29
     154:	cf 91       	pop	r28
     156:	08 95       	ret

00000158 <main>:

int main()
{
     158:	8f 92       	push	r8
     15a:	9f 92       	push	r9
     15c:	af 92       	push	r10
     15e:	bf 92       	push	r11
     160:	cf 92       	push	r12
     162:	df 92       	push	r13
     164:	ef 92       	push	r14
     166:	ff 92       	push	r15
     168:	0f 93       	push	r16
     16a:	1f 93       	push	r17
     16c:	cf 93       	push	r28
     16e:	df 93       	push	r29
     170:	cd b7       	in	r28, 0x3d	; 61
     172:	de b7       	in	r29, 0x3e	; 62
     174:	2a 97       	sbiw	r28, 0x0a	; 10
     176:	0f b6       	in	r0, 0x3f	; 63
     178:	f8 94       	cli
     17a:	de bf       	out	0x3e, r29	; 62
     17c:	0f be       	out	0x3f, r0	; 63
     17e:	cd bf       	out	0x3d, r28	; 61

	initialize();
     180:	0e 94 66 00 	call	0xcc	; 0xcc <initialize>

	while(!button_is_pressed(BUTTON_B))
	{
		lcd_goto_xy(0,0);
		print("Press B");
     184:	00 e0       	ldi	r16, 0x00	; 0
     186:	11 e0       	ldi	r17, 0x01	; 1
int main()
{

	initialize();

	while(!button_is_pressed(BUTTON_B))
     188:	0b c0       	rjmp	.+22     	; 0x1a0 <main+0x48>
	{
		lcd_goto_xy(0,0);
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	60 e0       	ldi	r22, 0x00	; 0
     18e:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
		print("Press B");
     192:	c8 01       	movw	r24, r16
     194:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
		delay_ms(100);
     198:	84 e6       	ldi	r24, 0x64	; 100
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
int main()
{

	initialize();

	while(!button_is_pressed(BUTTON_B))
     1a0:	80 e1       	ldi	r24, 0x10	; 16
     1a2:	0e 94 27 0a 	call	0x144e	; 0x144e <button_is_pressed>
     1a6:	88 23       	and	r24, r24
     1a8:	81 f3       	breq	.-32     	; 0x18a <main+0x32>
		delay_ms(100);
	}

	// Always wait for the button to be released so that 3pi doesn't
	// start moving until your hand is away from it.
	wait_for_button_release(BUTTON_B);
     1aa:	80 e1       	ldi	r24, 0x10	; 16
     1ac:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <wait_for_button_release>
	int umbral_zona_moderada = 1200;


	while(1)
	{
		unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     1b0:	ce 01       	movw	r24, r28
     1b2:	01 96       	adiw	r24, 0x01	; 1
     1b4:	61 e0       	ldi	r22, 0x01	; 1
     1b6:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
		
		set_motors(m_max,m_max);
     1ba:	88 ec       	ldi	r24, 0xC8	; 200
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	68 ec       	ldi	r22, 0xC8	; 200
     1c0:	70 e0       	ldi	r23, 0x00	; 0
     1c2:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		
		int extremos = sensores[0] + sensores[4];
     1c6:	89 85       	ldd	r24, Y+9	; 0x09
     1c8:	9a 85       	ldd	r25, Y+10	; 0x0a
     1ca:	29 81       	ldd	r18, Y+1	; 0x01
     1cc:	3a 81       	ldd	r19, Y+2	; 0x02
     1ce:	82 0f       	add	r24, r18
     1d0:	93 1f       	adc	r25, r19
		
		
	
		if (extremos < 1700)
     1d2:	26 e0       	ldi	r18, 0x06	; 6
     1d4:	84 3a       	cpi	r24, 0xA4	; 164
     1d6:	92 07       	cpc	r25, r18
     1d8:	5c f7       	brge	.-42     	; 0x1b0 <main+0x58>
		{
			set_motors(0,0);
     1da:	80 e0       	ldi	r24, 0x00	; 0
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	60 e0       	ldi	r22, 0x00	; 0
     1e0:	70 e0       	ldi	r23, 0x00	; 0
     1e2:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
			delay_ms(2000);
     1e6:	80 ed       	ldi	r24, 0xD0	; 208
     1e8:	97 e0       	ldi	r25, 0x07	; 7
     1ea:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
			m2 = m_max;
			m1 = m_max + diferencia_motores;
		} else 
		{
			m1 = m_max;
			m2 = m_max;
     1ee:	0f 2e       	mov	r0, r31
     1f0:	f8 ec       	ldi	r31, 0xC8	; 200
     1f2:	af 2e       	mov	r10, r31
     1f4:	bb 24       	eor	r11, r11
     1f6:	f0 2d       	mov	r31, r0
		}
		
		clear();
		print_long(m1);
		print("  ");
     1f8:	0f 2e       	mov	r0, r31
     1fa:	f8 e0       	ldi	r31, 0x08	; 8
     1fc:	8f 2e       	mov	r8, r31
     1fe:	f1 e0       	ldi	r31, 0x01	; 1
     200:	9f 2e       	mov	r9, r31
     202:	f0 2d       	mov	r31, r0
	}
	
	while(1)
	{
		
		unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     204:	ce 01       	movw	r24, r28
     206:	01 96       	adiw	r24, 0x01	; 1
     208:	61 e0       	ldi	r22, 0x01	; 1
     20a:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
     20e:	bc 01       	movw	r22, r24
		
		int todos = 0;
		for (int x = 0; x < 5; x++)
			todos += sensores[x];
     210:	89 81       	ldd	r24, Y+1	; 0x01
     212:	9a 81       	ldd	r25, Y+2	; 0x02
     214:	2b 81       	ldd	r18, Y+3	; 0x03
     216:	3c 81       	ldd	r19, Y+4	; 0x04
     218:	82 0f       	add	r24, r18
     21a:	93 1f       	adc	r25, r19
     21c:	2d 81       	ldd	r18, Y+5	; 0x05
     21e:	3e 81       	ldd	r19, Y+6	; 0x06
     220:	82 0f       	add	r24, r18
     222:	93 1f       	adc	r25, r19
     224:	2f 81       	ldd	r18, Y+7	; 0x07
     226:	38 85       	ldd	r19, Y+8	; 0x08
     228:	82 0f       	add	r24, r18
     22a:	93 1f       	adc	r25, r19
     22c:	29 85       	ldd	r18, Y+9	; 0x09
     22e:	3a 85       	ldd	r19, Y+10	; 0x0a
     230:	82 0f       	add	r24, r18
     232:	93 1f       	adc	r25, r19
		 
		if (todos == 5000)
     234:	23 e1       	ldi	r18, 0x13	; 19
     236:	88 38       	cpi	r24, 0x88	; 136
     238:	92 07       	cpc	r25, r18
     23a:	b1 f4       	brne	.+44     	; 0x268 <main+0x110>
		{	
			set_motors(0,0);
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
			delay_ms(1000);
     248:	88 ee       	ldi	r24, 0xE8	; 232
     24a:	93 e0       	ldi	r25, 0x03	; 3
     24c:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
		m2 = m_max;
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
		m2 = m_max;
     250:	0f 2e       	mov	r0, r31
     252:	f8 ec       	ldi	r31, 0xC8	; 200
     254:	af 2e       	mov	r10, r31
     256:	bb 24       	eor	r11, r11
     258:	f0 2d       	mov	r31, r0
	}
	
	clear();
	print_long(m1);
	print("  ");
     25a:	0f 2e       	mov	r0, r31
     25c:	f8 e0       	ldi	r31, 0x08	; 8
     25e:	8f 2e       	mov	r8, r31
     260:	f1 e0       	ldi	r31, 0x01	; 1
     262:	9f 2e       	mov	r9, r31
     264:	f0 2d       	mov	r31, r0
		 
		if (todos == 5000)
		{	
			set_motors(0,0);
			delay_ms(1000);
			break;
     266:	9e c0       	rjmp	.+316    	; 0x3a4 <main+0x24c>
		}
		
		int posicion_linea_centrada = ((int)posicion_linea) - medio; // Si la linea esta en el centro el valor es 0, en los sensores extremos -2000 o 2000.
     268:	60 5d       	subi	r22, 0xD0	; 208
     26a:	77 40       	sbci	r23, 0x07	; 7
		int diferencia_motores = 0; // m1 - m2
		
		int m1 = 0;
		int m2 = 0;
				 
		if (posicion_linea_centrada > umbral_zona_moderada)
     26c:	84 e0       	ldi	r24, 0x04	; 4
     26e:	61 3b       	cpi	r22, 0xB1	; 177
     270:	78 07       	cpc	r23, r24
     272:	bc f0       	brlt	.+46     	; 0x2a2 <main+0x14a>
		{
			diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada + b;
     274:	88 27       	eor	r24, r24
     276:	77 fd       	sbrc	r23, 7
     278:	80 95       	com	r24
     27a:	98 2f       	mov	r25, r24
     27c:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     280:	2d ec       	ldi	r18, 0xCD	; 205
     282:	3c ec       	ldi	r19, 0xCC	; 204
     284:	4c e4       	ldi	r20, 0x4C	; 76
     286:	5c e3       	ldi	r21, 0x3C	; 60
     288:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     28c:	20 e0       	ldi	r18, 0x00	; 0
     28e:	30 e0       	ldi	r19, 0x00	; 0
     290:	4f e2       	ldi	r20, 0x2F	; 47
     292:	53 e4       	ldi	r21, 0x43	; 67
     294:	0e 94 82 05 	call	0xb04	; 0xb04 <__addsf3>
     298:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     29c:	8b 01       	movw	r16, r22
     29e:	9c 01       	movw	r18, r24
     2a0:	49 c0       	rjmp	.+146    	; 0x334 <main+0x1dc>
		}
		else if (posicion_linea_centrada < -umbral_zona_moderada)
     2a2:	2b ef       	ldi	r18, 0xFB	; 251
     2a4:	60 35       	cpi	r22, 0x50	; 80
     2a6:	72 07       	cpc	r23, r18
     2a8:	bc f4       	brge	.+46     	; 0x2d8 <main+0x180>
		{
			diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada - b;
     2aa:	88 27       	eor	r24, r24
     2ac:	77 fd       	sbrc	r23, 7
     2ae:	80 95       	com	r24
     2b0:	98 2f       	mov	r25, r24
     2b2:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     2b6:	2d ec       	ldi	r18, 0xCD	; 205
     2b8:	3c ec       	ldi	r19, 0xCC	; 204
     2ba:	4c e4       	ldi	r20, 0x4C	; 76
     2bc:	5c e3       	ldi	r21, 0x3C	; 60
     2be:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	4f e2       	ldi	r20, 0x2F	; 47
     2c8:	53 e4       	ldi	r21, 0x43	; 67
     2ca:	0e 94 81 05 	call	0xb02	; 0xb02 <__subsf3>
     2ce:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     2d2:	8b 01       	movw	r16, r22
     2d4:	9c 01       	movw	r18, r24
     2d6:	2e c0       	rjmp	.+92     	; 0x334 <main+0x1dc>
		} else {
			double x = ((double)posicion_linea_centrada)/(umbral_zona_moderada);
     2d8:	88 27       	eor	r24, r24
     2da:	77 fd       	sbrc	r23, 7
     2dc:	80 95       	com	r24
     2de:	98 2f       	mov	r25, r24
     2e0:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	46 e9       	ldi	r20, 0x96	; 150
     2ea:	54 e4       	ldi	r21, 0x44	; 68
     2ec:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__divsf3>
     2f0:	e6 2e       	mov	r14, r22
     2f2:	c7 2e       	mov	r12, r23
     2f4:	f8 2e       	mov	r15, r24
     2f6:	d9 2e       	mov	r13, r25
			diferencia_motores = m_moderada*x*x*x;	
     2f8:	86 2f       	mov	r24, r22
     2fa:	9c 2d       	mov	r25, r12
     2fc:	af 2d       	mov	r26, r15
     2fe:	bd 2d       	mov	r27, r13
     300:	bc 01       	movw	r22, r24
     302:	cd 01       	movw	r24, r26
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	4e e3       	ldi	r20, 0x3E	; 62
     30a:	53 e4       	ldi	r21, 0x43	; 67
     30c:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     310:	0e 2d       	mov	r16, r14
     312:	1c 2d       	mov	r17, r12
     314:	2f 2d       	mov	r18, r15
     316:	3d 2d       	mov	r19, r13
     318:	a9 01       	movw	r20, r18
     31a:	98 01       	movw	r18, r16
     31c:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     320:	2f 2d       	mov	r18, r15
     322:	3d 2d       	mov	r19, r13
     324:	a9 01       	movw	r20, r18
     326:	98 01       	movw	r18, r16
     328:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     32c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     330:	8b 01       	movw	r16, r22
     332:	9c 01       	movw	r18, r24
		}			
				
		if(diferencia_motores > 0) 
     334:	10 16       	cp	r1, r16
     336:	11 06       	cpc	r1, r17
     338:	2c f4       	brge	.+10     	; 0x344 <main+0x1ec>
		{
			m1 = m_max;
			m2 = m_max - diferencia_motores;
     33a:	65 01       	movw	r12, r10
     33c:	c0 1a       	sub	r12, r16
     33e:	d1 0a       	sbc	r13, r17
			diferencia_motores = m_moderada*x*x*x;	
		}			
				
		if(diferencia_motores > 0) 
		{
			m1 = m_max;
     340:	75 01       	movw	r14, r10
     342:	0d c0       	rjmp	.+26     	; 0x35e <main+0x206>
			m2 = m_max - diferencia_motores;
		}
		else if (diferencia_motores < 0)
     344:	11 23       	and	r17, r17
     346:	4c f4       	brge	.+18     	; 0x35a <main+0x202>
		{
			m2 = m_max;
			m1 = m_max + diferencia_motores;
     348:	0f 2e       	mov	r0, r31
     34a:	f8 ec       	ldi	r31, 0xC8	; 200
     34c:	ef 2e       	mov	r14, r31
     34e:	ff 24       	eor	r15, r15
     350:	f0 2d       	mov	r31, r0
     352:	e0 0e       	add	r14, r16
     354:	f1 1e       	adc	r15, r17
			m1 = m_max;
			m2 = m_max - diferencia_motores;
		}
		else if (diferencia_motores < 0)
		{
			m2 = m_max;
     356:	65 01       	movw	r12, r10
     358:	02 c0       	rjmp	.+4      	; 0x35e <main+0x206>
			m1 = m_max + diferencia_motores;
		} else 
		{
			m1 = m_max;
			m2 = m_max;
     35a:	65 01       	movw	r12, r10
		{
			m2 = m_max;
			m1 = m_max + diferencia_motores;
		} else 
		{
			m1 = m_max;
     35c:	75 01       	movw	r14, r10
			m2 = m_max;
		}
		
		clear();
     35e:	0e 94 bf 08 	call	0x117e	; 0x117e <clear>
		print_long(m1);
     362:	b7 01       	movw	r22, r14
     364:	88 27       	eor	r24, r24
     366:	77 fd       	sbrc	r23, 7
     368:	80 95       	com	r24
     36a:	98 2f       	mov	r25, r24
     36c:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
		print("  ");
     370:	c4 01       	movw	r24, r8
     372:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
		print_long(m2);
     376:	b6 01       	movw	r22, r12
     378:	88 27       	eor	r24, r24
     37a:	77 fd       	sbrc	r23, 7
     37c:	80 95       	com	r24
     37e:	98 2f       	mov	r25, r24
     380:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
		lcd_goto_xy(0,1);
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	61 e0       	ldi	r22, 0x01	; 1
     388:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
		print_long(diferencia_motores);
     38c:	b8 01       	movw	r22, r16
     38e:	88 27       	eor	r24, r24
     390:	77 fd       	sbrc	r23, 7
     392:	80 95       	com	r24
     394:	98 2f       	mov	r25, r24
     396:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
		set_motors(m1,m2);
     39a:	c7 01       	movw	r24, r14
     39c:	b6 01       	movw	r22, r12
     39e:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
	}
     3a2:	30 cf       	rjmp	.-416    	; 0x204 <main+0xac>

while(1)
{
	
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     3a4:	ce 01       	movw	r24, r28
     3a6:	01 96       	adiw	r24, 0x01	; 1
     3a8:	61 e0       	ldi	r22, 0x01	; 1
     3aa:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
     3ae:	bc 01       	movw	r22, r24
	if (todos < 5000)
	{
		break;
	}*/

	int extremos = sensores[0] + sensores[4];
     3b0:	89 85       	ldd	r24, Y+9	; 0x09
     3b2:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b4:	29 81       	ldd	r18, Y+1	; 0x01
     3b6:	3a 81       	ldd	r19, Y+2	; 0x02
     3b8:	82 0f       	add	r24, r18
     3ba:	93 1f       	adc	r25, r19
	
	if (extremos < 2000)
     3bc:	27 e0       	ldi	r18, 0x07	; 7
     3be:	80 3d       	cpi	r24, 0xD0	; 208
     3c0:	92 07       	cpc	r25, r18
     3c2:	b4 f4       	brge	.+44     	; 0x3f0 <main+0x298>
	{
		set_motors(m_max,m_max);
     3c4:	88 ec       	ldi	r24, 0xC8	; 200
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	68 ec       	ldi	r22, 0xC8	; 200
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(20);
     3d0:	84 e1       	ldi	r24, 0x14	; 20
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
		m2 = m_max;
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
		m2 = m_max;
     3d8:	0f 2e       	mov	r0, r31
     3da:	f8 ec       	ldi	r31, 0xC8	; 200
     3dc:	af 2e       	mov	r10, r31
     3de:	bb 24       	eor	r11, r11
     3e0:	f0 2d       	mov	r31, r0
	}
	
	clear();
	print_long(m1);
	print("  ");
     3e2:	0f 2e       	mov	r0, r31
     3e4:	f8 e0       	ldi	r31, 0x08	; 8
     3e6:	8f 2e       	mov	r8, r31
     3e8:	f1 e0       	ldi	r31, 0x01	; 1
     3ea:	9f 2e       	mov	r9, r31
     3ec:	f0 2d       	mov	r31, r0
	
	if (extremos < 2000)
	{
		set_motors(m_max,m_max);
		delay_ms(20);
		break;
     3ee:	9e c0       	rjmp	.+316    	; 0x52c <main+0x3d4>
	}
	
	int posicion_linea_centrada = ((int)posicion_linea) - medio; // Si la linea esta en el centro el valor es 0, en los sensores extremos -2000 o 2000.
     3f0:	60 5d       	subi	r22, 0xD0	; 208
     3f2:	77 40       	sbci	r23, 0x07	; 7
	int diferencia_motores = 0; // m1 - m2
	
	int m1 = 0;
	int m2 = 0;
	
	if (posicion_linea_centrada > umbral_zona_moderada)
     3f4:	84 e0       	ldi	r24, 0x04	; 4
     3f6:	61 3b       	cpi	r22, 0xB1	; 177
     3f8:	78 07       	cpc	r23, r24
     3fa:	bc f0       	brlt	.+46     	; 0x42a <main+0x2d2>
	{
		diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada + b;
     3fc:	88 27       	eor	r24, r24
     3fe:	77 fd       	sbrc	r23, 7
     400:	80 95       	com	r24
     402:	98 2f       	mov	r25, r24
     404:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     408:	2d ec       	ldi	r18, 0xCD	; 205
     40a:	3c ec       	ldi	r19, 0xCC	; 204
     40c:	4c e4       	ldi	r20, 0x4C	; 76
     40e:	5c e3       	ldi	r21, 0x3C	; 60
     410:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	4f e2       	ldi	r20, 0x2F	; 47
     41a:	53 e4       	ldi	r21, 0x43	; 67
     41c:	0e 94 82 05 	call	0xb04	; 0xb04 <__addsf3>
     420:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     424:	8b 01       	movw	r16, r22
     426:	9c 01       	movw	r18, r24
     428:	49 c0       	rjmp	.+146    	; 0x4bc <main+0x364>
	}
	else if (posicion_linea_centrada < -umbral_zona_moderada)
     42a:	2b ef       	ldi	r18, 0xFB	; 251
     42c:	60 35       	cpi	r22, 0x50	; 80
     42e:	72 07       	cpc	r23, r18
     430:	bc f4       	brge	.+46     	; 0x460 <main+0x308>
	{
		diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada - b;
     432:	88 27       	eor	r24, r24
     434:	77 fd       	sbrc	r23, 7
     436:	80 95       	com	r24
     438:	98 2f       	mov	r25, r24
     43a:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     43e:	2d ec       	ldi	r18, 0xCD	; 205
     440:	3c ec       	ldi	r19, 0xCC	; 204
     442:	4c e4       	ldi	r20, 0x4C	; 76
     444:	5c e3       	ldi	r21, 0x3C	; 60
     446:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	4f e2       	ldi	r20, 0x2F	; 47
     450:	53 e4       	ldi	r21, 0x43	; 67
     452:	0e 94 81 05 	call	0xb02	; 0xb02 <__subsf3>
     456:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     45a:	8b 01       	movw	r16, r22
     45c:	9c 01       	movw	r18, r24
     45e:	2e c0       	rjmp	.+92     	; 0x4bc <main+0x364>
	} else {
		double x = ((double)posicion_linea_centrada)/(umbral_zona_moderada);
     460:	88 27       	eor	r24, r24
     462:	77 fd       	sbrc	r23, 7
     464:	80 95       	com	r24
     466:	98 2f       	mov	r25, r24
     468:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	46 e9       	ldi	r20, 0x96	; 150
     472:	54 e4       	ldi	r21, 0x44	; 68
     474:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__divsf3>
     478:	e6 2e       	mov	r14, r22
     47a:	c7 2e       	mov	r12, r23
     47c:	f8 2e       	mov	r15, r24
     47e:	d9 2e       	mov	r13, r25
		diferencia_motores = m_moderada*x*x*x;
     480:	86 2f       	mov	r24, r22
     482:	9c 2d       	mov	r25, r12
     484:	af 2d       	mov	r26, r15
     486:	bd 2d       	mov	r27, r13
     488:	bc 01       	movw	r22, r24
     48a:	cd 01       	movw	r24, r26
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	4e e3       	ldi	r20, 0x3E	; 62
     492:	53 e4       	ldi	r21, 0x43	; 67
     494:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     498:	0e 2d       	mov	r16, r14
     49a:	1c 2d       	mov	r17, r12
     49c:	2f 2d       	mov	r18, r15
     49e:	3d 2d       	mov	r19, r13
     4a0:	a9 01       	movw	r20, r18
     4a2:	98 01       	movw	r18, r16
     4a4:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     4a8:	2f 2d       	mov	r18, r15
     4aa:	3d 2d       	mov	r19, r13
     4ac:	a9 01       	movw	r20, r18
     4ae:	98 01       	movw	r18, r16
     4b0:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     4b4:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     4b8:	8b 01       	movw	r16, r22
     4ba:	9c 01       	movw	r18, r24
	}
	
	if(diferencia_motores > 0)
     4bc:	10 16       	cp	r1, r16
     4be:	11 06       	cpc	r1, r17
     4c0:	2c f4       	brge	.+10     	; 0x4cc <main+0x374>
	{
		m1 = m_max;
		m2 = m_max - diferencia_motores;
     4c2:	65 01       	movw	r12, r10
     4c4:	c0 1a       	sub	r12, r16
     4c6:	d1 0a       	sbc	r13, r17
		diferencia_motores = m_moderada*x*x*x;
	}
	
	if(diferencia_motores > 0)
	{
		m1 = m_max;
     4c8:	75 01       	movw	r14, r10
     4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <main+0x38e>
		m2 = m_max - diferencia_motores;
	}
	else if (diferencia_motores < 0)
     4cc:	11 23       	and	r17, r17
     4ce:	4c f4       	brge	.+18     	; 0x4e2 <main+0x38a>
	{
		m2 = m_max;
		m1 = m_max + diferencia_motores;
     4d0:	0f 2e       	mov	r0, r31
     4d2:	f8 ec       	ldi	r31, 0xC8	; 200
     4d4:	ef 2e       	mov	r14, r31
     4d6:	ff 24       	eor	r15, r15
     4d8:	f0 2d       	mov	r31, r0
     4da:	e0 0e       	add	r14, r16
     4dc:	f1 1e       	adc	r15, r17
		m1 = m_max;
		m2 = m_max - diferencia_motores;
	}
	else if (diferencia_motores < 0)
	{
		m2 = m_max;
     4de:	65 01       	movw	r12, r10
     4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <main+0x38e>
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
		m2 = m_max;
     4e2:	65 01       	movw	r12, r10
	{
		m2 = m_max;
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
     4e4:	75 01       	movw	r14, r10
		m2 = m_max;
	}
	
	clear();
     4e6:	0e 94 bf 08 	call	0x117e	; 0x117e <clear>
	print_long(m1);
     4ea:	b7 01       	movw	r22, r14
     4ec:	88 27       	eor	r24, r24
     4ee:	77 fd       	sbrc	r23, 7
     4f0:	80 95       	com	r24
     4f2:	98 2f       	mov	r25, r24
     4f4:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	print("  ");
     4f8:	c4 01       	movw	r24, r8
     4fa:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
	print_long(m2);
     4fe:	b6 01       	movw	r22, r12
     500:	88 27       	eor	r24, r24
     502:	77 fd       	sbrc	r23, 7
     504:	80 95       	com	r24
     506:	98 2f       	mov	r25, r24
     508:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	lcd_goto_xy(0,1);
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	61 e0       	ldi	r22, 0x01	; 1
     510:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
	print_long(diferencia_motores);
     514:	b8 01       	movw	r22, r16
     516:	88 27       	eor	r24, r24
     518:	77 fd       	sbrc	r23, 7
     51a:	80 95       	com	r24
     51c:	98 2f       	mov	r25, r24
     51e:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	set_motors(m1,m2);
     522:	c7 01       	movw	r24, r14
     524:	b6 01       	movw	r22, r12
     526:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
}
     52a:	3c cf       	rjmp	.-392    	; 0x3a4 <main+0x24c>

while(1)
{
	
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     52c:	ce 01       	movw	r24, r28
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	61 e0       	ldi	r22, 0x01	; 1
     532:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
     536:	bc 01       	movw	r22, r24
	
	int extremos = sensores[0] + sensores[4];
     538:	89 85       	ldd	r24, Y+9	; 0x09
     53a:	9a 85       	ldd	r25, Y+10	; 0x0a
     53c:	29 81       	ldd	r18, Y+1	; 0x01
     53e:	3a 81       	ldd	r19, Y+2	; 0x02
     540:	82 0f       	add	r24, r18
     542:	93 1f       	adc	r25, r19
	
	if (extremos == 2000)
     544:	27 e0       	ldi	r18, 0x07	; 7
     546:	80 3d       	cpi	r24, 0xD0	; 208
     548:	92 07       	cpc	r25, r18
     54a:	59 f4       	brne	.+22     	; 0x562 <main+0x40a>
	{
		set_motors(0,0);
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	60 e0       	ldi	r22, 0x00	; 0
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(1000);
     558:	88 ee       	ldi	r24, 0xE8	; 232
     55a:	93 e0       	ldi	r25, 0x03	; 3
     55c:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
		break;
     560:	9e c0       	rjmp	.+316    	; 0x69e <main+0x546>
	}
	
	int posicion_linea_centrada = ((int)posicion_linea) - medio; // Si la linea esta en el centro el valor es 0, en los sensores extremos -2000 o 2000.
     562:	60 5d       	subi	r22, 0xD0	; 208
     564:	77 40       	sbci	r23, 0x07	; 7
	int diferencia_motores = 0; // m1 - m2
	
	int m1 = 0;
	int m2 = 0;
	
	if (posicion_linea_centrada > umbral_zona_moderada)
     566:	84 e0       	ldi	r24, 0x04	; 4
     568:	61 3b       	cpi	r22, 0xB1	; 177
     56a:	78 07       	cpc	r23, r24
     56c:	bc f0       	brlt	.+46     	; 0x59c <main+0x444>
	{
		diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada + b;
     56e:	88 27       	eor	r24, r24
     570:	77 fd       	sbrc	r23, 7
     572:	80 95       	com	r24
     574:	98 2f       	mov	r25, r24
     576:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     57a:	2d ec       	ldi	r18, 0xCD	; 205
     57c:	3c ec       	ldi	r19, 0xCC	; 204
     57e:	4c e4       	ldi	r20, 0x4C	; 76
     580:	5c e3       	ldi	r21, 0x3C	; 60
     582:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	4f e2       	ldi	r20, 0x2F	; 47
     58c:	53 e4       	ldi	r21, 0x43	; 67
     58e:	0e 94 82 05 	call	0xb04	; 0xb04 <__addsf3>
     592:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     596:	8b 01       	movw	r16, r22
     598:	9c 01       	movw	r18, r24
     59a:	49 c0       	rjmp	.+146    	; 0x62e <main+0x4d6>
	}
	else if (posicion_linea_centrada < -umbral_zona_moderada)
     59c:	2b ef       	ldi	r18, 0xFB	; 251
     59e:	60 35       	cpi	r22, 0x50	; 80
     5a0:	72 07       	cpc	r23, r18
     5a2:	bc f4       	brge	.+46     	; 0x5d2 <main+0x47a>
	{
		diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada - b;
     5a4:	88 27       	eor	r24, r24
     5a6:	77 fd       	sbrc	r23, 7
     5a8:	80 95       	com	r24
     5aa:	98 2f       	mov	r25, r24
     5ac:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     5b0:	2d ec       	ldi	r18, 0xCD	; 205
     5b2:	3c ec       	ldi	r19, 0xCC	; 204
     5b4:	4c e4       	ldi	r20, 0x4C	; 76
     5b6:	5c e3       	ldi	r21, 0x3C	; 60
     5b8:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	4f e2       	ldi	r20, 0x2F	; 47
     5c2:	53 e4       	ldi	r21, 0x43	; 67
     5c4:	0e 94 81 05 	call	0xb02	; 0xb02 <__subsf3>
     5c8:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     5cc:	8b 01       	movw	r16, r22
     5ce:	9c 01       	movw	r18, r24
     5d0:	2e c0       	rjmp	.+92     	; 0x62e <main+0x4d6>
	} else {
		double x = ((double)posicion_linea_centrada)/(umbral_zona_moderada);
     5d2:	88 27       	eor	r24, r24
     5d4:	77 fd       	sbrc	r23, 7
     5d6:	80 95       	com	r24
     5d8:	98 2f       	mov	r25, r24
     5da:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     5de:	20 e0       	ldi	r18, 0x00	; 0
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	46 e9       	ldi	r20, 0x96	; 150
     5e4:	54 e4       	ldi	r21, 0x44	; 68
     5e6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__divsf3>
     5ea:	e6 2e       	mov	r14, r22
     5ec:	c7 2e       	mov	r12, r23
     5ee:	f8 2e       	mov	r15, r24
     5f0:	d9 2e       	mov	r13, r25
		diferencia_motores = m_moderada*x*x*x;
     5f2:	86 2f       	mov	r24, r22
     5f4:	9c 2d       	mov	r25, r12
     5f6:	af 2d       	mov	r26, r15
     5f8:	bd 2d       	mov	r27, r13
     5fa:	bc 01       	movw	r22, r24
     5fc:	cd 01       	movw	r24, r26
     5fe:	20 e0       	ldi	r18, 0x00	; 0
     600:	30 e0       	ldi	r19, 0x00	; 0
     602:	4e e3       	ldi	r20, 0x3E	; 62
     604:	53 e4       	ldi	r21, 0x43	; 67
     606:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     60a:	0e 2d       	mov	r16, r14
     60c:	1c 2d       	mov	r17, r12
     60e:	2f 2d       	mov	r18, r15
     610:	3d 2d       	mov	r19, r13
     612:	a9 01       	movw	r20, r18
     614:	98 01       	movw	r18, r16
     616:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     61a:	2f 2d       	mov	r18, r15
     61c:	3d 2d       	mov	r19, r13
     61e:	a9 01       	movw	r20, r18
     620:	98 01       	movw	r18, r16
     622:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     626:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     62a:	8b 01       	movw	r16, r22
     62c:	9c 01       	movw	r18, r24
	}
	
	if(diferencia_motores > 0)
     62e:	10 16       	cp	r1, r16
     630:	11 06       	cpc	r1, r17
     632:	2c f4       	brge	.+10     	; 0x63e <main+0x4e6>
	{
		m1 = m_max;
		m2 = m_max - diferencia_motores;
     634:	65 01       	movw	r12, r10
     636:	c0 1a       	sub	r12, r16
     638:	d1 0a       	sbc	r13, r17
		diferencia_motores = m_moderada*x*x*x;
	}
	
	if(diferencia_motores > 0)
	{
		m1 = m_max;
     63a:	75 01       	movw	r14, r10
     63c:	0d c0       	rjmp	.+26     	; 0x658 <main+0x500>
		m2 = m_max - diferencia_motores;
	}
	else if (diferencia_motores < 0)
     63e:	11 23       	and	r17, r17
     640:	4c f4       	brge	.+18     	; 0x654 <main+0x4fc>
	{
		m2 = m_max;
		m1 = m_max + diferencia_motores;
     642:	0f 2e       	mov	r0, r31
     644:	f8 ec       	ldi	r31, 0xC8	; 200
     646:	ef 2e       	mov	r14, r31
     648:	ff 24       	eor	r15, r15
     64a:	f0 2d       	mov	r31, r0
     64c:	e0 0e       	add	r14, r16
     64e:	f1 1e       	adc	r15, r17
		m1 = m_max;
		m2 = m_max - diferencia_motores;
	}
	else if (diferencia_motores < 0)
	{
		m2 = m_max;
     650:	65 01       	movw	r12, r10
     652:	02 c0       	rjmp	.+4      	; 0x658 <main+0x500>
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
		m2 = m_max;
     654:	65 01       	movw	r12, r10
	{
		m2 = m_max;
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
     656:	75 01       	movw	r14, r10
		m2 = m_max;
	}
	
	clear();
     658:	0e 94 bf 08 	call	0x117e	; 0x117e <clear>
	print_long(m1);
     65c:	b7 01       	movw	r22, r14
     65e:	88 27       	eor	r24, r24
     660:	77 fd       	sbrc	r23, 7
     662:	80 95       	com	r24
     664:	98 2f       	mov	r25, r24
     666:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	print("  ");
     66a:	c4 01       	movw	r24, r8
     66c:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
	print_long(m2);
     670:	b6 01       	movw	r22, r12
     672:	88 27       	eor	r24, r24
     674:	77 fd       	sbrc	r23, 7
     676:	80 95       	com	r24
     678:	98 2f       	mov	r25, r24
     67a:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	lcd_goto_xy(0,1);
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
	print_long(diferencia_motores);
     686:	b8 01       	movw	r22, r16
     688:	88 27       	eor	r24, r24
     68a:	77 fd       	sbrc	r23, 7
     68c:	80 95       	com	r24
     68e:	98 2f       	mov	r25, r24
     690:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	set_motors(m1,m2);
     694:	c7 01       	movw	r24, r14
     696:	b6 01       	movw	r22, r12
     698:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
}
     69c:	47 cf       	rjmp	.-370    	; 0x52c <main+0x3d4>

while (1)
{
	
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     69e:	ce 01       	movw	r24, r28
     6a0:	01 96       	adiw	r24, 0x01	; 1
     6a2:	61 e0       	ldi	r22, 0x01	; 1
     6a4:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
	
	set_motors(m_max,0);
     6a8:	88 ec       	ldi	r24, 0xC8	; 200
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
	if (sensores[0] < 1000)
     6b4:	89 81       	ldd	r24, Y+1	; 0x01
     6b6:	9a 81       	ldd	r25, Y+2	; 0x02
     6b8:	23 e0       	ldi	r18, 0x03	; 3
     6ba:	88 3e       	cpi	r24, 0xE8	; 232
     6bc:	92 07       	cpc	r25, r18
     6be:	78 f7       	brcc	.-34     	; 0x69e <main+0x546>
	{
		set_motors(0,0);
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(1000);
     6cc:	88 ee       	ldi	r24, 0xE8	; 232
     6ce:	93 e0       	ldi	r25, 0x03	; 3
     6d0:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
}

while (1)
{
	
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     6d4:	ce 01       	movw	r24, r28
     6d6:	01 96       	adiw	r24, 0x01	; 1
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
     6de:	8c 01       	movw	r16, r24
	
	set_motors(m_max,0);
     6e0:	88 ec       	ldi	r24, 0xC8	; 200
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	60 e0       	ldi	r22, 0x00	; 0
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
	if (posicion_linea < 2000)
     6ec:	87 e0       	ldi	r24, 0x07	; 7
     6ee:	00 3d       	cpi	r16, 0xD0	; 208
     6f0:	18 07       	cpc	r17, r24
     6f2:	80 f7       	brcc	.-32     	; 0x6d4 <main+0x57c>
	{
		set_motors(0,0);
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(1000);
     700:	88 ee       	ldi	r24, 0xE8	; 232
     702:	93 e0       	ldi	r25, 0x03	; 3
     704:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
		m2 = m_max;
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
		m2 = m_max;
     708:	0f 2e       	mov	r0, r31
     70a:	f8 ec       	ldi	r31, 0xC8	; 200
     70c:	af 2e       	mov	r10, r31
     70e:	bb 24       	eor	r11, r11
     710:	f0 2d       	mov	r31, r0
	}
	
	clear();
	print_long(m1);
	print("  ");
     712:	0f 2e       	mov	r0, r31
     714:	f8 e0       	ldi	r31, 0x08	; 8
     716:	8f 2e       	mov	r8, r31
     718:	f1 e0       	ldi	r31, 0x01	; 1
     71a:	9f 2e       	mov	r9, r31
     71c:	f0 2d       	mov	r31, r0


while(1)
{
	
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     71e:	ce 01       	movw	r24, r28
     720:	01 96       	adiw	r24, 0x01	; 1
     722:	61 e0       	ldi	r22, 0x01	; 1
     724:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
     728:	bc 01       	movw	r22, r24
	
	int laterales = sensores[0] + sensores[1] + sensores[2];
     72a:	8b 81       	ldd	r24, Y+3	; 0x03
     72c:	9c 81       	ldd	r25, Y+4	; 0x04
     72e:	29 81       	ldd	r18, Y+1	; 0x01
     730:	3a 81       	ldd	r19, Y+2	; 0x02
     732:	82 0f       	add	r24, r18
     734:	93 1f       	adc	r25, r19
     736:	2d 81       	ldd	r18, Y+5	; 0x05
     738:	3e 81       	ldd	r19, Y+6	; 0x06
     73a:	82 0f       	add	r24, r18
     73c:	93 1f       	adc	r25, r19
	
	if (laterales >= 2500)
     73e:	29 e0       	ldi	r18, 0x09	; 9
     740:	84 3c       	cpi	r24, 0xC4	; 196
     742:	92 07       	cpc	r25, r18
     744:	5c f0       	brlt	.+22     	; 0x75c <main+0x604>
	{
		set_motors(0,0);
     746:	80 e0       	ldi	r24, 0x00	; 0
     748:	90 e0       	ldi	r25, 0x00	; 0
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(1000);
     752:	88 ee       	ldi	r24, 0xE8	; 232
     754:	93 e0       	ldi	r25, 0x03	; 3
     756:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
		break;
     75a:	9e c0       	rjmp	.+316    	; 0x898 <main+0x740>
	}
	
	int posicion_linea_centrada = ((int)posicion_linea) - medio; // Si la linea esta en el centro el valor es 0, en los sensores extremos -2000 o 2000.
     75c:	60 5d       	subi	r22, 0xD0	; 208
     75e:	77 40       	sbci	r23, 0x07	; 7
	int diferencia_motores = 0; // m1 - m2
	
	int m1 = 0;
	int m2 = 0;
	
	if (posicion_linea_centrada > umbral_zona_moderada)
     760:	84 e0       	ldi	r24, 0x04	; 4
     762:	61 3b       	cpi	r22, 0xB1	; 177
     764:	78 07       	cpc	r23, r24
     766:	bc f0       	brlt	.+46     	; 0x796 <main+0x63e>
	{
		diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada + b;
     768:	88 27       	eor	r24, r24
     76a:	77 fd       	sbrc	r23, 7
     76c:	80 95       	com	r24
     76e:	98 2f       	mov	r25, r24
     770:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     774:	2d ec       	ldi	r18, 0xCD	; 205
     776:	3c ec       	ldi	r19, 0xCC	; 204
     778:	4c e4       	ldi	r20, 0x4C	; 76
     77a:	5c e3       	ldi	r21, 0x3C	; 60
     77c:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     780:	20 e0       	ldi	r18, 0x00	; 0
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	4f e2       	ldi	r20, 0x2F	; 47
     786:	53 e4       	ldi	r21, 0x43	; 67
     788:	0e 94 82 05 	call	0xb04	; 0xb04 <__addsf3>
     78c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     790:	8b 01       	movw	r16, r22
     792:	9c 01       	movw	r18, r24
     794:	49 c0       	rjmp	.+146    	; 0x828 <main+0x6d0>
	}
	else if (posicion_linea_centrada < -umbral_zona_moderada)
     796:	2b ef       	ldi	r18, 0xFB	; 251
     798:	60 35       	cpi	r22, 0x50	; 80
     79a:	72 07       	cpc	r23, r18
     79c:	bc f4       	brge	.+46     	; 0x7cc <main+0x674>
	{
		diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada - b;
     79e:	88 27       	eor	r24, r24
     7a0:	77 fd       	sbrc	r23, 7
     7a2:	80 95       	com	r24
     7a4:	98 2f       	mov	r25, r24
     7a6:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     7aa:	2d ec       	ldi	r18, 0xCD	; 205
     7ac:	3c ec       	ldi	r19, 0xCC	; 204
     7ae:	4c e4       	ldi	r20, 0x4C	; 76
     7b0:	5c e3       	ldi	r21, 0x3C	; 60
     7b2:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     7b6:	20 e0       	ldi	r18, 0x00	; 0
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	4f e2       	ldi	r20, 0x2F	; 47
     7bc:	53 e4       	ldi	r21, 0x43	; 67
     7be:	0e 94 81 05 	call	0xb02	; 0xb02 <__subsf3>
     7c2:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     7c6:	8b 01       	movw	r16, r22
     7c8:	9c 01       	movw	r18, r24
     7ca:	2e c0       	rjmp	.+92     	; 0x828 <main+0x6d0>
	} else {
		double x = ((double)posicion_linea_centrada)/(umbral_zona_moderada);
     7cc:	88 27       	eor	r24, r24
     7ce:	77 fd       	sbrc	r23, 7
     7d0:	80 95       	com	r24
     7d2:	98 2f       	mov	r25, r24
     7d4:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     7d8:	20 e0       	ldi	r18, 0x00	; 0
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	46 e9       	ldi	r20, 0x96	; 150
     7de:	54 e4       	ldi	r21, 0x44	; 68
     7e0:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__divsf3>
     7e4:	e6 2e       	mov	r14, r22
     7e6:	c7 2e       	mov	r12, r23
     7e8:	f8 2e       	mov	r15, r24
     7ea:	d9 2e       	mov	r13, r25
		diferencia_motores = m_moderada*x*x*x;
     7ec:	86 2f       	mov	r24, r22
     7ee:	9c 2d       	mov	r25, r12
     7f0:	af 2d       	mov	r26, r15
     7f2:	bd 2d       	mov	r27, r13
     7f4:	bc 01       	movw	r22, r24
     7f6:	cd 01       	movw	r24, r26
     7f8:	20 e0       	ldi	r18, 0x00	; 0
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	4e e3       	ldi	r20, 0x3E	; 62
     7fe:	53 e4       	ldi	r21, 0x43	; 67
     800:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     804:	0e 2d       	mov	r16, r14
     806:	1c 2d       	mov	r17, r12
     808:	2f 2d       	mov	r18, r15
     80a:	3d 2d       	mov	r19, r13
     80c:	a9 01       	movw	r20, r18
     80e:	98 01       	movw	r18, r16
     810:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     814:	2f 2d       	mov	r18, r15
     816:	3d 2d       	mov	r19, r13
     818:	a9 01       	movw	r20, r18
     81a:	98 01       	movw	r18, r16
     81c:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     820:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     824:	8b 01       	movw	r16, r22
     826:	9c 01       	movw	r18, r24
	}
	
	if(diferencia_motores > 0)
     828:	10 16       	cp	r1, r16
     82a:	11 06       	cpc	r1, r17
     82c:	2c f4       	brge	.+10     	; 0x838 <main+0x6e0>
	{
		m1 = m_max;
		m2 = m_max - diferencia_motores;
     82e:	65 01       	movw	r12, r10
     830:	c0 1a       	sub	r12, r16
     832:	d1 0a       	sbc	r13, r17
		diferencia_motores = m_moderada*x*x*x;
	}
	
	if(diferencia_motores > 0)
	{
		m1 = m_max;
     834:	75 01       	movw	r14, r10
     836:	0d c0       	rjmp	.+26     	; 0x852 <main+0x6fa>
		m2 = m_max - diferencia_motores;
	}
	else if (diferencia_motores < 0)
     838:	11 23       	and	r17, r17
     83a:	4c f4       	brge	.+18     	; 0x84e <main+0x6f6>
	{
		m2 = m_max;
		m1 = m_max + diferencia_motores;
     83c:	0f 2e       	mov	r0, r31
     83e:	f8 ec       	ldi	r31, 0xC8	; 200
     840:	ef 2e       	mov	r14, r31
     842:	ff 24       	eor	r15, r15
     844:	f0 2d       	mov	r31, r0
     846:	e0 0e       	add	r14, r16
     848:	f1 1e       	adc	r15, r17
		m1 = m_max;
		m2 = m_max - diferencia_motores;
	}
	else if (diferencia_motores < 0)
	{
		m2 = m_max;
     84a:	65 01       	movw	r12, r10
     84c:	02 c0       	rjmp	.+4      	; 0x852 <main+0x6fa>
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
		m2 = m_max;
     84e:	65 01       	movw	r12, r10
	{
		m2 = m_max;
		m1 = m_max + diferencia_motores;
	} else
	{
		m1 = m_max;
     850:	75 01       	movw	r14, r10
		m2 = m_max;
	}
	
	clear();
     852:	0e 94 bf 08 	call	0x117e	; 0x117e <clear>
	print_long(m1);
     856:	b7 01       	movw	r22, r14
     858:	88 27       	eor	r24, r24
     85a:	77 fd       	sbrc	r23, 7
     85c:	80 95       	com	r24
     85e:	98 2f       	mov	r25, r24
     860:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	print("  ");
     864:	c4 01       	movw	r24, r8
     866:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
	print_long(m2);
     86a:	b6 01       	movw	r22, r12
     86c:	88 27       	eor	r24, r24
     86e:	77 fd       	sbrc	r23, 7
     870:	80 95       	com	r24
     872:	98 2f       	mov	r25, r24
     874:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	lcd_goto_xy(0,1);
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	61 e0       	ldi	r22, 0x01	; 1
     87c:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
	print_long(diferencia_motores);
     880:	b8 01       	movw	r22, r16
     882:	88 27       	eor	r24, r24
     884:	77 fd       	sbrc	r23, 7
     886:	80 95       	com	r24
     888:	98 2f       	mov	r25, r24
     88a:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
	set_motors(m1,m2);
     88e:	c7 01       	movw	r24, r14
     890:	b6 01       	movw	r22, r12
     892:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
}
     896:	43 cf       	rjmp	.-378    	; 0x71e <main+0x5c6>

while(1){
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     898:	ce 01       	movw	r24, r28
     89a:	01 96       	adiw	r24, 0x01	; 1
     89c:	61 e0       	ldi	r22, 0x01	; 1
     89e:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
	
	set_motors(0,m_max);
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	68 ec       	ldi	r22, 0xC8	; 200
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
	if ( (sensores[0] + sensores[1]) < 1000)
     8ae:	8b 81       	ldd	r24, Y+3	; 0x03
     8b0:	9c 81       	ldd	r25, Y+4	; 0x04
     8b2:	29 81       	ldd	r18, Y+1	; 0x01
     8b4:	3a 81       	ldd	r19, Y+2	; 0x02
     8b6:	82 0f       	add	r24, r18
     8b8:	93 1f       	adc	r25, r19
     8ba:	23 e0       	ldi	r18, 0x03	; 3
     8bc:	88 3e       	cpi	r24, 0xE8	; 232
     8be:	92 07       	cpc	r25, r18
     8c0:	58 f7       	brcc	.-42     	; 0x898 <main+0x740>
	{
		set_motors(0,0);
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(1000);
     8ce:	88 ee       	ldi	r24, 0xE8	; 232
     8d0:	93 e0       	ldi	r25, 0x03	; 3
     8d2:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
		break;
	}
}

while(1){
	unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     8d6:	ce 01       	movw	r24, r28
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	61 e0       	ldi	r22, 0x01	; 1
     8dc:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
	
	set_motors(0,m_max);
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	68 ec       	ldi	r22, 0xC8	; 200
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
	if ( sensores[2] >= 900)
     8ec:	8d 81       	ldd	r24, Y+5	; 0x05
     8ee:	9e 81       	ldd	r25, Y+6	; 0x06
     8f0:	23 e0       	ldi	r18, 0x03	; 3
     8f2:	84 38       	cpi	r24, 0x84	; 132
     8f4:	92 07       	cpc	r25, r18
     8f6:	78 f3       	brcs	.-34     	; 0x8d6 <main+0x77e>
	{
		set_motors(0,0);
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	60 e0       	ldi	r22, 0x00	; 0
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
		delay_ms(1000);
     904:	88 ee       	ldi	r24, 0xE8	; 232
     906:	93 e0       	ldi	r25, 0x03	; 3
     908:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
			m2 = m_max;
			m1 = m_max + diferencia_motores;
		} else
		{
			m1 = m_max;
			m2 = m_max;
     90c:	0f 2e       	mov	r0, r31
     90e:	f8 ec       	ldi	r31, 0xC8	; 200
     910:	af 2e       	mov	r10, r31
     912:	bb 24       	eor	r11, r11
     914:	f0 2d       	mov	r31, r0
		}
		
		clear();
		print_long(m1);
		print("  ");
     916:	0f 2e       	mov	r0, r31
     918:	f8 e0       	ldi	r31, 0x08	; 8
     91a:	8f 2e       	mov	r8, r31
     91c:	f1 e0       	ldi	r31, 0x01	; 1
     91e:	9f 2e       	mov	r9, r31
     920:	f0 2d       	mov	r31, r0

	
	while(1)
	{
		
		unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     922:	ce 01       	movw	r24, r28
     924:	01 96       	adiw	r24, 0x01	; 1
     926:	61 e0       	ldi	r22, 0x01	; 1
     928:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
     92c:	bc 01       	movw	r22, r24
		
		int todos = 0;
		for (int x = 0; x < 5; x++)
		todos += sensores[x];
     92e:	89 81       	ldd	r24, Y+1	; 0x01
     930:	9a 81       	ldd	r25, Y+2	; 0x02
     932:	2b 81       	ldd	r18, Y+3	; 0x03
     934:	3c 81       	ldd	r19, Y+4	; 0x04
     936:	82 0f       	add	r24, r18
     938:	93 1f       	adc	r25, r19
     93a:	2d 81       	ldd	r18, Y+5	; 0x05
     93c:	3e 81       	ldd	r19, Y+6	; 0x06
     93e:	82 0f       	add	r24, r18
     940:	93 1f       	adc	r25, r19
     942:	2f 81       	ldd	r18, Y+7	; 0x07
     944:	38 85       	ldd	r19, Y+8	; 0x08
     946:	82 0f       	add	r24, r18
     948:	93 1f       	adc	r25, r19
     94a:	29 85       	ldd	r18, Y+9	; 0x09
     94c:	3a 85       	ldd	r19, Y+10	; 0x0a
     94e:	82 0f       	add	r24, r18
     950:	93 1f       	adc	r25, r19
		
		if (todos == 5000)
     952:	23 e1       	ldi	r18, 0x13	; 19
     954:	88 38       	cpi	r24, 0x88	; 136
     956:	92 07       	cpc	r25, r18
     958:	59 f4       	brne	.+22     	; 0x970 <__stack+0x71>
		{
			set_motors(0,0);
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	60 e0       	ldi	r22, 0x00	; 0
     960:	70 e0       	ldi	r23, 0x00	; 0
     962:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
			delay_ms(1000);
     966:	88 ee       	ldi	r24, 0xE8	; 232
     968:	93 e0       	ldi	r25, 0x03	; 3
     96a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
			break;
     96e:	9e c0       	rjmp	.+316    	; 0xaac <__stack+0x1ad>
		}
		
		int posicion_linea_centrada = ((int)posicion_linea) - medio; // Si la linea esta en el centro el valor es 0, en los sensores extremos -2000 o 2000.
     970:	60 5d       	subi	r22, 0xD0	; 208
     972:	77 40       	sbci	r23, 0x07	; 7
		int diferencia_motores = 0; // m1 - m2
		
		int m1 = 0;
		int m2 = 0;
		
		if (posicion_linea_centrada > umbral_zona_moderada)
     974:	84 e0       	ldi	r24, 0x04	; 4
     976:	61 3b       	cpi	r22, 0xB1	; 177
     978:	78 07       	cpc	r23, r24
     97a:	bc f0       	brlt	.+46     	; 0x9aa <__stack+0xab>
		{
			diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada + b;
     97c:	88 27       	eor	r24, r24
     97e:	77 fd       	sbrc	r23, 7
     980:	80 95       	com	r24
     982:	98 2f       	mov	r25, r24
     984:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     988:	2d ec       	ldi	r18, 0xCD	; 205
     98a:	3c ec       	ldi	r19, 0xCC	; 204
     98c:	4c e4       	ldi	r20, 0x4C	; 76
     98e:	5c e3       	ldi	r21, 0x3C	; 60
     990:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	4f e2       	ldi	r20, 0x2F	; 47
     99a:	53 e4       	ldi	r21, 0x43	; 67
     99c:	0e 94 82 05 	call	0xb04	; 0xb04 <__addsf3>
     9a0:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     9a4:	8b 01       	movw	r16, r22
     9a6:	9c 01       	movw	r18, r24
     9a8:	49 c0       	rjmp	.+146    	; 0xa3c <__stack+0x13d>
		}
		else if (posicion_linea_centrada < -umbral_zona_moderada)
     9aa:	2b ef       	ldi	r18, 0xFB	; 251
     9ac:	60 35       	cpi	r22, 0x50	; 80
     9ae:	72 07       	cpc	r23, r18
     9b0:	bc f4       	brge	.+46     	; 0x9e0 <__stack+0xe1>
		{
			diferencia_motores = pendiente_zona_dastica*posicion_linea_centrada - b;
     9b2:	88 27       	eor	r24, r24
     9b4:	77 fd       	sbrc	r23, 7
     9b6:	80 95       	com	r24
     9b8:	98 2f       	mov	r25, r24
     9ba:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     9be:	2d ec       	ldi	r18, 0xCD	; 205
     9c0:	3c ec       	ldi	r19, 0xCC	; 204
     9c2:	4c e4       	ldi	r20, 0x4C	; 76
     9c4:	5c e3       	ldi	r21, 0x3C	; 60
     9c6:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	30 e0       	ldi	r19, 0x00	; 0
     9ce:	4f e2       	ldi	r20, 0x2F	; 47
     9d0:	53 e4       	ldi	r21, 0x43	; 67
     9d2:	0e 94 81 05 	call	0xb02	; 0xb02 <__subsf3>
     9d6:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     9da:	8b 01       	movw	r16, r22
     9dc:	9c 01       	movw	r18, r24
     9de:	2e c0       	rjmp	.+92     	; 0xa3c <__stack+0x13d>
		} else {
			double x = ((double)posicion_linea_centrada)/(umbral_zona_moderada);
     9e0:	88 27       	eor	r24, r24
     9e2:	77 fd       	sbrc	r23, 7
     9e4:	80 95       	com	r24
     9e6:	98 2f       	mov	r25, r24
     9e8:	0e 94 81 06 	call	0xd02	; 0xd02 <__floatsisf>
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	46 e9       	ldi	r20, 0x96	; 150
     9f2:	54 e4       	ldi	r21, 0x44	; 68
     9f4:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__divsf3>
     9f8:	e6 2e       	mov	r14, r22
     9fa:	c7 2e       	mov	r12, r23
     9fc:	f8 2e       	mov	r15, r24
     9fe:	d9 2e       	mov	r13, r25
			diferencia_motores = m_moderada*x*x*x;
     a00:	86 2f       	mov	r24, r22
     a02:	9c 2d       	mov	r25, r12
     a04:	af 2d       	mov	r26, r15
     a06:	bd 2d       	mov	r27, r13
     a08:	bc 01       	movw	r22, r24
     a0a:	cd 01       	movw	r24, r26
     a0c:	20 e0       	ldi	r18, 0x00	; 0
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	4e e3       	ldi	r20, 0x3E	; 62
     a12:	53 e4       	ldi	r21, 0x43	; 67
     a14:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     a18:	0e 2d       	mov	r16, r14
     a1a:	1c 2d       	mov	r17, r12
     a1c:	2f 2d       	mov	r18, r15
     a1e:	3d 2d       	mov	r19, r13
     a20:	a9 01       	movw	r20, r18
     a22:	98 01       	movw	r18, r16
     a24:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     a28:	2f 2d       	mov	r18, r15
     a2a:	3d 2d       	mov	r19, r13
     a2c:	a9 01       	movw	r20, r18
     a2e:	98 01       	movw	r18, r16
     a30:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__mulsf3>
     a34:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fixsfsi>
     a38:	8b 01       	movw	r16, r22
     a3a:	9c 01       	movw	r18, r24
		}
		
		if(diferencia_motores > 0)
     a3c:	10 16       	cp	r1, r16
     a3e:	11 06       	cpc	r1, r17
     a40:	2c f4       	brge	.+10     	; 0xa4c <__stack+0x14d>
		{
			m1 = m_max;
			m2 = m_max - diferencia_motores;
     a42:	65 01       	movw	r12, r10
     a44:	c0 1a       	sub	r12, r16
     a46:	d1 0a       	sbc	r13, r17
			diferencia_motores = m_moderada*x*x*x;
		}
		
		if(diferencia_motores > 0)
		{
			m1 = m_max;
     a48:	75 01       	movw	r14, r10
     a4a:	0d c0       	rjmp	.+26     	; 0xa66 <__stack+0x167>
			m2 = m_max - diferencia_motores;
		}
		else if (diferencia_motores < 0)
     a4c:	11 23       	and	r17, r17
     a4e:	4c f4       	brge	.+18     	; 0xa62 <__stack+0x163>
		{
			m2 = m_max;
			m1 = m_max + diferencia_motores;
     a50:	0f 2e       	mov	r0, r31
     a52:	f8 ec       	ldi	r31, 0xC8	; 200
     a54:	ef 2e       	mov	r14, r31
     a56:	ff 24       	eor	r15, r15
     a58:	f0 2d       	mov	r31, r0
     a5a:	e0 0e       	add	r14, r16
     a5c:	f1 1e       	adc	r15, r17
			m1 = m_max;
			m2 = m_max - diferencia_motores;
		}
		else if (diferencia_motores < 0)
		{
			m2 = m_max;
     a5e:	65 01       	movw	r12, r10
     a60:	02 c0       	rjmp	.+4      	; 0xa66 <__stack+0x167>
			m1 = m_max + diferencia_motores;
		} else
		{
			m1 = m_max;
			m2 = m_max;
     a62:	65 01       	movw	r12, r10
		{
			m2 = m_max;
			m1 = m_max + diferencia_motores;
		} else
		{
			m1 = m_max;
     a64:	75 01       	movw	r14, r10
			m2 = m_max;
		}
		
		clear();
     a66:	0e 94 bf 08 	call	0x117e	; 0x117e <clear>
		print_long(m1);
     a6a:	b7 01       	movw	r22, r14
     a6c:	88 27       	eor	r24, r24
     a6e:	77 fd       	sbrc	r23, 7
     a70:	80 95       	com	r24
     a72:	98 2f       	mov	r25, r24
     a74:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
		print("  ");
     a78:	c4 01       	movw	r24, r8
     a7a:	0e 94 53 09 	call	0x12a6	; 0x12a6 <print>
		print_long(m2);
     a7e:	b6 01       	movw	r22, r12
     a80:	88 27       	eor	r24, r24
     a82:	77 fd       	sbrc	r23, 7
     a84:	80 95       	com	r24
     a86:	98 2f       	mov	r25, r24
     a88:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
		lcd_goto_xy(0,1);
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	61 e0       	ldi	r22, 0x01	; 1
     a90:	0e 94 8f 08 	call	0x111e	; 0x111e <lcd_goto_xy>
		print_long(diferencia_motores);
     a94:	b8 01       	movw	r22, r16
     a96:	88 27       	eor	r24, r24
     a98:	77 fd       	sbrc	r23, 7
     a9a:	80 95       	com	r24
     a9c:	98 2f       	mov	r25, r24
     a9e:	0e 94 43 09 	call	0x1286	; 0x1286 <print_long>
		set_motors(m1,m2);
     aa2:	c7 01       	movw	r24, r14
     aa4:	b6 01       	movw	r22, r12
     aa6:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
	}
     aaa:	3b cf       	rjmp	.-394    	; 0x922 <__stack+0x23>

	while(1){
		
			unsigned int posicion_linea = read_line(sensores,IR_EMITTERS_ON);
     aac:	ce 01       	movw	r24, r28
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	61 e0       	ldi	r22, 0x01	; 1
     ab2:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <read_line>
			
			set_motors(m_max,m_max);
     ab6:	88 ec       	ldi	r24, 0xC8	; 200
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	68 ec       	ldi	r22, 0xC8	; 200
     abc:	70 e0       	ldi	r23, 0x00	; 0
     abe:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
			
				
			if (sensores[2] < 100)
     ac2:	8d 81       	ldd	r24, Y+5	; 0x05
     ac4:	9e 81       	ldd	r25, Y+6	; 0x06
     ac6:	84 36       	cpi	r24, 0x64	; 100
     ac8:	91 05       	cpc	r25, r1
     aca:	80 f7       	brcc	.-32     	; 0xaac <__stack+0x1ad>
			{
				set_motors(0,0);
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	60 e0       	ldi	r22, 0x00	; 0
     ad2:	70 e0       	ldi	r23, 0x00	; 0
     ad4:	0e 94 24 0a 	call	0x1448	; 0x1448 <set_motors>
			}
				
	}


}
     ad8:	80 e0       	ldi	r24, 0x00	; 0
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	2a 96       	adiw	r28, 0x0a	; 10
     ade:	0f b6       	in	r0, 0x3f	; 63
     ae0:	f8 94       	cli
     ae2:	de bf       	out	0x3e, r29	; 62
     ae4:	0f be       	out	0x3f, r0	; 63
     ae6:	cd bf       	out	0x3d, r28	; 61
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	1f 91       	pop	r17
     aee:	0f 91       	pop	r16
     af0:	ff 90       	pop	r15
     af2:	ef 90       	pop	r14
     af4:	df 90       	pop	r13
     af6:	cf 90       	pop	r12
     af8:	bf 90       	pop	r11
     afa:	af 90       	pop	r10
     afc:	9f 90       	pop	r9
     afe:	8f 90       	pop	r8
     b00:	08 95       	ret

00000b02 <__subsf3>:
     b02:	50 58       	subi	r21, 0x80	; 128

00000b04 <__addsf3>:
     b04:	bb 27       	eor	r27, r27
     b06:	aa 27       	eor	r26, r26
     b08:	0e d0       	rcall	.+28     	; 0xb26 <__addsf3x>
     b0a:	4d c1       	rjmp	.+666    	; 0xda6 <__fp_round>
     b0c:	3e d1       	rcall	.+636    	; 0xd8a <__fp_pscA>
     b0e:	30 f0       	brcs	.+12     	; 0xb1c <__addsf3+0x18>
     b10:	43 d1       	rcall	.+646    	; 0xd98 <__fp_pscB>
     b12:	20 f0       	brcs	.+8      	; 0xb1c <__addsf3+0x18>
     b14:	31 f4       	brne	.+12     	; 0xb22 <__addsf3+0x1e>
     b16:	9f 3f       	cpi	r25, 0xFF	; 255
     b18:	11 f4       	brne	.+4      	; 0xb1e <__addsf3+0x1a>
     b1a:	1e f4       	brtc	.+6      	; 0xb22 <__addsf3+0x1e>
     b1c:	33 c1       	rjmp	.+614    	; 0xd84 <__fp_nan>
     b1e:	0e f4       	brtc	.+2      	; 0xb22 <__addsf3+0x1e>
     b20:	e0 95       	com	r30
     b22:	e7 fb       	bst	r30, 7
     b24:	29 c1       	rjmp	.+594    	; 0xd78 <__fp_inf>

00000b26 <__addsf3x>:
     b26:	e9 2f       	mov	r30, r25
     b28:	4f d1       	rcall	.+670    	; 0xdc8 <__fp_split3>
     b2a:	80 f3       	brcs	.-32     	; 0xb0c <__addsf3+0x8>
     b2c:	ba 17       	cp	r27, r26
     b2e:	62 07       	cpc	r22, r18
     b30:	73 07       	cpc	r23, r19
     b32:	84 07       	cpc	r24, r20
     b34:	95 07       	cpc	r25, r21
     b36:	18 f0       	brcs	.+6      	; 0xb3e <__addsf3x+0x18>
     b38:	71 f4       	brne	.+28     	; 0xb56 <__addsf3x+0x30>
     b3a:	9e f5       	brtc	.+102    	; 0xba2 <__addsf3x+0x7c>
     b3c:	67 c1       	rjmp	.+718    	; 0xe0c <__fp_zero>
     b3e:	0e f4       	brtc	.+2      	; 0xb42 <__addsf3x+0x1c>
     b40:	e0 95       	com	r30
     b42:	0b 2e       	mov	r0, r27
     b44:	ba 2f       	mov	r27, r26
     b46:	a0 2d       	mov	r26, r0
     b48:	0b 01       	movw	r0, r22
     b4a:	b9 01       	movw	r22, r18
     b4c:	90 01       	movw	r18, r0
     b4e:	0c 01       	movw	r0, r24
     b50:	ca 01       	movw	r24, r20
     b52:	a0 01       	movw	r20, r0
     b54:	11 24       	eor	r1, r1
     b56:	ff 27       	eor	r31, r31
     b58:	59 1b       	sub	r21, r25
     b5a:	99 f0       	breq	.+38     	; 0xb82 <__addsf3x+0x5c>
     b5c:	59 3f       	cpi	r21, 0xF9	; 249
     b5e:	50 f4       	brcc	.+20     	; 0xb74 <__addsf3x+0x4e>
     b60:	50 3e       	cpi	r21, 0xE0	; 224
     b62:	68 f1       	brcs	.+90     	; 0xbbe <__addsf3x+0x98>
     b64:	1a 16       	cp	r1, r26
     b66:	f0 40       	sbci	r31, 0x00	; 0
     b68:	a2 2f       	mov	r26, r18
     b6a:	23 2f       	mov	r18, r19
     b6c:	34 2f       	mov	r19, r20
     b6e:	44 27       	eor	r20, r20
     b70:	58 5f       	subi	r21, 0xF8	; 248
     b72:	f3 cf       	rjmp	.-26     	; 0xb5a <__addsf3x+0x34>
     b74:	46 95       	lsr	r20
     b76:	37 95       	ror	r19
     b78:	27 95       	ror	r18
     b7a:	a7 95       	ror	r26
     b7c:	f0 40       	sbci	r31, 0x00	; 0
     b7e:	53 95       	inc	r21
     b80:	c9 f7       	brne	.-14     	; 0xb74 <__addsf3x+0x4e>
     b82:	7e f4       	brtc	.+30     	; 0xba2 <__addsf3x+0x7c>
     b84:	1f 16       	cp	r1, r31
     b86:	ba 0b       	sbc	r27, r26
     b88:	62 0b       	sbc	r22, r18
     b8a:	73 0b       	sbc	r23, r19
     b8c:	84 0b       	sbc	r24, r20
     b8e:	ba f0       	brmi	.+46     	; 0xbbe <__addsf3x+0x98>
     b90:	91 50       	subi	r25, 0x01	; 1
     b92:	a1 f0       	breq	.+40     	; 0xbbc <__addsf3x+0x96>
     b94:	ff 0f       	add	r31, r31
     b96:	bb 1f       	adc	r27, r27
     b98:	66 1f       	adc	r22, r22
     b9a:	77 1f       	adc	r23, r23
     b9c:	88 1f       	adc	r24, r24
     b9e:	c2 f7       	brpl	.-16     	; 0xb90 <__addsf3x+0x6a>
     ba0:	0e c0       	rjmp	.+28     	; 0xbbe <__addsf3x+0x98>
     ba2:	ba 0f       	add	r27, r26
     ba4:	62 1f       	adc	r22, r18
     ba6:	73 1f       	adc	r23, r19
     ba8:	84 1f       	adc	r24, r20
     baa:	48 f4       	brcc	.+18     	; 0xbbe <__addsf3x+0x98>
     bac:	87 95       	ror	r24
     bae:	77 95       	ror	r23
     bb0:	67 95       	ror	r22
     bb2:	b7 95       	ror	r27
     bb4:	f7 95       	ror	r31
     bb6:	9e 3f       	cpi	r25, 0xFE	; 254
     bb8:	08 f0       	brcs	.+2      	; 0xbbc <__addsf3x+0x96>
     bba:	b3 cf       	rjmp	.-154    	; 0xb22 <__addsf3+0x1e>
     bbc:	93 95       	inc	r25
     bbe:	88 0f       	add	r24, r24
     bc0:	08 f0       	brcs	.+2      	; 0xbc4 <__addsf3x+0x9e>
     bc2:	99 27       	eor	r25, r25
     bc4:	ee 0f       	add	r30, r30
     bc6:	97 95       	ror	r25
     bc8:	87 95       	ror	r24
     bca:	08 95       	ret

00000bcc <__divsf3>:
     bcc:	0c d0       	rcall	.+24     	; 0xbe6 <__divsf3x>
     bce:	eb c0       	rjmp	.+470    	; 0xda6 <__fp_round>
     bd0:	e3 d0       	rcall	.+454    	; 0xd98 <__fp_pscB>
     bd2:	40 f0       	brcs	.+16     	; 0xbe4 <__divsf3+0x18>
     bd4:	da d0       	rcall	.+436    	; 0xd8a <__fp_pscA>
     bd6:	30 f0       	brcs	.+12     	; 0xbe4 <__divsf3+0x18>
     bd8:	21 f4       	brne	.+8      	; 0xbe2 <__divsf3+0x16>
     bda:	5f 3f       	cpi	r21, 0xFF	; 255
     bdc:	19 f0       	breq	.+6      	; 0xbe4 <__divsf3+0x18>
     bde:	cc c0       	rjmp	.+408    	; 0xd78 <__fp_inf>
     be0:	51 11       	cpse	r21, r1
     be2:	15 c1       	rjmp	.+554    	; 0xe0e <__fp_szero>
     be4:	cf c0       	rjmp	.+414    	; 0xd84 <__fp_nan>

00000be6 <__divsf3x>:
     be6:	f0 d0       	rcall	.+480    	; 0xdc8 <__fp_split3>
     be8:	98 f3       	brcs	.-26     	; 0xbd0 <__divsf3+0x4>

00000bea <__divsf3_pse>:
     bea:	99 23       	and	r25, r25
     bec:	c9 f3       	breq	.-14     	; 0xbe0 <__divsf3+0x14>
     bee:	55 23       	and	r21, r21
     bf0:	b1 f3       	breq	.-20     	; 0xbde <__divsf3+0x12>
     bf2:	95 1b       	sub	r25, r21
     bf4:	55 0b       	sbc	r21, r21
     bf6:	bb 27       	eor	r27, r27
     bf8:	aa 27       	eor	r26, r26
     bfa:	62 17       	cp	r22, r18
     bfc:	73 07       	cpc	r23, r19
     bfe:	84 07       	cpc	r24, r20
     c00:	38 f0       	brcs	.+14     	; 0xc10 <__divsf3_pse+0x26>
     c02:	9f 5f       	subi	r25, 0xFF	; 255
     c04:	5f 4f       	sbci	r21, 0xFF	; 255
     c06:	22 0f       	add	r18, r18
     c08:	33 1f       	adc	r19, r19
     c0a:	44 1f       	adc	r20, r20
     c0c:	aa 1f       	adc	r26, r26
     c0e:	a9 f3       	breq	.-22     	; 0xbfa <__divsf3_pse+0x10>
     c10:	33 d0       	rcall	.+102    	; 0xc78 <__divsf3_pse+0x8e>
     c12:	0e 2e       	mov	r0, r30
     c14:	3a f0       	brmi	.+14     	; 0xc24 <__divsf3_pse+0x3a>
     c16:	e0 e8       	ldi	r30, 0x80	; 128
     c18:	30 d0       	rcall	.+96     	; 0xc7a <__divsf3_pse+0x90>
     c1a:	91 50       	subi	r25, 0x01	; 1
     c1c:	50 40       	sbci	r21, 0x00	; 0
     c1e:	e6 95       	lsr	r30
     c20:	00 1c       	adc	r0, r0
     c22:	ca f7       	brpl	.-14     	; 0xc16 <__divsf3_pse+0x2c>
     c24:	29 d0       	rcall	.+82     	; 0xc78 <__divsf3_pse+0x8e>
     c26:	fe 2f       	mov	r31, r30
     c28:	27 d0       	rcall	.+78     	; 0xc78 <__divsf3_pse+0x8e>
     c2a:	66 0f       	add	r22, r22
     c2c:	77 1f       	adc	r23, r23
     c2e:	88 1f       	adc	r24, r24
     c30:	bb 1f       	adc	r27, r27
     c32:	26 17       	cp	r18, r22
     c34:	37 07       	cpc	r19, r23
     c36:	48 07       	cpc	r20, r24
     c38:	ab 07       	cpc	r26, r27
     c3a:	b0 e8       	ldi	r27, 0x80	; 128
     c3c:	09 f0       	breq	.+2      	; 0xc40 <__divsf3_pse+0x56>
     c3e:	bb 0b       	sbc	r27, r27
     c40:	80 2d       	mov	r24, r0
     c42:	bf 01       	movw	r22, r30
     c44:	ff 27       	eor	r31, r31
     c46:	93 58       	subi	r25, 0x83	; 131
     c48:	5f 4f       	sbci	r21, 0xFF	; 255
     c4a:	2a f0       	brmi	.+10     	; 0xc56 <__divsf3_pse+0x6c>
     c4c:	9e 3f       	cpi	r25, 0xFE	; 254
     c4e:	51 05       	cpc	r21, r1
     c50:	68 f0       	brcs	.+26     	; 0xc6c <__divsf3_pse+0x82>
     c52:	92 c0       	rjmp	.+292    	; 0xd78 <__fp_inf>
     c54:	dc c0       	rjmp	.+440    	; 0xe0e <__fp_szero>
     c56:	5f 3f       	cpi	r21, 0xFF	; 255
     c58:	ec f3       	brlt	.-6      	; 0xc54 <__divsf3_pse+0x6a>
     c5a:	98 3e       	cpi	r25, 0xE8	; 232
     c5c:	dc f3       	brlt	.-10     	; 0xc54 <__divsf3_pse+0x6a>
     c5e:	86 95       	lsr	r24
     c60:	77 95       	ror	r23
     c62:	67 95       	ror	r22
     c64:	b7 95       	ror	r27
     c66:	f7 95       	ror	r31
     c68:	9f 5f       	subi	r25, 0xFF	; 255
     c6a:	c9 f7       	brne	.-14     	; 0xc5e <__divsf3_pse+0x74>
     c6c:	88 0f       	add	r24, r24
     c6e:	91 1d       	adc	r25, r1
     c70:	96 95       	lsr	r25
     c72:	87 95       	ror	r24
     c74:	97 f9       	bld	r25, 7
     c76:	08 95       	ret
     c78:	e1 e0       	ldi	r30, 0x01	; 1
     c7a:	66 0f       	add	r22, r22
     c7c:	77 1f       	adc	r23, r23
     c7e:	88 1f       	adc	r24, r24
     c80:	bb 1f       	adc	r27, r27
     c82:	62 17       	cp	r22, r18
     c84:	73 07       	cpc	r23, r19
     c86:	84 07       	cpc	r24, r20
     c88:	ba 07       	cpc	r27, r26
     c8a:	20 f0       	brcs	.+8      	; 0xc94 <__divsf3_pse+0xaa>
     c8c:	62 1b       	sub	r22, r18
     c8e:	73 0b       	sbc	r23, r19
     c90:	84 0b       	sbc	r24, r20
     c92:	ba 0b       	sbc	r27, r26
     c94:	ee 1f       	adc	r30, r30
     c96:	88 f7       	brcc	.-30     	; 0xc7a <__divsf3_pse+0x90>
     c98:	e0 95       	com	r30
     c9a:	08 95       	ret

00000c9c <__fixsfsi>:
     c9c:	04 d0       	rcall	.+8      	; 0xca6 <__fixunssfsi>
     c9e:	68 94       	set
     ca0:	b1 11       	cpse	r27, r1
     ca2:	b5 c0       	rjmp	.+362    	; 0xe0e <__fp_szero>
     ca4:	08 95       	ret

00000ca6 <__fixunssfsi>:
     ca6:	98 d0       	rcall	.+304    	; 0xdd8 <__fp_splitA>
     ca8:	88 f0       	brcs	.+34     	; 0xccc <__fixunssfsi+0x26>
     caa:	9f 57       	subi	r25, 0x7F	; 127
     cac:	90 f0       	brcs	.+36     	; 0xcd2 <__fixunssfsi+0x2c>
     cae:	b9 2f       	mov	r27, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	b7 51       	subi	r27, 0x17	; 23
     cb4:	a0 f0       	brcs	.+40     	; 0xcde <__fixunssfsi+0x38>
     cb6:	d1 f0       	breq	.+52     	; 0xcec <__fixunssfsi+0x46>
     cb8:	66 0f       	add	r22, r22
     cba:	77 1f       	adc	r23, r23
     cbc:	88 1f       	adc	r24, r24
     cbe:	99 1f       	adc	r25, r25
     cc0:	1a f0       	brmi	.+6      	; 0xcc8 <__fixunssfsi+0x22>
     cc2:	ba 95       	dec	r27
     cc4:	c9 f7       	brne	.-14     	; 0xcb8 <__fixunssfsi+0x12>
     cc6:	12 c0       	rjmp	.+36     	; 0xcec <__fixunssfsi+0x46>
     cc8:	b1 30       	cpi	r27, 0x01	; 1
     cca:	81 f0       	breq	.+32     	; 0xcec <__fixunssfsi+0x46>
     ccc:	9f d0       	rcall	.+318    	; 0xe0c <__fp_zero>
     cce:	b1 e0       	ldi	r27, 0x01	; 1
     cd0:	08 95       	ret
     cd2:	9c c0       	rjmp	.+312    	; 0xe0c <__fp_zero>
     cd4:	67 2f       	mov	r22, r23
     cd6:	78 2f       	mov	r23, r24
     cd8:	88 27       	eor	r24, r24
     cda:	b8 5f       	subi	r27, 0xF8	; 248
     cdc:	39 f0       	breq	.+14     	; 0xcec <__fixunssfsi+0x46>
     cde:	b9 3f       	cpi	r27, 0xF9	; 249
     ce0:	cc f3       	brlt	.-14     	; 0xcd4 <__fixunssfsi+0x2e>
     ce2:	86 95       	lsr	r24
     ce4:	77 95       	ror	r23
     ce6:	67 95       	ror	r22
     ce8:	b3 95       	inc	r27
     cea:	d9 f7       	brne	.-10     	; 0xce2 <__fixunssfsi+0x3c>
     cec:	3e f4       	brtc	.+14     	; 0xcfc <__fixunssfsi+0x56>
     cee:	90 95       	com	r25
     cf0:	80 95       	com	r24
     cf2:	70 95       	com	r23
     cf4:	61 95       	neg	r22
     cf6:	7f 4f       	sbci	r23, 0xFF	; 255
     cf8:	8f 4f       	sbci	r24, 0xFF	; 255
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	08 95       	ret

00000cfe <__floatunsisf>:
     cfe:	e8 94       	clt
     d00:	09 c0       	rjmp	.+18     	; 0xd14 <__floatsisf+0x12>

00000d02 <__floatsisf>:
     d02:	97 fb       	bst	r25, 7
     d04:	3e f4       	brtc	.+14     	; 0xd14 <__floatsisf+0x12>
     d06:	90 95       	com	r25
     d08:	80 95       	com	r24
     d0a:	70 95       	com	r23
     d0c:	61 95       	neg	r22
     d0e:	7f 4f       	sbci	r23, 0xFF	; 255
     d10:	8f 4f       	sbci	r24, 0xFF	; 255
     d12:	9f 4f       	sbci	r25, 0xFF	; 255
     d14:	99 23       	and	r25, r25
     d16:	a9 f0       	breq	.+42     	; 0xd42 <__floatsisf+0x40>
     d18:	f9 2f       	mov	r31, r25
     d1a:	96 e9       	ldi	r25, 0x96	; 150
     d1c:	bb 27       	eor	r27, r27
     d1e:	93 95       	inc	r25
     d20:	f6 95       	lsr	r31
     d22:	87 95       	ror	r24
     d24:	77 95       	ror	r23
     d26:	67 95       	ror	r22
     d28:	b7 95       	ror	r27
     d2a:	f1 11       	cpse	r31, r1
     d2c:	f8 cf       	rjmp	.-16     	; 0xd1e <__floatsisf+0x1c>
     d2e:	fa f4       	brpl	.+62     	; 0xd6e <__floatsisf+0x6c>
     d30:	bb 0f       	add	r27, r27
     d32:	11 f4       	brne	.+4      	; 0xd38 <__floatsisf+0x36>
     d34:	60 ff       	sbrs	r22, 0
     d36:	1b c0       	rjmp	.+54     	; 0xd6e <__floatsisf+0x6c>
     d38:	6f 5f       	subi	r22, 0xFF	; 255
     d3a:	7f 4f       	sbci	r23, 0xFF	; 255
     d3c:	8f 4f       	sbci	r24, 0xFF	; 255
     d3e:	9f 4f       	sbci	r25, 0xFF	; 255
     d40:	16 c0       	rjmp	.+44     	; 0xd6e <__floatsisf+0x6c>
     d42:	88 23       	and	r24, r24
     d44:	11 f0       	breq	.+4      	; 0xd4a <__floatsisf+0x48>
     d46:	96 e9       	ldi	r25, 0x96	; 150
     d48:	11 c0       	rjmp	.+34     	; 0xd6c <__floatsisf+0x6a>
     d4a:	77 23       	and	r23, r23
     d4c:	21 f0       	breq	.+8      	; 0xd56 <__floatsisf+0x54>
     d4e:	9e e8       	ldi	r25, 0x8E	; 142
     d50:	87 2f       	mov	r24, r23
     d52:	76 2f       	mov	r23, r22
     d54:	05 c0       	rjmp	.+10     	; 0xd60 <__floatsisf+0x5e>
     d56:	66 23       	and	r22, r22
     d58:	71 f0       	breq	.+28     	; 0xd76 <__floatsisf+0x74>
     d5a:	96 e8       	ldi	r25, 0x86	; 134
     d5c:	86 2f       	mov	r24, r22
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	2a f0       	brmi	.+10     	; 0xd6e <__floatsisf+0x6c>
     d64:	9a 95       	dec	r25
     d66:	66 0f       	add	r22, r22
     d68:	77 1f       	adc	r23, r23
     d6a:	88 1f       	adc	r24, r24
     d6c:	da f7       	brpl	.-10     	; 0xd64 <__floatsisf+0x62>
     d6e:	88 0f       	add	r24, r24
     d70:	96 95       	lsr	r25
     d72:	87 95       	ror	r24
     d74:	97 f9       	bld	r25, 7
     d76:	08 95       	ret

00000d78 <__fp_inf>:
     d78:	97 f9       	bld	r25, 7
     d7a:	9f 67       	ori	r25, 0x7F	; 127
     d7c:	80 e8       	ldi	r24, 0x80	; 128
     d7e:	70 e0       	ldi	r23, 0x00	; 0
     d80:	60 e0       	ldi	r22, 0x00	; 0
     d82:	08 95       	ret

00000d84 <__fp_nan>:
     d84:	9f ef       	ldi	r25, 0xFF	; 255
     d86:	80 ec       	ldi	r24, 0xC0	; 192
     d88:	08 95       	ret

00000d8a <__fp_pscA>:
     d8a:	00 24       	eor	r0, r0
     d8c:	0a 94       	dec	r0
     d8e:	16 16       	cp	r1, r22
     d90:	17 06       	cpc	r1, r23
     d92:	18 06       	cpc	r1, r24
     d94:	09 06       	cpc	r0, r25
     d96:	08 95       	ret

00000d98 <__fp_pscB>:
     d98:	00 24       	eor	r0, r0
     d9a:	0a 94       	dec	r0
     d9c:	12 16       	cp	r1, r18
     d9e:	13 06       	cpc	r1, r19
     da0:	14 06       	cpc	r1, r20
     da2:	05 06       	cpc	r0, r21
     da4:	08 95       	ret

00000da6 <__fp_round>:
     da6:	09 2e       	mov	r0, r25
     da8:	03 94       	inc	r0
     daa:	00 0c       	add	r0, r0
     dac:	11 f4       	brne	.+4      	; 0xdb2 <__fp_round+0xc>
     dae:	88 23       	and	r24, r24
     db0:	52 f0       	brmi	.+20     	; 0xdc6 <__fp_round+0x20>
     db2:	bb 0f       	add	r27, r27
     db4:	40 f4       	brcc	.+16     	; 0xdc6 <__fp_round+0x20>
     db6:	bf 2b       	or	r27, r31
     db8:	11 f4       	brne	.+4      	; 0xdbe <__fp_round+0x18>
     dba:	60 ff       	sbrs	r22, 0
     dbc:	04 c0       	rjmp	.+8      	; 0xdc6 <__fp_round+0x20>
     dbe:	6f 5f       	subi	r22, 0xFF	; 255
     dc0:	7f 4f       	sbci	r23, 0xFF	; 255
     dc2:	8f 4f       	sbci	r24, 0xFF	; 255
     dc4:	9f 4f       	sbci	r25, 0xFF	; 255
     dc6:	08 95       	ret

00000dc8 <__fp_split3>:
     dc8:	57 fd       	sbrc	r21, 7
     dca:	90 58       	subi	r25, 0x80	; 128
     dcc:	44 0f       	add	r20, r20
     dce:	55 1f       	adc	r21, r21
     dd0:	59 f0       	breq	.+22     	; 0xde8 <__fp_splitA+0x10>
     dd2:	5f 3f       	cpi	r21, 0xFF	; 255
     dd4:	71 f0       	breq	.+28     	; 0xdf2 <__fp_splitA+0x1a>
     dd6:	47 95       	ror	r20

00000dd8 <__fp_splitA>:
     dd8:	88 0f       	add	r24, r24
     dda:	97 fb       	bst	r25, 7
     ddc:	99 1f       	adc	r25, r25
     dde:	61 f0       	breq	.+24     	; 0xdf8 <__fp_splitA+0x20>
     de0:	9f 3f       	cpi	r25, 0xFF	; 255
     de2:	79 f0       	breq	.+30     	; 0xe02 <__fp_splitA+0x2a>
     de4:	87 95       	ror	r24
     de6:	08 95       	ret
     de8:	12 16       	cp	r1, r18
     dea:	13 06       	cpc	r1, r19
     dec:	14 06       	cpc	r1, r20
     dee:	55 1f       	adc	r21, r21
     df0:	f2 cf       	rjmp	.-28     	; 0xdd6 <__fp_split3+0xe>
     df2:	46 95       	lsr	r20
     df4:	f1 df       	rcall	.-30     	; 0xdd8 <__fp_splitA>
     df6:	08 c0       	rjmp	.+16     	; 0xe08 <__fp_splitA+0x30>
     df8:	16 16       	cp	r1, r22
     dfa:	17 06       	cpc	r1, r23
     dfc:	18 06       	cpc	r1, r24
     dfe:	99 1f       	adc	r25, r25
     e00:	f1 cf       	rjmp	.-30     	; 0xde4 <__fp_splitA+0xc>
     e02:	86 95       	lsr	r24
     e04:	71 05       	cpc	r23, r1
     e06:	61 05       	cpc	r22, r1
     e08:	08 94       	sec
     e0a:	08 95       	ret

00000e0c <__fp_zero>:
     e0c:	e8 94       	clt

00000e0e <__fp_szero>:
     e0e:	bb 27       	eor	r27, r27
     e10:	66 27       	eor	r22, r22
     e12:	77 27       	eor	r23, r23
     e14:	cb 01       	movw	r24, r22
     e16:	97 f9       	bld	r25, 7
     e18:	08 95       	ret

00000e1a <__mulsf3>:
     e1a:	0b d0       	rcall	.+22     	; 0xe32 <__mulsf3x>
     e1c:	c4 cf       	rjmp	.-120    	; 0xda6 <__fp_round>
     e1e:	b5 df       	rcall	.-150    	; 0xd8a <__fp_pscA>
     e20:	28 f0       	brcs	.+10     	; 0xe2c <__mulsf3+0x12>
     e22:	ba df       	rcall	.-140    	; 0xd98 <__fp_pscB>
     e24:	18 f0       	brcs	.+6      	; 0xe2c <__mulsf3+0x12>
     e26:	95 23       	and	r25, r21
     e28:	09 f0       	breq	.+2      	; 0xe2c <__mulsf3+0x12>
     e2a:	a6 cf       	rjmp	.-180    	; 0xd78 <__fp_inf>
     e2c:	ab cf       	rjmp	.-170    	; 0xd84 <__fp_nan>
     e2e:	11 24       	eor	r1, r1
     e30:	ee cf       	rjmp	.-36     	; 0xe0e <__fp_szero>

00000e32 <__mulsf3x>:
     e32:	ca df       	rcall	.-108    	; 0xdc8 <__fp_split3>
     e34:	a0 f3       	brcs	.-24     	; 0xe1e <__mulsf3+0x4>

00000e36 <__mulsf3_pse>:
     e36:	95 9f       	mul	r25, r21
     e38:	d1 f3       	breq	.-12     	; 0xe2e <__mulsf3+0x14>
     e3a:	95 0f       	add	r25, r21
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	55 1f       	adc	r21, r21
     e40:	62 9f       	mul	r22, r18
     e42:	f0 01       	movw	r30, r0
     e44:	72 9f       	mul	r23, r18
     e46:	bb 27       	eor	r27, r27
     e48:	f0 0d       	add	r31, r0
     e4a:	b1 1d       	adc	r27, r1
     e4c:	63 9f       	mul	r22, r19
     e4e:	aa 27       	eor	r26, r26
     e50:	f0 0d       	add	r31, r0
     e52:	b1 1d       	adc	r27, r1
     e54:	aa 1f       	adc	r26, r26
     e56:	64 9f       	mul	r22, r20
     e58:	66 27       	eor	r22, r22
     e5a:	b0 0d       	add	r27, r0
     e5c:	a1 1d       	adc	r26, r1
     e5e:	66 1f       	adc	r22, r22
     e60:	82 9f       	mul	r24, r18
     e62:	22 27       	eor	r18, r18
     e64:	b0 0d       	add	r27, r0
     e66:	a1 1d       	adc	r26, r1
     e68:	62 1f       	adc	r22, r18
     e6a:	73 9f       	mul	r23, r19
     e6c:	b0 0d       	add	r27, r0
     e6e:	a1 1d       	adc	r26, r1
     e70:	62 1f       	adc	r22, r18
     e72:	83 9f       	mul	r24, r19
     e74:	a0 0d       	add	r26, r0
     e76:	61 1d       	adc	r22, r1
     e78:	22 1f       	adc	r18, r18
     e7a:	74 9f       	mul	r23, r20
     e7c:	33 27       	eor	r19, r19
     e7e:	a0 0d       	add	r26, r0
     e80:	61 1d       	adc	r22, r1
     e82:	23 1f       	adc	r18, r19
     e84:	84 9f       	mul	r24, r20
     e86:	60 0d       	add	r22, r0
     e88:	21 1d       	adc	r18, r1
     e8a:	82 2f       	mov	r24, r18
     e8c:	76 2f       	mov	r23, r22
     e8e:	6a 2f       	mov	r22, r26
     e90:	11 24       	eor	r1, r1
     e92:	9f 57       	subi	r25, 0x7F	; 127
     e94:	50 40       	sbci	r21, 0x00	; 0
     e96:	8a f0       	brmi	.+34     	; 0xeba <__mulsf3_pse+0x84>
     e98:	e1 f0       	breq	.+56     	; 0xed2 <__mulsf3_pse+0x9c>
     e9a:	88 23       	and	r24, r24
     e9c:	4a f0       	brmi	.+18     	; 0xeb0 <__mulsf3_pse+0x7a>
     e9e:	ee 0f       	add	r30, r30
     ea0:	ff 1f       	adc	r31, r31
     ea2:	bb 1f       	adc	r27, r27
     ea4:	66 1f       	adc	r22, r22
     ea6:	77 1f       	adc	r23, r23
     ea8:	88 1f       	adc	r24, r24
     eaa:	91 50       	subi	r25, 0x01	; 1
     eac:	50 40       	sbci	r21, 0x00	; 0
     eae:	a9 f7       	brne	.-22     	; 0xe9a <__mulsf3_pse+0x64>
     eb0:	9e 3f       	cpi	r25, 0xFE	; 254
     eb2:	51 05       	cpc	r21, r1
     eb4:	70 f0       	brcs	.+28     	; 0xed2 <__mulsf3_pse+0x9c>
     eb6:	60 cf       	rjmp	.-320    	; 0xd78 <__fp_inf>
     eb8:	aa cf       	rjmp	.-172    	; 0xe0e <__fp_szero>
     eba:	5f 3f       	cpi	r21, 0xFF	; 255
     ebc:	ec f3       	brlt	.-6      	; 0xeb8 <__mulsf3_pse+0x82>
     ebe:	98 3e       	cpi	r25, 0xE8	; 232
     ec0:	dc f3       	brlt	.-10     	; 0xeb8 <__mulsf3_pse+0x82>
     ec2:	86 95       	lsr	r24
     ec4:	77 95       	ror	r23
     ec6:	67 95       	ror	r22
     ec8:	b7 95       	ror	r27
     eca:	f7 95       	ror	r31
     ecc:	e7 95       	ror	r30
     ece:	9f 5f       	subi	r25, 0xFF	; 255
     ed0:	c1 f7       	brne	.-16     	; 0xec2 <__mulsf3_pse+0x8c>
     ed2:	fe 2b       	or	r31, r30
     ed4:	88 0f       	add	r24, r24
     ed6:	91 1d       	adc	r25, r1
     ed8:	96 95       	lsr	r25
     eda:	87 95       	ror	r24
     edc:	97 f9       	bld	r25, 7
     ede:	08 95       	ret

00000ee0 <_ZN12OrangutanLCD8busyWaitEv>:
     ee0:	ef 92       	push	r14
     ee2:	ff 92       	push	r15
     ee4:	0f 93       	push	r16
     ee6:	1f 93       	push	r17
     ee8:	6a b1       	in	r22, 0x0a	; 10
     eea:	57 98       	cbi	0x0a, 7	; 10
     eec:	5a 98       	cbi	0x0b, 2	; 11
     eee:	28 9a       	sbi	0x05, 0	; 5
     ef0:	e0 90 1e 01 	lds	r14, 0x011E
     ef4:	f0 90 1f 01 	lds	r15, 0x011F
     ef8:	00 91 20 01 	lds	r16, 0x0120
     efc:	10 91 21 01 	lds	r17, 0x0121
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	41 e0       	ldi	r20, 0x01	; 1
     f06:	50 e0       	ldi	r21, 0x00	; 0
     f08:	ca 01       	movw	r24, r20
     f0a:	6f 93       	push	r22
     f0c:	64 e0       	ldi	r22, 0x04	; 4
     f0e:	6a 95       	dec	r22
     f10:	f1 f7       	brne	.-4      	; 0xf0e <_ZN12OrangutanLCD8busyWaitEv+0x2e>
     f12:	6f 91       	pop	r22
     f14:	01 97       	sbiw	r24, 0x01	; 1
     f16:	c9 f7       	brne	.-14     	; 0xf0a <_ZN12OrangutanLCD8busyWaitEv+0x2a>
     f18:	5c 9a       	sbi	0x0b, 4	; 11
     f1a:	ca 01       	movw	r24, r20
     f1c:	6f 93       	push	r22
     f1e:	64 e0       	ldi	r22, 0x04	; 4
     f20:	6a 95       	dec	r22
     f22:	f1 f7       	brne	.-4      	; 0xf20 <_ZN12OrangutanLCD8busyWaitEv+0x40>
     f24:	6f 91       	pop	r22
     f26:	01 97       	sbiw	r24, 0x01	; 1
     f28:	c9 f7       	brne	.-14     	; 0xf1c <_ZN12OrangutanLCD8busyWaitEv+0x3c>
     f2a:	89 b1       	in	r24, 0x09	; 9
     f2c:	5c 98       	cbi	0x0b, 4	; 11
     f2e:	fa 01       	movw	r30, r20
     f30:	6f 93       	push	r22
     f32:	64 e0       	ldi	r22, 0x04	; 4
     f34:	6a 95       	dec	r22
     f36:	f1 f7       	brne	.-4      	; 0xf34 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     f38:	6f 91       	pop	r22
     f3a:	31 97       	sbiw	r30, 0x01	; 1
     f3c:	c9 f7       	brne	.-14     	; 0xf30 <_ZN12OrangutanLCD8busyWaitEv+0x50>
     f3e:	5c 9a       	sbi	0x0b, 4	; 11
     f40:	fa 01       	movw	r30, r20
     f42:	6f 93       	push	r22
     f44:	64 e0       	ldi	r22, 0x04	; 4
     f46:	6a 95       	dec	r22
     f48:	f1 f7       	brne	.-4      	; 0xf46 <_ZN12OrangutanLCD8busyWaitEv+0x66>
     f4a:	6f 91       	pop	r22
     f4c:	31 97       	sbiw	r30, 0x01	; 1
     f4e:	c9 f7       	brne	.-14     	; 0xf42 <_ZN12OrangutanLCD8busyWaitEv+0x62>
     f50:	5c 98       	cbi	0x0b, 4	; 11
     f52:	87 ff       	sbrs	r24, 7
     f54:	0b c0       	rjmp	.+22     	; 0xf6c <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     f56:	2c 5f       	subi	r18, 0xFC	; 252
     f58:	3f 4f       	sbci	r19, 0xFF	; 255
     f5a:	c9 01       	movw	r24, r18
     f5c:	a0 e0       	ldi	r26, 0x00	; 0
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	8e 15       	cp	r24, r14
     f62:	9f 05       	cpc	r25, r15
     f64:	a0 07       	cpc	r26, r16
     f66:	b1 07       	cpc	r27, r17
     f68:	08 f4       	brcc	.+2      	; 0xf6c <_ZN12OrangutanLCD8busyWaitEv+0x8c>
     f6a:	ce cf       	rjmp	.-100    	; 0xf08 <_ZN12OrangutanLCD8busyWaitEv+0x28>
     f6c:	6a b9       	out	0x0a, r22	; 10
     f6e:	1f 91       	pop	r17
     f70:	0f 91       	pop	r16
     f72:	ff 90       	pop	r15
     f74:	ef 90       	pop	r14
     f76:	08 95       	ret

00000f78 <_ZN12OrangutanLCD8sendDataEh>:
     f78:	65 b1       	in	r22, 0x05	; 5
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	ac 01       	movw	r20, r24
     f7e:	41 70       	andi	r20, 0x01	; 1
     f80:	50 70       	andi	r21, 0x00	; 0
     f82:	44 0f       	add	r20, r20
     f84:	55 1f       	adc	r21, r21
     f86:	9c 01       	movw	r18, r24
     f88:	26 70       	andi	r18, 0x06	; 6
     f8a:	30 70       	andi	r19, 0x00	; 0
     f8c:	53 e0       	ldi	r21, 0x03	; 3
     f8e:	22 0f       	add	r18, r18
     f90:	33 1f       	adc	r19, r19
     f92:	5a 95       	dec	r21
     f94:	e1 f7       	brne	.-8      	; 0xf8e <_ZN12OrangutanLCD8sendDataEh+0x16>
     f96:	42 2b       	or	r20, r18
     f98:	6d 7c       	andi	r22, 0xCD	; 205
     f9a:	46 2b       	or	r20, r22
     f9c:	45 b9       	out	0x05, r20	; 5
     f9e:	2b b1       	in	r18, 0x0b	; 11
     fa0:	88 70       	andi	r24, 0x08	; 8
     fa2:	90 70       	andi	r25, 0x00	; 0
     fa4:	34 e0       	ldi	r19, 0x04	; 4
     fa6:	88 0f       	add	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	3a 95       	dec	r19
     fac:	e1 f7       	brne	.-8      	; 0xfa6 <_ZN12OrangutanLCD8sendDataEh+0x2e>
     fae:	2f 77       	andi	r18, 0x7F	; 127
     fb0:	28 2b       	or	r18, r24
     fb2:	2b b9       	out	0x0b, r18	; 11
     fb4:	5c 9a       	sbi	0x0b, 4	; 11
     fb6:	81 e0       	ldi	r24, 0x01	; 1
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	fc 01       	movw	r30, r24
     fbc:	6f 93       	push	r22
     fbe:	64 e0       	ldi	r22, 0x04	; 4
     fc0:	6a 95       	dec	r22
     fc2:	f1 f7       	brne	.-4      	; 0xfc0 <_ZN12OrangutanLCD8sendDataEh+0x48>
     fc4:	6f 91       	pop	r22
     fc6:	31 97       	sbiw	r30, 0x01	; 1
     fc8:	c9 f7       	brne	.-14     	; 0xfbc <_ZN12OrangutanLCD8sendDataEh+0x44>
     fca:	5c 98       	cbi	0x0b, 4	; 11
     fcc:	6f 93       	push	r22
     fce:	64 e0       	ldi	r22, 0x04	; 4
     fd0:	6a 95       	dec	r22
     fd2:	f1 f7       	brne	.-4      	; 0xfd0 <_ZN12OrangutanLCD8sendDataEh+0x58>
     fd4:	6f 91       	pop	r22
     fd6:	01 97       	sbiw	r24, 0x01	; 1
     fd8:	c9 f7       	brne	.-14     	; 0xfcc <_ZN12OrangutanLCD8sendDataEh+0x54>
     fda:	08 95       	ret

00000fdc <_ZN12OrangutanLCD5init2Ev>:
     fdc:	80 e1       	ldi	r24, 0x10	; 16
     fde:	97 e2       	ldi	r25, 0x27	; 39
     fe0:	a0 e0       	ldi	r26, 0x00	; 0
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	80 93 1e 01 	sts	0x011E, r24
     fe8:	90 93 1f 01 	sts	0x011F, r25
     fec:	a0 93 20 01 	sts	0x0120, r26
     ff0:	b0 93 21 01 	sts	0x0121, r27
     ff4:	52 9a       	sbi	0x0a, 2	; 10
     ff6:	20 9a       	sbi	0x04, 0	; 4
     ff8:	54 9a       	sbi	0x0a, 4	; 10
     ffa:	8e e1       	ldi	r24, 0x1E	; 30
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
    1002:	83 e0       	ldi	r24, 0x03	; 3
    1004:	0e 94 56 09 	call	0x12ac	; 0x12ac <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1008:	86 e0       	ldi	r24, 0x06	; 6
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
    1010:	83 e0       	ldi	r24, 0x03	; 3
    1012:	0e 94 56 09 	call	0x12ac	; 0x12ac <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1016:	82 e0       	ldi	r24, 0x02	; 2
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
    101e:	83 e0       	ldi	r24, 0x03	; 3
    1020:	0e 94 56 09 	call	0x12ac	; 0x12ac <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1024:	82 e0       	ldi	r24, 0x02	; 2
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
    102c:	82 e0       	ldi	r24, 0x02	; 2
    102e:	0e 94 56 09 	call	0x12ac	; 0x12ac <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1032:	82 e0       	ldi	r24, 0x02	; 2
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
    103a:	88 e2       	ldi	r24, 0x28	; 40
    103c:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    1040:	88 e0       	ldi	r24, 0x08	; 8
    1042:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    104c:	86 e0       	ldi	r24, 0x06	; 6
    104e:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    1052:	8c e0       	ldi	r24, 0x0C	; 12
    1054:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    1058:	08 95       	ret

0000105a <_ZN12OrangutanLCD4initEv>:
    105a:	80 91 22 01 	lds	r24, 0x0122
    105e:	88 23       	and	r24, r24
    1060:	29 f4       	brne	.+10     	; 0x106c <_ZN12OrangutanLCD4initEv+0x12>
    1062:	81 e0       	ldi	r24, 0x01	; 1
    1064:	80 93 22 01 	sts	0x0122, r24
    1068:	0e 94 ee 07 	call	0xfdc	; 0xfdc <_ZN12OrangutanLCD5init2Ev>
    106c:	08 95       	ret

0000106e <_ZN12OrangutanLCD4sendEhhh>:
    106e:	bf 92       	push	r11
    1070:	cf 92       	push	r12
    1072:	df 92       	push	r13
    1074:	ef 92       	push	r14
    1076:	ff 92       	push	r15
    1078:	0f 93       	push	r16
    107a:	1f 93       	push	r17
    107c:	08 2f       	mov	r16, r24
    107e:	16 2f       	mov	r17, r22
    1080:	f4 2e       	mov	r15, r20
    1082:	0e 94 2d 08 	call	0x105a	; 0x105a <_ZN12OrangutanLCD4initEv>
    1086:	0e 94 70 07 	call	0xee0	; 0xee0 <_ZN12OrangutanLCD8busyWaitEv>
    108a:	b4 b0       	in	r11, 0x04	; 4
    108c:	c5 b0       	in	r12, 0x05	; 5
    108e:	da b0       	in	r13, 0x0a	; 10
    1090:	eb b0       	in	r14, 0x0b	; 11
    1092:	28 98       	cbi	0x05, 0	; 5
    1094:	11 23       	and	r17, r17
    1096:	11 f0       	breq	.+4      	; 0x109c <_ZN12OrangutanLCD4sendEhhh+0x2e>
    1098:	5a 9a       	sbi	0x0b, 2	; 11
    109a:	01 c0       	rjmp	.+2      	; 0x109e <_ZN12OrangutanLCD4sendEhhh+0x30>
    109c:	5a 98       	cbi	0x0b, 2	; 11
    109e:	84 b1       	in	r24, 0x04	; 4
    10a0:	82 63       	ori	r24, 0x32	; 50
    10a2:	84 b9       	out	0x04, r24	; 4
    10a4:	57 9a       	sbi	0x0a, 7	; 10
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	f8 16       	cp	r15, r24
    10aa:	29 f0       	breq	.+10     	; 0x10b6 <_ZN12OrangutanLCD4sendEhhh+0x48>
    10ac:	80 2f       	mov	r24, r16
    10ae:	82 95       	swap	r24
    10b0:	8f 70       	andi	r24, 0x0F	; 15
    10b2:	0e 94 bc 07 	call	0xf78	; 0xf78 <_ZN12OrangutanLCD8sendDataEh>
    10b6:	80 2f       	mov	r24, r16
    10b8:	8f 70       	andi	r24, 0x0F	; 15
    10ba:	0e 94 bc 07 	call	0xf78	; 0xf78 <_ZN12OrangutanLCD8sendDataEh>
    10be:	da b8       	out	0x0a, r13	; 10
    10c0:	eb b8       	out	0x0b, r14	; 11
    10c2:	b4 b8       	out	0x04, r11	; 4
    10c4:	c5 b8       	out	0x05, r12	; 5
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	08 95       	ret

000010d6 <_ZN12OrangutanLCD8send_cmdEh>:
    10d6:	60 e0       	ldi	r22, 0x00	; 0
    10d8:	42 e0       	ldi	r20, 0x02	; 2
    10da:	0e 94 37 08 	call	0x106e	; 0x106e <_ZN12OrangutanLCD4sendEhhh>
    10de:	08 95       	ret

000010e0 <_ZN12OrangutanLCD6gotoXYEhh>:
    10e0:	a4 e0       	ldi	r26, 0x04	; 4
    10e2:	b0 e0       	ldi	r27, 0x00	; 0
    10e4:	e6 e7       	ldi	r30, 0x76	; 118
    10e6:	f8 e0       	ldi	r31, 0x08	; 8
    10e8:	0c 94 10 11 	jmp	0x2220	; 0x2220 <__prologue_saves__+0x1c>
    10ec:	18 2f       	mov	r17, r24
    10ee:	06 2f       	mov	r16, r22
    10f0:	80 e8       	ldi	r24, 0x80	; 128
    10f2:	89 83       	std	Y+1, r24	; 0x01
    10f4:	80 ec       	ldi	r24, 0xC0	; 192
    10f6:	8a 83       	std	Y+2, r24	; 0x02
    10f8:	84 e9       	ldi	r24, 0x94	; 148
    10fa:	8b 83       	std	Y+3, r24	; 0x03
    10fc:	84 ed       	ldi	r24, 0xD4	; 212
    10fe:	8c 83       	std	Y+4, r24	; 0x04
    1100:	fe 01       	movw	r30, r28
    1102:	e6 0f       	add	r30, r22
    1104:	f1 1d       	adc	r31, r1
    1106:	81 81       	ldd	r24, Z+1	; 0x01
    1108:	81 0f       	add	r24, r17
    110a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    110e:	10 93 1d 01 	sts	0x011D, r17
    1112:	00 93 1c 01 	sts	0x011C, r16
    1116:	24 96       	adiw	r28, 0x04	; 4
    1118:	e4 e0       	ldi	r30, 0x04	; 4
    111a:	0c 94 2c 11 	jmp	0x2258	; 0x2258 <__epilogue_restores__+0x1c>

0000111e <lcd_goto_xy>:
    111e:	0e 94 70 08 	call	0x10e0	; 0x10e0 <_ZN12OrangutanLCD6gotoXYEhh>
    1122:	08 95       	ret

00001124 <_ZN12OrangutanLCD5clearEv>:
    1124:	81 e0       	ldi	r24, 0x01	; 1
    1126:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN12OrangutanLCD8send_cmdEh>
    112a:	80 91 1a 01 	lds	r24, 0x011A
    112e:	90 91 1b 01 	lds	r25, 0x011B
    1132:	89 2b       	or	r24, r25
    1134:	19 f1       	breq	.+70     	; 0x117c <_ZN12OrangutanLCD5clearEv+0x58>
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	70 e2       	ldi	r23, 0x20	; 32
    113a:	08 c0       	rjmp	.+16     	; 0x114c <_ZN12OrangutanLCD5clearEv+0x28>
    113c:	e0 91 1a 01 	lds	r30, 0x011A
    1140:	f0 91 1b 01 	lds	r31, 0x011B
    1144:	e4 0f       	add	r30, r20
    1146:	f5 1f       	adc	r31, r21
    1148:	70 83       	st	Z, r23
    114a:	6f 5f       	subi	r22, 0xFF	; 255
    114c:	46 2f       	mov	r20, r22
    114e:	50 e0       	ldi	r21, 0x00	; 0
    1150:	80 91 0c 01 	lds	r24, 0x010C
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	20 91 0d 01 	lds	r18, 0x010D
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	fc 01       	movw	r30, r24
    1160:	e2 9f       	mul	r30, r18
    1162:	c0 01       	movw	r24, r0
    1164:	e3 9f       	mul	r30, r19
    1166:	90 0d       	add	r25, r0
    1168:	f2 9f       	mul	r31, r18
    116a:	90 0d       	add	r25, r0
    116c:	11 24       	eor	r1, r1
    116e:	48 17       	cp	r20, r24
    1170:	59 07       	cpc	r21, r25
    1172:	24 f3       	brlt	.-56     	; 0x113c <_ZN12OrangutanLCD5clearEv+0x18>
    1174:	10 92 1d 01 	sts	0x011D, r1
    1178:	10 92 1c 01 	sts	0x011C, r1
    117c:	08 95       	ret

0000117e <clear>:
    117e:	0e 94 92 08 	call	0x1124	; 0x1124 <_ZN12OrangutanLCD5clearEv>
    1182:	08 95       	ret

00001184 <_ZN12OrangutanLCD9send_dataEh>:
    1184:	61 e0       	ldi	r22, 0x01	; 1
    1186:	42 e0       	ldi	r20, 0x02	; 2
    1188:	0e 94 37 08 	call	0x106e	; 0x106e <_ZN12OrangutanLCD4sendEhhh>
    118c:	08 95       	ret

0000118e <_ZN12OrangutanLCD5printEm>:
    118e:	6f 92       	push	r6
    1190:	7f 92       	push	r7
    1192:	8f 92       	push	r8
    1194:	9f 92       	push	r9
    1196:	af 92       	push	r10
    1198:	bf 92       	push	r11
    119a:	cf 92       	push	r12
    119c:	df 92       	push	r13
    119e:	ff 92       	push	r15
    11a0:	0f 93       	push	r16
    11a2:	df 93       	push	r29
    11a4:	cf 93       	push	r28
    11a6:	cd b7       	in	r28, 0x3d	; 61
    11a8:	de b7       	in	r29, 0x3e	; 62
    11aa:	2a 97       	sbiw	r28, 0x0a	; 10
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	f8 94       	cli
    11b0:	de bf       	out	0x3e, r29	; 62
    11b2:	0f be       	out	0x3f, r0	; 63
    11b4:	cd bf       	out	0x3d, r28	; 61
    11b6:	5b 01       	movw	r10, r22
    11b8:	6c 01       	movw	r12, r24
    11ba:	0a e0       	ldi	r16, 0x0A	; 10
    11bc:	3e 01       	movw	r6, r28
    11be:	08 94       	sec
    11c0:	61 1c       	adc	r6, r1
    11c2:	71 1c       	adc	r7, r1
    11c4:	fa 2c       	mov	r15, r10
    11c6:	c6 01       	movw	r24, r12
    11c8:	b5 01       	movw	r22, r10
    11ca:	2a e0       	ldi	r18, 0x0A	; 10
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	40 e0       	ldi	r20, 0x00	; 0
    11d0:	50 e0       	ldi	r21, 0x00	; 0
    11d2:	0e 94 c5 10 	call	0x218a	; 0x218a <__udivmodsi4>
    11d6:	c9 01       	movw	r24, r18
    11d8:	da 01       	movw	r26, r20
    11da:	5c 01       	movw	r10, r24
    11dc:	6d 01       	movw	r12, r26
    11de:	01 50       	subi	r16, 0x01	; 1
    11e0:	43 01       	movw	r8, r6
    11e2:	80 0e       	add	r8, r16
    11e4:	91 1c       	adc	r9, r1
    11e6:	80 e3       	ldi	r24, 0x30	; 48
    11e8:	f8 0e       	add	r15, r24
    11ea:	c6 01       	movw	r24, r12
    11ec:	b5 01       	movw	r22, r10
    11ee:	2a e0       	ldi	r18, 0x0A	; 10
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	40 e0       	ldi	r20, 0x00	; 0
    11f4:	50 e0       	ldi	r21, 0x00	; 0
    11f6:	0e 94 92 10 	call	0x2124	; 0x2124 <__mulsi3>
    11fa:	f6 1a       	sub	r15, r22
    11fc:	f4 01       	movw	r30, r8
    11fe:	f0 82       	st	Z, r15
    1200:	a1 14       	cp	r10, r1
    1202:	b1 04       	cpc	r11, r1
    1204:	c1 04       	cpc	r12, r1
    1206:	d1 04       	cpc	r13, r1
    1208:	e9 f6       	brne	.-70     	; 0x11c4 <_ZN12OrangutanLCD5printEm+0x36>
    120a:	08 c0       	rjmp	.+16     	; 0x121c <_ZN12OrangutanLCD5printEm+0x8e>
    120c:	f6 01       	movw	r30, r12
    120e:	e0 0f       	add	r30, r16
    1210:	f1 1d       	adc	r31, r1
    1212:	80 81       	ld	r24, Z
    1214:	0e 94 c2 08 	call	0x1184	; 0x1184 <_ZN12OrangutanLCD9send_dataEh>
    1218:	0f 5f       	subi	r16, 0xFF	; 255
    121a:	04 c0       	rjmp	.+8      	; 0x1224 <_ZN12OrangutanLCD5printEm+0x96>
    121c:	6e 01       	movw	r12, r28
    121e:	08 94       	sec
    1220:	c1 1c       	adc	r12, r1
    1222:	d1 1c       	adc	r13, r1
    1224:	0a 30       	cpi	r16, 0x0A	; 10
    1226:	90 f3       	brcs	.-28     	; 0x120c <_ZN12OrangutanLCD5printEm+0x7e>
    1228:	2a 96       	adiw	r28, 0x0a	; 10
    122a:	0f b6       	in	r0, 0x3f	; 63
    122c:	f8 94       	cli
    122e:	de bf       	out	0x3e, r29	; 62
    1230:	0f be       	out	0x3f, r0	; 63
    1232:	cd bf       	out	0x3d, r28	; 61
    1234:	cf 91       	pop	r28
    1236:	df 91       	pop	r29
    1238:	0f 91       	pop	r16
    123a:	ff 90       	pop	r15
    123c:	df 90       	pop	r13
    123e:	cf 90       	pop	r12
    1240:	bf 90       	pop	r11
    1242:	af 90       	pop	r10
    1244:	9f 90       	pop	r9
    1246:	8f 90       	pop	r8
    1248:	7f 90       	pop	r7
    124a:	6f 90       	pop	r6
    124c:	08 95       	ret

0000124e <_ZN12OrangutanLCD5printEl>:
    124e:	ef 92       	push	r14
    1250:	ff 92       	push	r15
    1252:	0f 93       	push	r16
    1254:	1f 93       	push	r17
    1256:	7b 01       	movw	r14, r22
    1258:	8c 01       	movw	r16, r24
    125a:	97 ff       	sbrs	r25, 7
    125c:	0b c0       	rjmp	.+22     	; 0x1274 <_ZN12OrangutanLCD5printEl+0x26>
    125e:	10 95       	com	r17
    1260:	00 95       	com	r16
    1262:	f0 94       	com	r15
    1264:	e0 94       	com	r14
    1266:	e1 1c       	adc	r14, r1
    1268:	f1 1c       	adc	r15, r1
    126a:	01 1d       	adc	r16, r1
    126c:	11 1d       	adc	r17, r1
    126e:	8d e2       	ldi	r24, 0x2D	; 45
    1270:	0e 94 c2 08 	call	0x1184	; 0x1184 <_ZN12OrangutanLCD9send_dataEh>
    1274:	c8 01       	movw	r24, r16
    1276:	b7 01       	movw	r22, r14
    1278:	0e 94 c7 08 	call	0x118e	; 0x118e <_ZN12OrangutanLCD5printEm>
    127c:	1f 91       	pop	r17
    127e:	0f 91       	pop	r16
    1280:	ff 90       	pop	r15
    1282:	ef 90       	pop	r14
    1284:	08 95       	ret

00001286 <print_long>:
    1286:	0e 94 27 09 	call	0x124e	; 0x124e <_ZN12OrangutanLCD5printEl>
    128a:	08 95       	ret

0000128c <_ZN12OrangutanLCD5printEPKc>:
    128c:	cf 93       	push	r28
    128e:	df 93       	push	r29
    1290:	ec 01       	movw	r28, r24
    1292:	03 c0       	rjmp	.+6      	; 0x129a <_ZN12OrangutanLCD5printEPKc+0xe>
    1294:	21 96       	adiw	r28, 0x01	; 1
    1296:	0e 94 c2 08 	call	0x1184	; 0x1184 <_ZN12OrangutanLCD9send_dataEh>
    129a:	88 81       	ld	r24, Y
    129c:	88 23       	and	r24, r24
    129e:	d1 f7       	brne	.-12     	; 0x1294 <_ZN12OrangutanLCD5printEPKc+0x8>
    12a0:	df 91       	pop	r29
    12a2:	cf 91       	pop	r28
    12a4:	08 95       	ret

000012a6 <print>:
    12a6:	0e 94 46 09 	call	0x128c	; 0x128c <_ZN12OrangutanLCD5printEPKc>
    12aa:	08 95       	ret

000012ac <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	41 e0       	ldi	r20, 0x01	; 1
    12b0:	0e 94 37 08 	call	0x106e	; 0x106e <_ZN12OrangutanLCD4sendEhhh>
    12b4:	08 95       	ret

000012b6 <_ZN16OrangutanDigital9setOutputEhh>:
    12b6:	28 2f       	mov	r18, r24
    12b8:	88 30       	cpi	r24, 0x08	; 8
    12ba:	68 f4       	brcc	.+26     	; 0x12d6 <_ZN16OrangutanDigital9setOutputEhh+0x20>
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <_ZN16OrangutanDigital9setOutputEhh+0x10>
    12c2:	88 0f       	add	r24, r24
    12c4:	99 1f       	adc	r25, r25
    12c6:	2a 95       	dec	r18
    12c8:	e2 f7       	brpl	.-8      	; 0x12c2 <_ZN16OrangutanDigital9setOutputEhh+0xc>
    12ca:	28 2f       	mov	r18, r24
    12cc:	aa e2       	ldi	r26, 0x2A	; 42
    12ce:	b0 e0       	ldi	r27, 0x00	; 0
    12d0:	eb e2       	ldi	r30, 0x2B	; 43
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	29 c0       	rjmp	.+82     	; 0x1328 <_ZN16OrangutanDigital9setOutputEhh+0x72>
    12d6:	8e 30       	cpi	r24, 0x0E	; 14
    12d8:	80 f4       	brcc	.+32     	; 0x12fa <_ZN16OrangutanDigital9setOutputEhh+0x44>
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	28 50       	subi	r18, 0x08	; 8
    12de:	30 40       	sbci	r19, 0x00	; 0
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	02 c0       	rjmp	.+4      	; 0x12ea <_ZN16OrangutanDigital9setOutputEhh+0x34>
    12e6:	88 0f       	add	r24, r24
    12e8:	99 1f       	adc	r25, r25
    12ea:	2a 95       	dec	r18
    12ec:	e2 f7       	brpl	.-8      	; 0x12e6 <_ZN16OrangutanDigital9setOutputEhh+0x30>
    12ee:	28 2f       	mov	r18, r24
    12f0:	a4 e2       	ldi	r26, 0x24	; 36
    12f2:	b0 e0       	ldi	r27, 0x00	; 0
    12f4:	e5 e2       	ldi	r30, 0x25	; 37
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	17 c0       	rjmp	.+46     	; 0x1328 <_ZN16OrangutanDigital9setOutputEhh+0x72>
    12fa:	85 31       	cpi	r24, 0x15	; 21
    12fc:	30 f0       	brcs	.+12     	; 0x130a <_ZN16OrangutanDigital9setOutputEhh+0x54>
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	a0 e0       	ldi	r26, 0x00	; 0
    1302:	b0 e0       	ldi	r27, 0x00	; 0
    1304:	e0 e0       	ldi	r30, 0x00	; 0
    1306:	f0 e0       	ldi	r31, 0x00	; 0
    1308:	0f c0       	rjmp	.+30     	; 0x1328 <_ZN16OrangutanDigital9setOutputEhh+0x72>
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	2e 50       	subi	r18, 0x0E	; 14
    130e:	30 40       	sbci	r19, 0x00	; 0
    1310:	81 e0       	ldi	r24, 0x01	; 1
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	02 c0       	rjmp	.+4      	; 0x131a <_ZN16OrangutanDigital9setOutputEhh+0x64>
    1316:	88 0f       	add	r24, r24
    1318:	99 1f       	adc	r25, r25
    131a:	2a 95       	dec	r18
    131c:	e2 f7       	brpl	.-8      	; 0x1316 <_ZN16OrangutanDigital9setOutputEhh+0x60>
    131e:	28 2f       	mov	r18, r24
    1320:	a7 e2       	ldi	r26, 0x27	; 39
    1322:	b0 e0       	ldi	r27, 0x00	; 0
    1324:	e8 e2       	ldi	r30, 0x28	; 40
    1326:	f0 e0       	ldi	r31, 0x00	; 0
    1328:	6f 3f       	cpi	r22, 0xFF	; 255
    132a:	19 f4       	brne	.+6      	; 0x1332 <_ZN16OrangutanDigital9setOutputEhh+0x7c>
    132c:	80 81       	ld	r24, Z
    132e:	82 27       	eor	r24, r18
    1330:	09 c0       	rjmp	.+18     	; 0x1344 <_ZN16OrangutanDigital9setOutputEhh+0x8e>
    1332:	66 23       	and	r22, r22
    1334:	19 f0       	breq	.+6      	; 0x133c <_ZN16OrangutanDigital9setOutputEhh+0x86>
    1336:	80 81       	ld	r24, Z
    1338:	82 2b       	or	r24, r18
    133a:	04 c0       	rjmp	.+8      	; 0x1344 <_ZN16OrangutanDigital9setOutputEhh+0x8e>
    133c:	90 81       	ld	r25, Z
    133e:	82 2f       	mov	r24, r18
    1340:	80 95       	com	r24
    1342:	89 23       	and	r24, r25
    1344:	80 83       	st	Z, r24
    1346:	8c 91       	ld	r24, X
    1348:	82 2b       	or	r24, r18
    134a:	8c 93       	st	X, r24
    134c:	08 95       	ret

0000134e <_ZN15OrangutanMotors5init2Ev>:
    134e:	e0 eb       	ldi	r30, 0xB0	; 176
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	83 ef       	ldi	r24, 0xF3	; 243
    1354:	80 83       	st	Z, r24
    1356:	80 81       	ld	r24, Z
    1358:	84 bd       	out	0x24, r24	; 36
    135a:	e1 eb       	ldi	r30, 0xB1	; 177
    135c:	f0 e0       	ldi	r31, 0x00	; 0
    135e:	82 e0       	ldi	r24, 0x02	; 2
    1360:	80 83       	st	Z, r24
    1362:	80 81       	ld	r24, Z
    1364:	85 bd       	out	0x25, r24	; 37
    1366:	e4 eb       	ldi	r30, 0xB4	; 180
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	10 82       	st	Z, r1
    136c:	80 81       	ld	r24, Z
    136e:	e3 eb       	ldi	r30, 0xB3	; 179
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	80 83       	st	Z, r24
    1374:	80 81       	ld	r24, Z
    1376:	88 bd       	out	0x28, r24	; 40
    1378:	88 b5       	in	r24, 0x28	; 40
    137a:	87 bd       	out	0x27, r24	; 39
    137c:	86 e0       	ldi	r24, 0x06	; 6
    137e:	60 e0       	ldi	r22, 0x00	; 0
    1380:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN16OrangutanDigital9setOutputEhh>
    1384:	85 e0       	ldi	r24, 0x05	; 5
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN16OrangutanDigital9setOutputEhh>
    138c:	8b e0       	ldi	r24, 0x0B	; 11
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN16OrangutanDigital9setOutputEhh>
    1394:	83 e0       	ldi	r24, 0x03	; 3
    1396:	60 e0       	ldi	r22, 0x00	; 0
    1398:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN16OrangutanDigital9setOutputEhh>
    139c:	08 95       	ret

0000139e <_ZN15OrangutanMotors4initEv>:
    139e:	80 91 23 01 	lds	r24, 0x0123
    13a2:	88 23       	and	r24, r24
    13a4:	29 f4       	brne	.+10     	; 0x13b0 <_ZN15OrangutanMotors4initEv+0x12>
    13a6:	81 e0       	ldi	r24, 0x01	; 1
    13a8:	80 93 23 01 	sts	0x0123, r24
    13ac:	0e 94 a7 09 	call	0x134e	; 0x134e <_ZN15OrangutanMotors5init2Ev>
    13b0:	08 95       	ret

000013b2 <_ZN15OrangutanMotors10setM1SpeedEi>:
    13b2:	cf 93       	push	r28
    13b4:	df 93       	push	r29
    13b6:	ec 01       	movw	r28, r24
    13b8:	0e 94 cf 09 	call	0x139e	; 0x139e <_ZN15OrangutanMotors4initEv>
    13bc:	d7 fd       	sbrc	r29, 7
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <_ZN15OrangutanMotors10setM1SpeedEi+0x12>
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	04 c0       	rjmp	.+8      	; 0x13cc <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    13c4:	d0 95       	com	r29
    13c6:	c1 95       	neg	r28
    13c8:	df 4f       	sbci	r29, 0xFF	; 255
    13ca:	21 e0       	ldi	r18, 0x01	; 1
    13cc:	ce 01       	movw	r24, r28
    13ce:	cf 3f       	cpi	r28, 0xFF	; 255
    13d0:	d1 05       	cpc	r29, r1
    13d2:	19 f0       	breq	.+6      	; 0x13da <_ZN15OrangutanMotors10setM1SpeedEi+0x28>
    13d4:	14 f0       	brlt	.+4      	; 0x13da <_ZN15OrangutanMotors10setM1SpeedEi+0x28>
    13d6:	8f ef       	ldi	r24, 0xFF	; 255
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	22 23       	and	r18, r18
    13dc:	19 f0       	breq	.+6      	; 0x13e4 <_ZN15OrangutanMotors10setM1SpeedEi+0x32>
    13de:	18 bc       	out	0x28, r1	; 40
    13e0:	87 bd       	out	0x27, r24	; 39
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <_ZN15OrangutanMotors10setM1SpeedEi+0x36>
    13e4:	88 bd       	out	0x28, r24	; 40
    13e6:	17 bc       	out	0x27, r1	; 39
    13e8:	df 91       	pop	r29
    13ea:	cf 91       	pop	r28
    13ec:	08 95       	ret

000013ee <_ZN15OrangutanMotors10setM2SpeedEi>:
    13ee:	cf 93       	push	r28
    13f0:	df 93       	push	r29
    13f2:	ec 01       	movw	r28, r24
    13f4:	0e 94 cf 09 	call	0x139e	; 0x139e <_ZN15OrangutanMotors4initEv>
    13f8:	d7 fd       	sbrc	r29, 7
    13fa:	02 c0       	rjmp	.+4      	; 0x1400 <_ZN15OrangutanMotors10setM2SpeedEi+0x12>
    13fc:	20 e0       	ldi	r18, 0x00	; 0
    13fe:	04 c0       	rjmp	.+8      	; 0x1408 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1400:	d0 95       	com	r29
    1402:	c1 95       	neg	r28
    1404:	df 4f       	sbci	r29, 0xFF	; 255
    1406:	21 e0       	ldi	r18, 0x01	; 1
    1408:	ce 01       	movw	r24, r28
    140a:	cf 3f       	cpi	r28, 0xFF	; 255
    140c:	d1 05       	cpc	r29, r1
    140e:	19 f0       	breq	.+6      	; 0x1416 <_ZN15OrangutanMotors10setM2SpeedEi+0x28>
    1410:	14 f0       	brlt	.+4      	; 0x1416 <_ZN15OrangutanMotors10setM2SpeedEi+0x28>
    1412:	8f ef       	ldi	r24, 0xFF	; 255
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	22 23       	and	r18, r18
    1418:	29 f0       	breq	.+10     	; 0x1424 <_ZN15OrangutanMotors10setM2SpeedEi+0x36>
    141a:	10 92 b4 00 	sts	0x00B4, r1
    141e:	80 93 b3 00 	sts	0x00B3, r24
    1422:	04 c0       	rjmp	.+8      	; 0x142c <_ZN15OrangutanMotors10setM2SpeedEi+0x3e>
    1424:	80 93 b4 00 	sts	0x00B4, r24
    1428:	10 92 b3 00 	sts	0x00B3, r1
    142c:	df 91       	pop	r29
    142e:	cf 91       	pop	r28
    1430:	08 95       	ret

00001432 <_ZN15OrangutanMotors9setSpeedsEii>:
    1432:	0f 93       	push	r16
    1434:	1f 93       	push	r17
    1436:	8b 01       	movw	r16, r22
    1438:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <_ZN15OrangutanMotors10setM1SpeedEi>
    143c:	c8 01       	movw	r24, r16
    143e:	0e 94 f7 09 	call	0x13ee	; 0x13ee <_ZN15OrangutanMotors10setM2SpeedEi>
    1442:	1f 91       	pop	r17
    1444:	0f 91       	pop	r16
    1446:	08 95       	ret

00001448 <set_motors>:
    1448:	0e 94 19 0a 	call	0x1432	; 0x1432 <_ZN15OrangutanMotors9setSpeedsEii>
    144c:	08 95       	ret

0000144e <button_is_pressed>:
    144e:	28 2f       	mov	r18, r24
    1450:	80 91 24 01 	lds	r24, 0x0124
    1454:	88 23       	and	r24, r24
    1456:	91 f4       	brne	.+36     	; 0x147c <button_is_pressed+0x2e>
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	80 93 24 01 	sts	0x0124, r24
    145e:	84 b1       	in	r24, 0x04	; 4
    1460:	8d 7c       	andi	r24, 0xCD	; 205
    1462:	84 b9       	out	0x04, r24	; 4
    1464:	85 b1       	in	r24, 0x05	; 5
    1466:	82 63       	ori	r24, 0x32	; 50
    1468:	85 b9       	out	0x05, r24	; 5
    146a:	85 e0       	ldi	r24, 0x05	; 5
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	6f 93       	push	r22
    1470:	64 e0       	ldi	r22, 0x04	; 4
    1472:	6a 95       	dec	r22
    1474:	f1 f7       	brne	.-4      	; 0x1472 <button_is_pressed+0x24>
    1476:	6f 91       	pop	r22
    1478:	01 97       	sbiw	r24, 0x01	; 1
    147a:	c9 f7       	brne	.-14     	; 0x146e <button_is_pressed+0x20>
    147c:	83 b1       	in	r24, 0x03	; 3
    147e:	80 95       	com	r24
    1480:	82 23       	and	r24, r18
    1482:	08 95       	ret

00001484 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1484:	1f 93       	push	r17
    1486:	cf 93       	push	r28
    1488:	df 93       	push	r29
    148a:	18 2f       	mov	r17, r24
    148c:	80 91 24 01 	lds	r24, 0x0124
    1490:	88 23       	and	r24, r24
    1492:	91 f4       	brne	.+36     	; 0x14b8 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x34>
    1494:	81 e0       	ldi	r24, 0x01	; 1
    1496:	80 93 24 01 	sts	0x0124, r24
    149a:	84 b1       	in	r24, 0x04	; 4
    149c:	8d 7c       	andi	r24, 0xCD	; 205
    149e:	84 b9       	out	0x04, r24	; 4
    14a0:	85 b1       	in	r24, 0x05	; 5
    14a2:	82 63       	ori	r24, 0x32	; 50
    14a4:	85 b9       	out	0x05, r24	; 5
    14a6:	85 e0       	ldi	r24, 0x05	; 5
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	6f 93       	push	r22
    14ac:	64 e0       	ldi	r22, 0x04	; 4
    14ae:	6a 95       	dec	r22
    14b0:	f1 f7       	brne	.-4      	; 0x14ae <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x2a>
    14b2:	6f 91       	pop	r22
    14b4:	01 97       	sbiw	r24, 0x01	; 1
    14b6:	c9 f7       	brne	.-14     	; 0x14aa <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x26>
    14b8:	c1 2f       	mov	r28, r17
    14ba:	d0 e0       	ldi	r29, 0x00	; 0
    14bc:	83 b1       	in	r24, 0x03	; 3
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	8c 23       	and	r24, r28
    14c2:	9d 23       	and	r25, r29
    14c4:	89 2b       	or	r24, r25
    14c6:	d1 f3       	breq	.-12     	; 0x14bc <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x38>
    14c8:	8a e0       	ldi	r24, 0x0A	; 10
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	0e 94 b1 0a 	call	0x1562	; 0x1562 <delay_ms>
    14d0:	83 b1       	in	r24, 0x03	; 3
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	8c 23       	and	r24, r28
    14d6:	9d 23       	and	r25, r29
    14d8:	89 2b       	or	r24, r25
    14da:	81 f3       	breq	.-32     	; 0x14bc <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x38>
    14dc:	83 b1       	in	r24, 0x03	; 3
    14de:	81 23       	and	r24, r17
    14e0:	df 91       	pop	r29
    14e2:	cf 91       	pop	r28
    14e4:	1f 91       	pop	r17
    14e6:	08 95       	ret

000014e8 <wait_for_button_release>:
    14e8:	0e 94 42 0a 	call	0x1484	; 0x1484 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    14ec:	08 95       	ret

000014ee <__vector_9>:
    14ee:	2f 92       	push	r2
    14f0:	8f 93       	push	r24
    14f2:	9f 93       	push	r25
    14f4:	2f b6       	in	r2, 0x3f	; 63
    14f6:	80 91 32 01 	lds	r24, 0x0132
    14fa:	90 91 33 01 	lds	r25, 0x0133
    14fe:	01 96       	adiw	r24, 0x01	; 1
    1500:	80 93 32 01 	sts	0x0132, r24
    1504:	90 93 33 01 	sts	0x0133, r25
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	80 91 34 01 	lds	r24, 0x0134
    150e:	89 1f       	adc	r24, r25
    1510:	80 93 34 01 	sts	0x0134, r24
    1514:	90 91 3a 01 	lds	r25, 0x013A
    1518:	9c 5f       	subi	r25, 0xFC	; 252
    151a:	90 93 3a 01 	sts	0x013A, r25
    151e:	80 91 39 01 	lds	r24, 0x0139
    1522:	80 51       	subi	r24, 0x10	; 16
    1524:	97 42       	sbci	r25, 0x27	; 39
    1526:	c0 f0       	brcs	.+48     	; 0x1558 <end>
    1528:	90 93 3a 01 	sts	0x013A, r25
    152c:	80 93 39 01 	sts	0x0139, r24
    1530:	80 91 35 01 	lds	r24, 0x0135
    1534:	90 91 36 01 	lds	r25, 0x0136
    1538:	01 96       	adiw	r24, 0x01	; 1
    153a:	80 93 35 01 	sts	0x0135, r24
    153e:	90 93 36 01 	sts	0x0136, r25
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	80 91 37 01 	lds	r24, 0x0137
    1548:	89 1f       	adc	r24, r25
    154a:	80 93 37 01 	sts	0x0137, r24
    154e:	80 91 38 01 	lds	r24, 0x0138
    1552:	89 1f       	adc	r24, r25
    1554:	80 93 38 01 	sts	0x0138, r24

00001558 <end>:
    1558:	2f be       	out	0x3f, r2	; 63
    155a:	9f 91       	pop	r25
    155c:	8f 91       	pop	r24
    155e:	2f 90       	pop	r2
    1560:	18 95       	reti

00001562 <delay_ms>:
    1562:	28 ee       	ldi	r18, 0xE8	; 232
    1564:	33 e0       	ldi	r19, 0x03	; 3
    1566:	09 c0       	rjmp	.+18     	; 0x157a <delay_ms+0x18>
    1568:	f9 01       	movw	r30, r18
    156a:	6f 93       	push	r22
    156c:	64 e0       	ldi	r22, 0x04	; 4
    156e:	6a 95       	dec	r22
    1570:	f1 f7       	brne	.-4      	; 0x156e <delay_ms+0xc>
    1572:	6f 91       	pop	r22
    1574:	31 97       	sbiw	r30, 0x01	; 1
    1576:	c9 f7       	brne	.-14     	; 0x156a <delay_ms+0x8>
    1578:	01 97       	sbiw	r24, 0x01	; 1
    157a:	00 97       	sbiw	r24, 0x00	; 0
    157c:	a9 f7       	brne	.-22     	; 0x1568 <delay_ms+0x6>
    157e:	08 95       	ret

00001580 <_ZN13OrangutanTime5init2Ev>:
    1580:	a0 e7       	ldi	r26, 0x70	; 112
    1582:	b0 e0       	ldi	r27, 0x00	; 0
    1584:	8c 91       	ld	r24, X
    1586:	8e 7f       	andi	r24, 0xFE	; 254
    1588:	8c 93       	st	X, r24
    158a:	e0 eb       	ldi	r30, 0xB0	; 176
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	80 81       	ld	r24, Z
    1590:	83 60       	ori	r24, 0x03	; 3
    1592:	80 83       	st	Z, r24
    1594:	e1 eb       	ldi	r30, 0xB1	; 177
    1596:	f0 e0       	ldi	r31, 0x00	; 0
    1598:	80 81       	ld	r24, Z
    159a:	80 7f       	andi	r24, 0xF0	; 240
    159c:	80 83       	st	Z, r24
    159e:	80 81       	ld	r24, Z
    15a0:	82 60       	ori	r24, 0x02	; 2
    15a2:	80 83       	st	Z, r24
    15a4:	b8 9a       	sbi	0x17, 0	; 23
    15a6:	8c 91       	ld	r24, X
    15a8:	81 60       	ori	r24, 0x01	; 1
    15aa:	8c 93       	st	X, r24
    15ac:	78 94       	sei
    15ae:	08 95       	ret

000015b0 <_ZN13OrangutanTime4initEv>:
    15b0:	80 91 3b 01 	lds	r24, 0x013B
    15b4:	88 23       	and	r24, r24
    15b6:	29 f4       	brne	.+10     	; 0x15c2 <_ZN13OrangutanTime4initEv+0x12>
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	80 93 3b 01 	sts	0x013B, r24
    15be:	0e 94 c0 0a 	call	0x1580	; 0x1580 <_ZN13OrangutanTime5init2Ev>
    15c2:	08 95       	ret

000015c4 <_ZN13OrangutanTime5resetEv>:
    15c4:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <_ZN13OrangutanTime4initEv>
    15c8:	e0 e7       	ldi	r30, 0x70	; 112
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	80 81       	ld	r24, Z
    15ce:	8e 7f       	andi	r24, 0xFE	; 254
    15d0:	80 83       	st	Z, r24
    15d2:	10 92 35 01 	sts	0x0135, r1
    15d6:	10 92 36 01 	sts	0x0136, r1
    15da:	10 92 37 01 	sts	0x0137, r1
    15de:	10 92 38 01 	sts	0x0138, r1
    15e2:	10 92 3a 01 	sts	0x013A, r1
    15e6:	10 92 39 01 	sts	0x0139, r1
    15ea:	80 81       	ld	r24, Z
    15ec:	81 60       	ori	r24, 0x01	; 1
    15ee:	80 83       	st	Z, r24
    15f0:	08 95       	ret

000015f2 <_GLOBAL__I_pololu_3pi_init>:
    15f2:	08 95       	ret

000015f4 <_GLOBAL__D_pololu_3pi_init>:
    15f4:	8c e3       	ldi	r24, 0x3C	; 60
    15f6:	91 e0       	ldi	r25, 0x01	; 1
    15f8:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <_ZN16PololuQTRSensorsD2Ev>
    15fc:	08 95       	ret

000015fe <read_line>:
    15fe:	9c 01       	movw	r18, r24
    1600:	46 2f       	mov	r20, r22
    1602:	8c e3       	ldi	r24, 0x3C	; 60
    1604:	91 e0       	ldi	r25, 0x01	; 1
    1606:	b9 01       	movw	r22, r18
    1608:	20 e0       	ldi	r18, 0x00	; 0
    160a:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <_ZN16PololuQTRSensors8readLineEPjhh>
    160e:	08 95       	ret

00001610 <calibrate_line_sensors>:
    1610:	68 2f       	mov	r22, r24
    1612:	8c e3       	ldi	r24, 0x3C	; 60
    1614:	91 e0       	ldi	r25, 0x01	; 1
    1616:	0e 94 70 10 	call	0x20e0	; 0x20e0 <_ZN16PololuQTRSensors9calibrateEh>
    161a:	08 95       	ret

0000161c <_ZN9Pololu3pi4initEjh>:
    161c:	0f 93       	push	r16
    161e:	df 93       	push	r29
    1620:	cf 93       	push	r28
    1622:	00 d0       	rcall	.+0      	; 0x1624 <_ZN9Pololu3pi4initEjh+0x8>
    1624:	00 d0       	rcall	.+0      	; 0x1626 <_ZN9Pololu3pi4initEjh+0xa>
    1626:	0f 92       	push	r0
    1628:	cd b7       	in	r28, 0x3d	; 61
    162a:	de b7       	in	r29, 0x3e	; 62
    162c:	9c 01       	movw	r18, r24
    162e:	96 2f       	mov	r25, r22
    1630:	de 01       	movw	r26, r28
    1632:	11 96       	adiw	r26, 0x01	; 1
    1634:	ee e0       	ldi	r30, 0x0E	; 14
    1636:	f1 e0       	ldi	r31, 0x01	; 1
    1638:	85 e0       	ldi	r24, 0x05	; 5
    163a:	01 90       	ld	r0, Z+
    163c:	0d 92       	st	X+, r0
    163e:	81 50       	subi	r24, 0x01	; 1
    1640:	e1 f7       	brne	.-8      	; 0x163a <_ZN9Pololu3pi4initEjh+0x1e>
    1642:	be 01       	movw	r22, r28
    1644:	6f 5f       	subi	r22, 0xFF	; 255
    1646:	7f 4f       	sbci	r23, 0xFF	; 255
    1648:	99 23       	and	r25, r25
    164a:	29 f0       	breq	.+10     	; 0x1656 <_ZN9Pololu3pi4initEjh+0x3a>
    164c:	8c e3       	ldi	r24, 0x3C	; 60
    164e:	91 e0       	ldi	r25, 0x01	; 1
    1650:	45 e0       	ldi	r20, 0x05	; 5
    1652:	0f ef       	ldi	r16, 0xFF	; 255
    1654:	04 c0       	rjmp	.+8      	; 0x165e <_ZN9Pololu3pi4initEjh+0x42>
    1656:	8c e3       	ldi	r24, 0x3C	; 60
    1658:	91 e0       	ldi	r25, 0x01	; 1
    165a:	45 e0       	ldi	r20, 0x05	; 5
    165c:	03 e1       	ldi	r16, 0x13	; 19
    165e:	0e 94 a9 0b 	call	0x1752	; 0x1752 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1662:	8c e3       	ldi	r24, 0x3C	; 60
    1664:	91 e0       	ldi	r25, 0x01	; 1
    1666:	0e 94 91 0b 	call	0x1722	; 0x1722 <_ZN16PololuQTRSensors11emittersOffEv>
    166a:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <_ZN13OrangutanTime5resetEv>
    166e:	0f 90       	pop	r0
    1670:	0f 90       	pop	r0
    1672:	0f 90       	pop	r0
    1674:	0f 90       	pop	r0
    1676:	0f 90       	pop	r0
    1678:	cf 91       	pop	r28
    167a:	df 91       	pop	r29
    167c:	0f 91       	pop	r16
    167e:	08 95       	ret

00001680 <pololu_3pi_init>:
    1680:	60 e0       	ldi	r22, 0x00	; 0
    1682:	0e 94 0e 0b 	call	0x161c	; 0x161c <_ZN9Pololu3pi4initEjh>
    1686:	08 95       	ret

00001688 <_ZN16PololuQTRSensors4initEhhh>:
    1688:	fc 01       	movw	r30, r24
    168a:	11 82       	std	Z+1, r1	; 0x01
    168c:	10 82       	st	Z, r1
    168e:	13 82       	std	Z+3, r1	; 0x03
    1690:	12 82       	std	Z+2, r1	; 0x02
    1692:	15 82       	std	Z+5, r1	; 0x05
    1694:	14 82       	std	Z+4, r1	; 0x04
    1696:	17 82       	std	Z+7, r1	; 0x07
    1698:	16 82       	std	Z+6, r1	; 0x06
    169a:	61 31       	cpi	r22, 0x11	; 17
    169c:	18 f0       	brcs	.+6      	; 0x16a4 <_ZN16PololuQTRSensors4initEhhh+0x1c>
    169e:	80 e1       	ldi	r24, 0x10	; 16
    16a0:	80 87       	std	Z+8, r24	; 0x08
    16a2:	01 c0       	rjmp	.+2      	; 0x16a6 <_ZN16PololuQTRSensors4initEhhh+0x1e>
    16a4:	60 87       	std	Z+8, r22	; 0x08
    16a6:	20 8b       	std	Z+16, r18	; 0x10
    16a8:	48 30       	cpi	r20, 0x08	; 8
    16aa:	60 f4       	brcc	.+24     	; 0x16c4 <_ZN16PololuQTRSensors4initEhhh+0x3c>
    16ac:	81 e0       	ldi	r24, 0x01	; 1
    16ae:	90 e0       	ldi	r25, 0x00	; 0
    16b0:	02 c0       	rjmp	.+4      	; 0x16b6 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    16b2:	88 0f       	add	r24, r24
    16b4:	99 1f       	adc	r25, r25
    16b6:	4a 95       	dec	r20
    16b8:	e2 f7       	brpl	.-8      	; 0x16b2 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    16ba:	4a e2       	ldi	r20, 0x2A	; 42
    16bc:	50 e0       	ldi	r21, 0x00	; 0
    16be:	2b e2       	ldi	r18, 0x2B	; 43
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	29 c0       	rjmp	.+82     	; 0x1716 <_ZN16PololuQTRSensors4initEhhh+0x8e>
    16c4:	4e 30       	cpi	r20, 0x0E	; 14
    16c6:	80 f4       	brcc	.+32     	; 0x16e8 <_ZN16PololuQTRSensors4initEhhh+0x60>
    16c8:	24 2f       	mov	r18, r20
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	28 50       	subi	r18, 0x08	; 8
    16ce:	30 40       	sbci	r19, 0x00	; 0
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <_ZN16PololuQTRSensors4initEhhh+0x52>
    16d6:	88 0f       	add	r24, r24
    16d8:	99 1f       	adc	r25, r25
    16da:	2a 95       	dec	r18
    16dc:	e2 f7       	brpl	.-8      	; 0x16d6 <_ZN16PololuQTRSensors4initEhhh+0x4e>
    16de:	44 e2       	ldi	r20, 0x24	; 36
    16e0:	50 e0       	ldi	r21, 0x00	; 0
    16e2:	25 e2       	ldi	r18, 0x25	; 37
    16e4:	30 e0       	ldi	r19, 0x00	; 0
    16e6:	17 c0       	rjmp	.+46     	; 0x1716 <_ZN16PololuQTRSensors4initEhhh+0x8e>
    16e8:	45 31       	cpi	r20, 0x15	; 21
    16ea:	30 f0       	brcs	.+12     	; 0x16f8 <_ZN16PololuQTRSensors4initEhhh+0x70>
    16ec:	80 e0       	ldi	r24, 0x00	; 0
    16ee:	40 e0       	ldi	r20, 0x00	; 0
    16f0:	50 e0       	ldi	r21, 0x00	; 0
    16f2:	20 e0       	ldi	r18, 0x00	; 0
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	0f c0       	rjmp	.+30     	; 0x1716 <_ZN16PololuQTRSensors4initEhhh+0x8e>
    16f8:	24 2f       	mov	r18, r20
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	2e 50       	subi	r18, 0x0E	; 14
    16fe:	30 40       	sbci	r19, 0x00	; 0
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	02 c0       	rjmp	.+4      	; 0x170a <_ZN16PololuQTRSensors4initEhhh+0x82>
    1706:	88 0f       	add	r24, r24
    1708:	99 1f       	adc	r25, r25
    170a:	2a 95       	dec	r18
    170c:	e2 f7       	brpl	.-8      	; 0x1706 <_ZN16PololuQTRSensors4initEhhh+0x7e>
    170e:	47 e2       	ldi	r20, 0x27	; 39
    1710:	50 e0       	ldi	r21, 0x00	; 0
    1712:	28 e2       	ldi	r18, 0x28	; 40
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	81 87       	std	Z+9, r24	; 0x09
    1718:	33 87       	std	Z+11, r19	; 0x0b
    171a:	22 87       	std	Z+10, r18	; 0x0a
    171c:	55 87       	std	Z+13, r21	; 0x0d
    171e:	44 87       	std	Z+12, r20	; 0x0c
    1720:	08 95       	ret

00001722 <_ZN16PololuQTRSensors11emittersOffEv>:
    1722:	dc 01       	movw	r26, r24
    1724:	1c 96       	adiw	r26, 0x0c	; 12
    1726:	ed 91       	ld	r30, X+
    1728:	fc 91       	ld	r31, X
    172a:	1d 97       	sbiw	r26, 0x0d	; 13
    172c:	30 97       	sbiw	r30, 0x00	; 0
    172e:	81 f0       	breq	.+32     	; 0x1750 <_ZN16PololuQTRSensors11emittersOffEv+0x2e>
    1730:	80 81       	ld	r24, Z
    1732:	19 96       	adiw	r26, 0x09	; 9
    1734:	9c 91       	ld	r25, X
    1736:	19 97       	sbiw	r26, 0x09	; 9
    1738:	89 2b       	or	r24, r25
    173a:	80 83       	st	Z, r24
    173c:	1a 96       	adiw	r26, 0x0a	; 10
    173e:	ed 91       	ld	r30, X+
    1740:	fc 91       	ld	r31, X
    1742:	1b 97       	sbiw	r26, 0x0b	; 11
    1744:	90 81       	ld	r25, Z
    1746:	19 96       	adiw	r26, 0x09	; 9
    1748:	8c 91       	ld	r24, X
    174a:	80 95       	com	r24
    174c:	89 23       	and	r24, r25
    174e:	80 83       	st	Z, r24
    1750:	08 95       	ret

00001752 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1752:	a0 e0       	ldi	r26, 0x00	; 0
    1754:	b0 e0       	ldi	r27, 0x00	; 0
    1756:	ef ea       	ldi	r30, 0xAF	; 175
    1758:	fb e0       	ldi	r31, 0x0B	; 11
    175a:	0c 94 0a 11 	jmp	0x2214	; 0x2214 <__prologue_saves__+0x10>
    175e:	ec 01       	movw	r28, r24
    1760:	5b 01       	movw	r10, r22
    1762:	64 2f       	mov	r22, r20
    1764:	79 01       	movw	r14, r18
    1766:	40 2f       	mov	r20, r16
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	0e 94 44 0b 	call	0x1688	; 0x1688 <_ZN16PololuQTRSensors4initEhhh>
    176e:	ce 01       	movw	r24, r28
    1770:	8f 5b       	subi	r24, 0xBF	; 191
    1772:	9f 4f       	sbci	r25, 0xFF	; 255
    1774:	fc 01       	movw	r30, r24
    1776:	10 82       	st	Z, r1
    1778:	de 01       	movw	r26, r28
    177a:	ae 5b       	subi	r26, 0xBE	; 190
    177c:	bf 4f       	sbci	r27, 0xFF	; 255
    177e:	1c 92       	st	X, r1
    1780:	fe 01       	movw	r30, r28
    1782:	ed 5b       	subi	r30, 0xBD	; 189
    1784:	ff 4f       	sbci	r31, 0xFF	; 255
    1786:	10 82       	st	Z, r1
    1788:	ff 86       	std	Y+15, r15	; 0x0f
    178a:	ee 86       	std	Y+14, r14	; 0x0e
    178c:	40 e0       	ldi	r20, 0x00	; 0
    178e:	61 e0       	ldi	r22, 0x01	; 1
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	6f 01       	movw	r12, r30
    1794:	7d 01       	movw	r14, r26
    1796:	8c 01       	movw	r16, r24
    1798:	4e c0       	rjmp	.+156    	; 0x1836 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xe4>
    179a:	f5 01       	movw	r30, r10
    179c:	e4 0f       	add	r30, r20
    179e:	f1 1d       	adc	r31, r1
    17a0:	80 81       	ld	r24, Z
    17a2:	88 30       	cpi	r24, 0x08	; 8
    17a4:	50 f4       	brcc	.+20     	; 0x17ba <_ZN18PololuQTRSensorsRC4initEPhhjh+0x68>
    17a6:	9b 01       	movw	r18, r22
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <_ZN18PololuQTRSensorsRC4initEPhhjh+0x5c>
    17aa:	22 0f       	add	r18, r18
    17ac:	33 1f       	adc	r19, r19
    17ae:	8a 95       	dec	r24
    17b0:	e2 f7       	brpl	.-8      	; 0x17aa <_ZN18PololuQTRSensorsRC4initEPhhjh+0x58>
    17b2:	92 2f       	mov	r25, r18
    17b4:	29 e2       	ldi	r18, 0x29	; 41
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	1f c0       	rjmp	.+62     	; 0x17f8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa6>
    17ba:	8e 30       	cpi	r24, 0x0E	; 14
    17bc:	60 f4       	brcc	.+24     	; 0x17d6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x84>
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	08 97       	sbiw	r24, 0x08	; 8
    17c2:	fb 01       	movw	r30, r22
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <_ZN18PololuQTRSensorsRC4initEPhhjh+0x78>
    17c6:	ee 0f       	add	r30, r30
    17c8:	ff 1f       	adc	r31, r31
    17ca:	8a 95       	dec	r24
    17cc:	e2 f7       	brpl	.-8      	; 0x17c6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x74>
    17ce:	9e 2f       	mov	r25, r30
    17d0:	23 e2       	ldi	r18, 0x23	; 35
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	11 c0       	rjmp	.+34     	; 0x17f8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa6>
    17d6:	85 31       	cpi	r24, 0x15	; 21
    17d8:	20 f0       	brcs	.+8      	; 0x17e2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x90>
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	20 e0       	ldi	r18, 0x00	; 0
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	0b c0       	rjmp	.+22     	; 0x17f8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa6>
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	0e 97       	sbiw	r24, 0x0e	; 14
    17e6:	9b 01       	movw	r18, r22
    17e8:	02 c0       	rjmp	.+4      	; 0x17ee <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9c>
    17ea:	22 0f       	add	r18, r18
    17ec:	33 1f       	adc	r19, r19
    17ee:	8a 95       	dec	r24
    17f0:	e2 f7       	brpl	.-8      	; 0x17ea <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    17f2:	92 2f       	mov	r25, r18
    17f4:	26 e2       	ldi	r18, 0x26	; 38
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	e4 2f       	mov	r30, r20
    17fa:	f0 e0       	ldi	r31, 0x00	; 0
    17fc:	de 01       	movw	r26, r28
    17fe:	ae 0f       	add	r26, r30
    1800:	bf 1f       	adc	r27, r31
    1802:	51 96       	adiw	r26, 0x11	; 17
    1804:	9c 93       	st	X, r25
    1806:	ee 0f       	add	r30, r30
    1808:	ff 1f       	adc	r31, r31
    180a:	ec 0f       	add	r30, r28
    180c:	fd 1f       	adc	r31, r29
    180e:	32 a3       	lds	r19, 0x52
    1810:	21 a3       	lds	r18, 0x51
    1812:	23 32       	cpi	r18, 0x23	; 35
    1814:	31 05       	cpc	r19, r1
    1816:	11 f4       	brne	.+4      	; 0x181c <_ZN18PololuQTRSensorsRC4initEPhhjh+0xca>
    1818:	f8 01       	movw	r30, r16
    181a:	09 c0       	rjmp	.+18     	; 0x182e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xdc>
    181c:	26 32       	cpi	r18, 0x26	; 38
    181e:	31 05       	cpc	r19, r1
    1820:	11 f4       	brne	.+4      	; 0x1826 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xd4>
    1822:	f7 01       	movw	r30, r14
    1824:	04 c0       	rjmp	.+8      	; 0x182e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xdc>
    1826:	29 32       	cpi	r18, 0x29	; 41
    1828:	31 05       	cpc	r19, r1
    182a:	21 f4       	brne	.+8      	; 0x1834 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xe2>
    182c:	f6 01       	movw	r30, r12
    182e:	80 81       	ld	r24, Z
    1830:	98 2b       	or	r25, r24
    1832:	90 83       	st	Z, r25
    1834:	4f 5f       	subi	r20, 0xFF	; 255
    1836:	88 85       	ldd	r24, Y+8	; 0x08
    1838:	48 17       	cp	r20, r24
    183a:	08 f4       	brcc	.+2      	; 0x183e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xec>
    183c:	ae cf       	rjmp	.-164    	; 0x179a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x48>
    183e:	cd b7       	in	r28, 0x3d	; 61
    1840:	de b7       	in	r29, 0x3e	; 62
    1842:	ea e0       	ldi	r30, 0x0A	; 10
    1844:	0c 94 26 11 	jmp	0x224c	; 0x224c <__epilogue_restores__+0x10>

00001848 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1848:	a0 e0       	ldi	r26, 0x00	; 0
    184a:	b0 e0       	ldi	r27, 0x00	; 0
    184c:	ea e2       	ldi	r30, 0x2A	; 42
    184e:	fc e0       	ldi	r31, 0x0C	; 12
    1850:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__prologue_saves__+0xc>
    1854:	ec 01       	movw	r28, r24
    1856:	5b 01       	movw	r10, r22
    1858:	cf 5b       	subi	r28, 0xBF	; 191
    185a:	df 4f       	sbci	r29, 0xFF	; 255
    185c:	49 91       	ld	r20, Y+
    185e:	a9 91       	ld	r26, Y+
    1860:	88 80       	ld	r8, Y
    1862:	c3 54       	subi	r28, 0x43	; 67
    1864:	d0 40       	sbci	r29, 0x00	; 0
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	09 c0       	rjmp	.+18     	; 0x187c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    186a:	e9 2f       	mov	r30, r25
    186c:	f0 e0       	ldi	r31, 0x00	; 0
    186e:	ee 0f       	add	r30, r30
    1870:	ff 1f       	adc	r31, r31
    1872:	ea 0d       	add	r30, r10
    1874:	fb 1d       	adc	r31, r11
    1876:	11 82       	std	Z+1, r1	; 0x01
    1878:	10 82       	st	Z, r1
    187a:	9f 5f       	subi	r25, 0xFF	; 255
    187c:	88 85       	ldd	r24, Y+8	; 0x08
    187e:	98 17       	cp	r25, r24
    1880:	a0 f3       	brcs	.-24     	; 0x186a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x22>
    1882:	84 b1       	in	r24, 0x04	; 4
    1884:	cf 5b       	subi	r28, 0xBF	; 191
    1886:	df 4f       	sbci	r29, 0xFF	; 255
    1888:	39 91       	ld	r19, Y+
    188a:	83 2b       	or	r24, r19
    188c:	84 b9       	out	0x04, r24	; 4
    188e:	87 b1       	in	r24, 0x07	; 7
    1890:	29 91       	ld	r18, Y+
    1892:	82 2b       	or	r24, r18
    1894:	87 b9       	out	0x07, r24	; 7
    1896:	8a b1       	in	r24, 0x0a	; 10
    1898:	98 81       	ld	r25, Y
    189a:	c3 54       	subi	r28, 0x43	; 67
    189c:	d0 40       	sbci	r29, 0x00	; 0
    189e:	89 2b       	or	r24, r25
    18a0:	8a b9       	out	0x0a, r24	; 10
    18a2:	85 b1       	in	r24, 0x05	; 5
    18a4:	83 2b       	or	r24, r19
    18a6:	85 b9       	out	0x05, r24	; 5
    18a8:	88 b1       	in	r24, 0x08	; 8
    18aa:	82 2b       	or	r24, r18
    18ac:	88 b9       	out	0x08, r24	; 8
    18ae:	8b b1       	in	r24, 0x0b	; 11
    18b0:	89 2b       	or	r24, r25
    18b2:	8b b9       	out	0x0b, r24	; 11
    18b4:	ea e0       	ldi	r30, 0x0A	; 10
    18b6:	f0 e0       	ldi	r31, 0x00	; 0
    18b8:	6f 93       	push	r22
    18ba:	64 e0       	ldi	r22, 0x04	; 4
    18bc:	6a 95       	dec	r22
    18be:	f1 f7       	brne	.-4      	; 0x18bc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x74>
    18c0:	6f 91       	pop	r22
    18c2:	31 97       	sbiw	r30, 0x01	; 1
    18c4:	c9 f7       	brne	.-14     	; 0x18b8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x70>
    18c6:	84 b1       	in	r24, 0x04	; 4
    18c8:	30 95       	com	r19
    18ca:	83 23       	and	r24, r19
    18cc:	84 b9       	out	0x04, r24	; 4
    18ce:	87 b1       	in	r24, 0x07	; 7
    18d0:	20 95       	com	r18
    18d2:	82 23       	and	r24, r18
    18d4:	87 b9       	out	0x07, r24	; 7
    18d6:	8a b1       	in	r24, 0x0a	; 10
    18d8:	90 95       	com	r25
    18da:	89 23       	and	r24, r25
    18dc:	8a b9       	out	0x0a, r24	; 10
    18de:	85 b1       	in	r24, 0x05	; 5
    18e0:	38 23       	and	r19, r24
    18e2:	35 b9       	out	0x05, r19	; 5
    18e4:	88 b1       	in	r24, 0x08	; 8
    18e6:	28 23       	and	r18, r24
    18e8:	28 b9       	out	0x08, r18	; 8
    18ea:	8b b1       	in	r24, 0x0b	; 11
    18ec:	98 23       	and	r25, r24
    18ee:	9b b9       	out	0x0b, r25	; 11
    18f0:	90 90 b0 00 	lds	r9, 0x00B0
    18f4:	c0 90 b1 00 	lds	r12, 0x00B1
    18f8:	80 91 b0 00 	lds	r24, 0x00B0
    18fc:	83 60       	ori	r24, 0x03	; 3
    18fe:	80 93 b0 00 	sts	0x00B0, r24
    1902:	82 e0       	ldi	r24, 0x02	; 2
    1904:	80 93 b1 00 	sts	0x00B1, r24
    1908:	d0 90 b2 00 	lds	r13, 0x00B2
    190c:	60 e0       	ldi	r22, 0x00	; 0
    190e:	70 e0       	ldi	r23, 0x00	; 0
    1910:	3a c0       	rjmp	.+116    	; 0x1986 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13e>
    1912:	50 91 b2 00 	lds	r21, 0x00B2
    1916:	5d 19       	sub	r21, r13
    1918:	65 0f       	add	r22, r21
    191a:	71 1d       	adc	r23, r1
    191c:	e3 b0       	in	r14, 0x03	; 3
    191e:	e4 16       	cp	r14, r20
    1920:	09 f0       	breq	.+2      	; 0x1924 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xdc>
    1922:	4f c0       	rjmp	.+158    	; 0x19c2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1924:	f6 b0       	in	r15, 0x06	; 6
    1926:	fa 16       	cp	r15, r26
    1928:	09 f0       	breq	.+2      	; 0x192c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xe4>
    192a:	4b c0       	rjmp	.+150    	; 0x19c2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    192c:	89 b1       	in	r24, 0x09	; 9
    192e:	88 15       	cp	r24, r8
    1930:	09 f0       	breq	.+2      	; 0x1934 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xec>
    1932:	47 c0       	rjmp	.+142    	; 0x19c2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1934:	25 c0       	rjmp	.+74     	; 0x1980 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x138>
    1936:	a4 2f       	mov	r26, r20
    1938:	b0 e0       	ldi	r27, 0x00	; 0
    193a:	9d 01       	movw	r18, r26
    193c:	22 0f       	add	r18, r18
    193e:	33 1f       	adc	r19, r19
    1940:	85 01       	movw	r16, r10
    1942:	02 0f       	add	r16, r18
    1944:	13 1f       	adc	r17, r19
    1946:	f8 01       	movw	r30, r16
    1948:	80 81       	ld	r24, Z
    194a:	91 81       	ldd	r25, Z+1	; 0x01
    194c:	89 2b       	or	r24, r25
    194e:	a1 f4       	brne	.+40     	; 0x1978 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1950:	2c 0f       	add	r18, r28
    1952:	3d 1f       	adc	r19, r29
    1954:	f9 01       	movw	r30, r18
    1956:	81 a1       	lds	r24, 0x41
    1958:	92 a1       	lds	r25, 0x42
    195a:	fc 01       	movw	r30, r24
    195c:	20 81       	ld	r18, Z
    195e:	30 e0       	ldi	r19, 0x00	; 0
    1960:	ac 0f       	add	r26, r28
    1962:	bd 1f       	adc	r27, r29
    1964:	51 96       	adiw	r26, 0x11	; 17
    1966:	8c 91       	ld	r24, X
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	28 23       	and	r18, r24
    196c:	39 23       	and	r19, r25
    196e:	23 2b       	or	r18, r19
    1970:	19 f4       	brne	.+6      	; 0x1978 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1972:	f8 01       	movw	r30, r16
    1974:	71 83       	std	Z+1, r23	; 0x01
    1976:	60 83       	st	Z, r22
    1978:	4f 5f       	subi	r20, 0xFF	; 255
    197a:	88 85       	ldd	r24, Y+8	; 0x08
    197c:	48 17       	cp	r20, r24
    197e:	d8 f2       	brcs	.-74     	; 0x1936 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xee>
    1980:	d5 0e       	add	r13, r21
    1982:	4e 2d       	mov	r20, r14
    1984:	af 2d       	mov	r26, r15
    1986:	8e 85       	ldd	r24, Y+14	; 0x0e
    1988:	9f 85       	ldd	r25, Y+15	; 0x0f
    198a:	68 17       	cp	r22, r24
    198c:	79 07       	cpc	r23, r25
    198e:	08 f2       	brcs	.-126    	; 0x1912 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xca>
    1990:	90 92 b0 00 	sts	0x00B0, r9
    1994:	c0 92 b1 00 	sts	0x00B1, r12
    1998:	20 e0       	ldi	r18, 0x00	; 0
    199a:	0f c0       	rjmp	.+30     	; 0x19ba <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    199c:	e2 2f       	mov	r30, r18
    199e:	f0 e0       	ldi	r31, 0x00	; 0
    19a0:	ee 0f       	add	r30, r30
    19a2:	ff 1f       	adc	r31, r31
    19a4:	ea 0d       	add	r30, r10
    19a6:	fb 1d       	adc	r31, r11
    19a8:	80 81       	ld	r24, Z
    19aa:	91 81       	ldd	r25, Z+1	; 0x01
    19ac:	89 2b       	or	r24, r25
    19ae:	21 f4       	brne	.+8      	; 0x19b8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x170>
    19b0:	8e 85       	ldd	r24, Y+14	; 0x0e
    19b2:	9f 85       	ldd	r25, Y+15	; 0x0f
    19b4:	91 83       	std	Z+1, r25	; 0x01
    19b6:	80 83       	st	Z, r24
    19b8:	2f 5f       	subi	r18, 0xFF	; 255
    19ba:	88 85       	ldd	r24, Y+8	; 0x08
    19bc:	28 17       	cp	r18, r24
    19be:	70 f3       	brcs	.-36     	; 0x199c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    19c0:	05 c0       	rjmp	.+10     	; 0x19cc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x184>
    19c2:	e3 b0       	in	r14, 0x03	; 3
    19c4:	f6 b0       	in	r15, 0x06	; 6
    19c6:	89 b0       	in	r8, 0x09	; 9
    19c8:	40 e0       	ldi	r20, 0x00	; 0
    19ca:	d7 cf       	rjmp	.-82     	; 0x197a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    19cc:	cd b7       	in	r28, 0x3d	; 61
    19ce:	de b7       	in	r29, 0x3e	; 62
    19d0:	ec e0       	ldi	r30, 0x0C	; 12
    19d2:	0c 94 24 11 	jmp	0x2248	; 0x2248 <__epilogue_restores__+0xc>

000019d6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    19d6:	a0 e0       	ldi	r26, 0x00	; 0
    19d8:	b0 e0       	ldi	r27, 0x00	; 0
    19da:	e1 ef       	ldi	r30, 0xF1	; 241
    19dc:	fc e0       	ldi	r31, 0x0C	; 12
    19de:	0c 94 0c 11 	jmp	0x2218	; 0x2218 <__prologue_saves__+0x14>
    19e2:	ec 01       	movw	r28, r24
    19e4:	8b 01       	movw	r16, r22
    19e6:	d0 90 7c 00 	lds	r13, 0x007C
    19ea:	e0 90 7a 00 	lds	r14, 0x007A
    19ee:	c7 b0       	in	r12, 0x07	; 7
    19f0:	f8 b0       	in	r15, 0x08	; 8
    19f2:	80 91 7a 00 	lds	r24, 0x007A
    19f6:	86 fd       	sbrc	r24, 6
    19f8:	fc cf       	rjmp	.-8      	; 0x19f2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	09 c0       	rjmp	.+18     	; 0x1a10 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3a>
    19fe:	e9 2f       	mov	r30, r25
    1a00:	f0 e0       	ldi	r31, 0x00	; 0
    1a02:	ee 0f       	add	r30, r30
    1a04:	ff 1f       	adc	r31, r31
    1a06:	e0 0f       	add	r30, r16
    1a08:	f1 1f       	adc	r31, r17
    1a0a:	11 82       	std	Z+1, r1	; 0x01
    1a0c:	10 82       	st	Z, r1
    1a0e:	9f 5f       	subi	r25, 0xFF	; 255
    1a10:	88 85       	ldd	r24, Y+8	; 0x08
    1a12:	98 17       	cp	r25, r24
    1a14:	a0 f3       	brcs	.-24     	; 0x19fe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1a16:	97 b1       	in	r25, 0x07	; 7
    1a18:	8a a1       	lds	r24, 0x4a
    1a1a:	80 95       	com	r24
    1a1c:	98 23       	and	r25, r24
    1a1e:	97 b9       	out	0x07, r25	; 7
    1a20:	98 b1       	in	r25, 0x08	; 8
    1a22:	89 23       	and	r24, r25
    1a24:	88 b9       	out	0x08, r24	; 8
    1a26:	87 e8       	ldi	r24, 0x87	; 135
    1a28:	80 93 7a 00 	sts	0x007A, r24
    1a2c:	50 e0       	ldi	r21, 0x00	; 0
    1a2e:	25 c0       	rjmp	.+74     	; 0x1a7a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xa4>
    1a30:	fe 01       	movw	r30, r28
    1a32:	e4 0f       	add	r30, r20
    1a34:	f1 1d       	adc	r31, r1
    1a36:	81 89       	ldd	r24, Z+17	; 0x11
    1a38:	80 64       	ori	r24, 0x40	; 64
    1a3a:	80 93 7c 00 	sts	0x007C, r24
    1a3e:	80 91 7a 00 	lds	r24, 0x007A
    1a42:	80 64       	ori	r24, 0x40	; 64
    1a44:	80 93 7a 00 	sts	0x007A, r24
    1a48:	80 91 7a 00 	lds	r24, 0x007A
    1a4c:	86 fd       	sbrc	r24, 6
    1a4e:	fc cf       	rjmp	.-8      	; 0x1a48 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x72>
    1a50:	e4 2f       	mov	r30, r20
    1a52:	f0 e0       	ldi	r31, 0x00	; 0
    1a54:	ee 0f       	add	r30, r30
    1a56:	ff 1f       	adc	r31, r31
    1a58:	e0 0f       	add	r30, r16
    1a5a:	f1 1f       	adc	r31, r17
    1a5c:	20 91 78 00 	lds	r18, 0x0078
    1a60:	30 91 79 00 	lds	r19, 0x0079
    1a64:	80 81       	ld	r24, Z
    1a66:	91 81       	ldd	r25, Z+1	; 0x01
    1a68:	82 0f       	add	r24, r18
    1a6a:	93 1f       	adc	r25, r19
    1a6c:	91 83       	std	Z+1, r25	; 0x01
    1a6e:	80 83       	st	Z, r24
    1a70:	4f 5f       	subi	r20, 0xFF	; 255
    1a72:	88 85       	ldd	r24, Y+8	; 0x08
    1a74:	48 17       	cp	r20, r24
    1a76:	e0 f2       	brcs	.-72     	; 0x1a30 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1a78:	5f 5f       	subi	r21, 0xFF	; 255
    1a7a:	89 a1       	lds	r24, 0x49
    1a7c:	58 17       	cp	r21, r24
    1a7e:	10 f0       	brcs	.+4      	; 0x1a84 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xae>
    1a80:	40 e0       	ldi	r20, 0x00	; 0
    1a82:	17 c0       	rjmp	.+46     	; 0x1ab2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xdc>
    1a84:	40 e0       	ldi	r20, 0x00	; 0
    1a86:	f5 cf       	rjmp	.-22     	; 0x1a72 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x9c>
    1a88:	e4 2f       	mov	r30, r20
    1a8a:	f0 e0       	ldi	r31, 0x00	; 0
    1a8c:	ee 0f       	add	r30, r30
    1a8e:	ff 1f       	adc	r31, r31
    1a90:	e0 0f       	add	r30, r16
    1a92:	f1 1f       	adc	r31, r17
    1a94:	69 a1       	lds	r22, 0x49
    1a96:	86 2f       	mov	r24, r22
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	95 95       	asr	r25
    1a9c:	87 95       	ror	r24
    1a9e:	20 81       	ld	r18, Z
    1aa0:	31 81       	ldd	r19, Z+1	; 0x01
    1aa2:	82 0f       	add	r24, r18
    1aa4:	93 1f       	adc	r25, r19
    1aa6:	70 e0       	ldi	r23, 0x00	; 0
    1aa8:	0e 94 b1 10 	call	0x2162	; 0x2162 <__udivmodhi4>
    1aac:	71 83       	std	Z+1, r23	; 0x01
    1aae:	60 83       	st	Z, r22
    1ab0:	4f 5f       	subi	r20, 0xFF	; 255
    1ab2:	88 85       	ldd	r24, Y+8	; 0x08
    1ab4:	48 17       	cp	r20, r24
    1ab6:	40 f3       	brcs	.-48     	; 0x1a88 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1ab8:	d0 92 7c 00 	sts	0x007C, r13
    1abc:	e0 92 7a 00 	sts	0x007A, r14
    1ac0:	f8 b8       	out	0x08, r15	; 8
    1ac2:	c7 b8       	out	0x07, r12	; 7
    1ac4:	cd b7       	in	r28, 0x3d	; 61
    1ac6:	de b7       	in	r29, 0x3e	; 62
    1ac8:	e8 e0       	ldi	r30, 0x08	; 8
    1aca:	0c 94 28 11 	jmp	0x2250	; 0x2250 <__epilogue_restores__+0x14>

00001ace <_ZN16PololuQTRSensors4readEPjh>:
    1ace:	a0 e2       	ldi	r26, 0x20	; 32
    1ad0:	b0 e0       	ldi	r27, 0x00	; 0
    1ad2:	ed e6       	ldi	r30, 0x6D	; 109
    1ad4:	fd e0       	ldi	r31, 0x0D	; 13
    1ad6:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__prologue_saves__+0x12>
    1ada:	8c 01       	movw	r16, r24
    1adc:	7b 01       	movw	r14, r22
    1ade:	d4 2e       	mov	r13, r20
    1ae0:	84 2f       	mov	r24, r20
    1ae2:	81 50       	subi	r24, 0x01	; 1
    1ae4:	82 30       	cpi	r24, 0x02	; 2
    1ae6:	b0 f4       	brcc	.+44     	; 0x1b14 <_ZN16PololuQTRSensors4readEPjh+0x46>
    1ae8:	d8 01       	movw	r26, r16
    1aea:	1c 96       	adiw	r26, 0x0c	; 12
    1aec:	ed 91       	ld	r30, X+
    1aee:	fc 91       	ld	r31, X
    1af0:	1d 97       	sbiw	r26, 0x0d	; 13
    1af2:	30 97       	sbiw	r30, 0x00	; 0
    1af4:	79 f0       	breq	.+30     	; 0x1b14 <_ZN16PololuQTRSensors4readEPjh+0x46>
    1af6:	80 81       	ld	r24, Z
    1af8:	19 96       	adiw	r26, 0x09	; 9
    1afa:	9c 91       	ld	r25, X
    1afc:	19 97       	sbiw	r26, 0x09	; 9
    1afe:	89 2b       	or	r24, r25
    1b00:	80 83       	st	Z, r24
    1b02:	1a 96       	adiw	r26, 0x0a	; 10
    1b04:	ed 91       	ld	r30, X+
    1b06:	fc 91       	ld	r31, X
    1b08:	1b 97       	sbiw	r26, 0x0b	; 11
    1b0a:	80 81       	ld	r24, Z
    1b0c:	19 96       	adiw	r26, 0x09	; 9
    1b0e:	9c 91       	ld	r25, X
    1b10:	89 2b       	or	r24, r25
    1b12:	80 83       	st	Z, r24
    1b14:	f8 01       	movw	r30, r16
    1b16:	80 89       	ldd	r24, Z+16	; 0x10
    1b18:	88 23       	and	r24, r24
    1b1a:	49 f5       	brne	.+82     	; 0x1b6e <_ZN16PololuQTRSensors4readEPjh+0xa0>
    1b1c:	c0 2e       	mov	r12, r16
    1b1e:	b1 2e       	mov	r11, r17
    1b20:	c8 01       	movw	r24, r16
    1b22:	b7 01       	movw	r22, r14
    1b24:	0e 94 24 0c 	call	0x1848	; 0x1848 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1b28:	d8 01       	movw	r26, r16
    1b2a:	1c 96       	adiw	r26, 0x0c	; 12
    1b2c:	ed 91       	ld	r30, X+
    1b2e:	fc 91       	ld	r31, X
    1b30:	1d 97       	sbiw	r26, 0x0d	; 13
    1b32:	30 97       	sbiw	r30, 0x00	; 0
    1b34:	81 f0       	breq	.+32     	; 0x1b56 <_ZN16PololuQTRSensors4readEPjh+0x88>
    1b36:	80 81       	ld	r24, Z
    1b38:	19 96       	adiw	r26, 0x09	; 9
    1b3a:	9c 91       	ld	r25, X
    1b3c:	19 97       	sbiw	r26, 0x09	; 9
    1b3e:	89 2b       	or	r24, r25
    1b40:	80 83       	st	Z, r24
    1b42:	1a 96       	adiw	r26, 0x0a	; 10
    1b44:	ed 91       	ld	r30, X+
    1b46:	fc 91       	ld	r31, X
    1b48:	1b 97       	sbiw	r26, 0x0b	; 11
    1b4a:	90 81       	ld	r25, Z
    1b4c:	19 96       	adiw	r26, 0x09	; 9
    1b4e:	8c 91       	ld	r24, X
    1b50:	80 95       	com	r24
    1b52:	89 23       	and	r24, r25
    1b54:	80 83       	st	Z, r24
    1b56:	b2 e0       	ldi	r27, 0x02	; 2
    1b58:	db 16       	cp	r13, r27
    1b5a:	09 f0       	breq	.+2      	; 0x1b5e <_ZN16PololuQTRSensors4readEPjh+0x90>
    1b5c:	53 c0       	rjmp	.+166    	; 0x1c04 <_ZN16PololuQTRSensors4readEPjh+0x136>
    1b5e:	8c 2d       	mov	r24, r12
    1b60:	9b 2d       	mov	r25, r11
    1b62:	be 01       	movw	r22, r28
    1b64:	6f 5f       	subi	r22, 0xFF	; 255
    1b66:	7f 4f       	sbci	r23, 0xFF	; 255
    1b68:	0e 94 24 0c 	call	0x1848	; 0x1848 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1b6c:	27 c0       	rjmp	.+78     	; 0x1bbc <_ZN16PololuQTRSensors4readEPjh+0xee>
    1b6e:	c0 2e       	mov	r12, r16
    1b70:	b1 2e       	mov	r11, r17
    1b72:	c8 01       	movw	r24, r16
    1b74:	b7 01       	movw	r22, r14
    1b76:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1b7a:	d8 01       	movw	r26, r16
    1b7c:	1c 96       	adiw	r26, 0x0c	; 12
    1b7e:	ed 91       	ld	r30, X+
    1b80:	fc 91       	ld	r31, X
    1b82:	1d 97       	sbiw	r26, 0x0d	; 13
    1b84:	30 97       	sbiw	r30, 0x00	; 0
    1b86:	81 f0       	breq	.+32     	; 0x1ba8 <_ZN16PololuQTRSensors4readEPjh+0xda>
    1b88:	80 81       	ld	r24, Z
    1b8a:	19 96       	adiw	r26, 0x09	; 9
    1b8c:	9c 91       	ld	r25, X
    1b8e:	19 97       	sbiw	r26, 0x09	; 9
    1b90:	89 2b       	or	r24, r25
    1b92:	80 83       	st	Z, r24
    1b94:	1a 96       	adiw	r26, 0x0a	; 10
    1b96:	ed 91       	ld	r30, X+
    1b98:	fc 91       	ld	r31, X
    1b9a:	1b 97       	sbiw	r26, 0x0b	; 11
    1b9c:	90 81       	ld	r25, Z
    1b9e:	19 96       	adiw	r26, 0x09	; 9
    1ba0:	8c 91       	ld	r24, X
    1ba2:	80 95       	com	r24
    1ba4:	89 23       	and	r24, r25
    1ba6:	80 83       	st	Z, r24
    1ba8:	b2 e0       	ldi	r27, 0x02	; 2
    1baa:	db 16       	cp	r13, r27
    1bac:	59 f5       	brne	.+86     	; 0x1c04 <_ZN16PololuQTRSensors4readEPjh+0x136>
    1bae:	8c 2d       	mov	r24, r12
    1bb0:	9b 2d       	mov	r25, r11
    1bb2:	be 01       	movw	r22, r28
    1bb4:	6f 5f       	subi	r22, 0xFF	; 255
    1bb6:	7f 4f       	sbci	r23, 0xFF	; 255
    1bb8:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1bbc:	40 e0       	ldi	r20, 0x00	; 0
    1bbe:	be 01       	movw	r22, r28
    1bc0:	6f 5f       	subi	r22, 0xFF	; 255
    1bc2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc4:	1a c0       	rjmp	.+52     	; 0x1bfa <_ZN16PololuQTRSensors4readEPjh+0x12c>
    1bc6:	e4 2f       	mov	r30, r20
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	ee 0f       	add	r30, r30
    1bcc:	ff 1f       	adc	r31, r31
    1bce:	67 01       	movw	r12, r14
    1bd0:	ce 0e       	add	r12, r30
    1bd2:	df 1e       	adc	r13, r31
    1bd4:	e6 0f       	add	r30, r22
    1bd6:	f7 1f       	adc	r31, r23
    1bd8:	d8 01       	movw	r26, r16
    1bda:	1e 96       	adiw	r26, 0x0e	; 14
    1bdc:	2d 91       	ld	r18, X+
    1bde:	3c 91       	ld	r19, X
    1be0:	1f 97       	sbiw	r26, 0x0f	; 15
    1be2:	80 81       	ld	r24, Z
    1be4:	91 81       	ldd	r25, Z+1	; 0x01
    1be6:	28 1b       	sub	r18, r24
    1be8:	39 0b       	sbc	r19, r25
    1bea:	f6 01       	movw	r30, r12
    1bec:	80 81       	ld	r24, Z
    1bee:	91 81       	ldd	r25, Z+1	; 0x01
    1bf0:	82 0f       	add	r24, r18
    1bf2:	93 1f       	adc	r25, r19
    1bf4:	91 83       	std	Z+1, r25	; 0x01
    1bf6:	80 83       	st	Z, r24
    1bf8:	4f 5f       	subi	r20, 0xFF	; 255
    1bfa:	d8 01       	movw	r26, r16
    1bfc:	18 96       	adiw	r26, 0x08	; 8
    1bfe:	8c 91       	ld	r24, X
    1c00:	48 17       	cp	r20, r24
    1c02:	08 f3       	brcs	.-62     	; 0x1bc6 <_ZN16PololuQTRSensors4readEPjh+0xf8>
    1c04:	a0 96       	adiw	r28, 0x20	; 32
    1c06:	e9 e0       	ldi	r30, 0x09	; 9
    1c08:	0c 94 27 11 	jmp	0x224e	; 0x224e <__epilogue_restores__+0x12>

00001c0c <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1c0c:	a0 e0       	ldi	r26, 0x00	; 0
    1c0e:	b0 e0       	ldi	r27, 0x00	; 0
    1c10:	ec e0       	ldi	r30, 0x0C	; 12
    1c12:	fe e0       	ldi	r31, 0x0E	; 14
    1c14:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__prologue_saves__+0xe>
    1c18:	ec 01       	movw	r28, r24
    1c1a:	16 2f       	mov	r17, r22
    1c1c:	07 2f       	mov	r16, r23
    1c1e:	94 2e       	mov	r9, r20
    1c20:	22 e0       	ldi	r18, 0x02	; 2
    1c22:	42 17       	cp	r20, r18
    1c24:	11 f0       	breq	.+4      	; 0x1c2a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x1e>
    1c26:	44 23       	and	r20, r20
    1c28:	51 f4       	brne	.+20     	; 0x1c3e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x32>
    1c2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c2c:	9d 81       	ldd	r25, Y+5	; 0x05
    1c2e:	89 2b       	or	r24, r25
    1c30:	09 f4       	brne	.+2      	; 0x1c34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x28>
    1c32:	a4 c0       	rjmp	.+328    	; 0x1d7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1c34:	8e 81       	ldd	r24, Y+6	; 0x06
    1c36:	9f 81       	ldd	r25, Y+7	; 0x07
    1c38:	89 2b       	or	r24, r25
    1c3a:	09 f4       	brne	.+2      	; 0x1c3e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x32>
    1c3c:	9f c0       	rjmp	.+318    	; 0x1d7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1c3e:	89 2d       	mov	r24, r9
    1c40:	81 50       	subi	r24, 0x01	; 1
    1c42:	82 30       	cpi	r24, 0x02	; 2
    1c44:	50 f4       	brcc	.+20     	; 0x1c5a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4e>
    1c46:	88 81       	ld	r24, Y
    1c48:	99 81       	ldd	r25, Y+1	; 0x01
    1c4a:	89 2b       	or	r24, r25
    1c4c:	09 f4       	brne	.+2      	; 0x1c50 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x44>
    1c4e:	96 c0       	rjmp	.+300    	; 0x1d7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1c50:	8a 81       	ldd	r24, Y+2	; 0x02
    1c52:	9b 81       	ldd	r25, Y+3	; 0x03
    1c54:	89 2b       	or	r24, r25
    1c56:	09 f4       	brne	.+2      	; 0x1c5a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4e>
    1c58:	91 c0       	rjmp	.+290    	; 0x1d7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1c5a:	ce 01       	movw	r24, r28
    1c5c:	61 2f       	mov	r22, r17
    1c5e:	70 2f       	mov	r23, r16
    1c60:	49 2d       	mov	r20, r9
    1c62:	0e 94 67 0d 	call	0x1ace	; 0x1ace <_ZN16PololuQTRSensors4readEPjh>
    1c66:	81 2f       	mov	r24, r17
    1c68:	90 2f       	mov	r25, r16
    1c6a:	9c 01       	movw	r18, r24
    1c6c:	59 01       	movw	r10, r18
    1c6e:	cc 24       	eor	r12, r12
    1c70:	dd 24       	eor	r13, r13
    1c72:	00 e0       	ldi	r16, 0x00	; 0
    1c74:	10 e0       	ldi	r17, 0x00	; 0
    1c76:	7c c0       	rjmp	.+248    	; 0x1d70 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	98 16       	cp	r9, r24
    1c7c:	69 f4       	brne	.+26     	; 0x1c98 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    1c7e:	ea 81       	ldd	r30, Y+2	; 0x02
    1c80:	fb 81       	ldd	r31, Y+3	; 0x03
    1c82:	e0 0f       	add	r30, r16
    1c84:	f1 1f       	adc	r31, r17
    1c86:	20 81       	ld	r18, Z
    1c88:	31 81       	ldd	r19, Z+1	; 0x01
    1c8a:	e8 81       	ld	r30, Y
    1c8c:	f9 81       	ldd	r31, Y+1	; 0x01
    1c8e:	e0 0f       	add	r30, r16
    1c90:	f1 1f       	adc	r31, r17
    1c92:	40 81       	ld	r20, Z
    1c94:	51 81       	ldd	r21, Z+1	; 0x01
    1c96:	3d c0       	rjmp	.+122    	; 0x1d12 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x106>
    1c98:	ac 81       	ldd	r26, Y+4	; 0x04
    1c9a:	bd 81       	ldd	r27, Y+5	; 0x05
    1c9c:	99 20       	and	r9, r9
    1c9e:	59 f4       	brne	.+22     	; 0x1cb6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xaa>
    1ca0:	ee 81       	ldd	r30, Y+6	; 0x06
    1ca2:	ff 81       	ldd	r31, Y+7	; 0x07
    1ca4:	e0 0f       	add	r30, r16
    1ca6:	f1 1f       	adc	r31, r17
    1ca8:	20 81       	ld	r18, Z
    1caa:	31 81       	ldd	r19, Z+1	; 0x01
    1cac:	a0 0f       	add	r26, r16
    1cae:	b1 1f       	adc	r27, r17
    1cb0:	4d 91       	ld	r20, X+
    1cb2:	5c 91       	ld	r21, X
    1cb4:	2e c0       	rjmp	.+92     	; 0x1d12 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x106>
    1cb6:	a0 0f       	add	r26, r16
    1cb8:	b1 1f       	adc	r27, r17
    1cba:	8d 91       	ld	r24, X+
    1cbc:	9c 91       	ld	r25, X
    1cbe:	e8 81       	ld	r30, Y
    1cc0:	f9 81       	ldd	r31, Y+1	; 0x01
    1cc2:	e0 0f       	add	r30, r16
    1cc4:	f1 1f       	adc	r31, r17
    1cc6:	20 81       	ld	r18, Z
    1cc8:	31 81       	ldd	r19, Z+1	; 0x01
    1cca:	ee 85       	ldd	r30, Y+14	; 0x0e
    1ccc:	ff 85       	ldd	r31, Y+15	; 0x0f
    1cce:	82 17       	cp	r24, r18
    1cd0:	93 07       	cpc	r25, r19
    1cd2:	10 f4       	brcc	.+4      	; 0x1cd8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xcc>
    1cd4:	af 01       	movw	r20, r30
    1cd6:	05 c0       	rjmp	.+10     	; 0x1ce2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd6>
    1cd8:	a9 01       	movw	r20, r18
    1cda:	4e 0f       	add	r20, r30
    1cdc:	5f 1f       	adc	r21, r31
    1cde:	48 1b       	sub	r20, r24
    1ce0:	59 0b       	sbc	r21, r25
    1ce2:	ee 81       	ldd	r30, Y+6	; 0x06
    1ce4:	ff 81       	ldd	r31, Y+7	; 0x07
    1ce6:	e0 0f       	add	r30, r16
    1ce8:	f1 1f       	adc	r31, r17
    1cea:	60 81       	ld	r22, Z
    1cec:	71 81       	ldd	r23, Z+1	; 0x01
    1cee:	ea 81       	ldd	r30, Y+2	; 0x02
    1cf0:	fb 81       	ldd	r31, Y+3	; 0x03
    1cf2:	e0 0f       	add	r30, r16
    1cf4:	f1 1f       	adc	r31, r17
    1cf6:	80 81       	ld	r24, Z
    1cf8:	91 81       	ldd	r25, Z+1	; 0x01
    1cfa:	ee 85       	ldd	r30, Y+14	; 0x0e
    1cfc:	ff 85       	ldd	r31, Y+15	; 0x0f
    1cfe:	68 17       	cp	r22, r24
    1d00:	79 07       	cpc	r23, r25
    1d02:	10 f4       	brcc	.+4      	; 0x1d08 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xfc>
    1d04:	9f 01       	movw	r18, r30
    1d06:	05 c0       	rjmp	.+10     	; 0x1d12 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x106>
    1d08:	9c 01       	movw	r18, r24
    1d0a:	2e 0f       	add	r18, r30
    1d0c:	3f 1f       	adc	r19, r31
    1d0e:	26 1b       	sub	r18, r22
    1d10:	37 0b       	sbc	r19, r23
    1d12:	79 01       	movw	r14, r18
    1d14:	e4 1a       	sub	r14, r20
    1d16:	f5 0a       	sbc	r15, r21
    1d18:	01 f1       	breq	.+64     	; 0x1d5a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    1d1a:	f5 01       	movw	r30, r10
    1d1c:	60 81       	ld	r22, Z
    1d1e:	71 81       	ldd	r23, Z+1	; 0x01
    1d20:	80 e0       	ldi	r24, 0x00	; 0
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	9a 01       	movw	r18, r20
    1d26:	40 e0       	ldi	r20, 0x00	; 0
    1d28:	50 e0       	ldi	r21, 0x00	; 0
    1d2a:	62 1b       	sub	r22, r18
    1d2c:	73 0b       	sbc	r23, r19
    1d2e:	84 0b       	sbc	r24, r20
    1d30:	95 0b       	sbc	r25, r21
    1d32:	28 ee       	ldi	r18, 0xE8	; 232
    1d34:	33 e0       	ldi	r19, 0x03	; 3
    1d36:	40 e0       	ldi	r20, 0x00	; 0
    1d38:	50 e0       	ldi	r21, 0x00	; 0
    1d3a:	0e 94 92 10 	call	0x2124	; 0x2124 <__mulsi3>
    1d3e:	97 01       	movw	r18, r14
    1d40:	40 e0       	ldi	r20, 0x00	; 0
    1d42:	50 e0       	ldi	r21, 0x00	; 0
    1d44:	0e 94 e7 10 	call	0x21ce	; 0x21ce <__divmodsi4>
    1d48:	c9 01       	movw	r24, r18
    1d4a:	f3 e0       	ldi	r31, 0x03	; 3
    1d4c:	29 3e       	cpi	r18, 0xE9	; 233
    1d4e:	3f 07       	cpc	r19, r31
    1d50:	14 f0       	brlt	.+4      	; 0x1d56 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14a>
    1d52:	88 ee       	ldi	r24, 0xE8	; 232
    1d54:	93 e0       	ldi	r25, 0x03	; 3
    1d56:	97 ff       	sbrs	r25, 7
    1d58:	02 c0       	rjmp	.+4      	; 0x1d5e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1d5a:	80 e0       	ldi	r24, 0x00	; 0
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	f5 01       	movw	r30, r10
    1d60:	81 93       	st	Z+, r24
    1d62:	91 93       	st	Z+, r25
    1d64:	5f 01       	movw	r10, r30
    1d66:	08 94       	sec
    1d68:	c1 1c       	adc	r12, r1
    1d6a:	d1 1c       	adc	r13, r1
    1d6c:	0e 5f       	subi	r16, 0xFE	; 254
    1d6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d70:	88 85       	ldd	r24, Y+8	; 0x08
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	c8 16       	cp	r12, r24
    1d76:	d9 06       	cpc	r13, r25
    1d78:	0c f4       	brge	.+2      	; 0x1d7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1d7a:	7e cf       	rjmp	.-260    	; 0x1c78 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x6c>
    1d7c:	cd b7       	in	r28, 0x3d	; 61
    1d7e:	de b7       	in	r29, 0x3e	; 62
    1d80:	eb e0       	ldi	r30, 0x0B	; 11
    1d82:	0c 94 25 11 	jmp	0x224a	; 0x224a <__epilogue_restores__+0xe>

00001d86 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1d86:	a4 e0       	ldi	r26, 0x04	; 4
    1d88:	b0 e0       	ldi	r27, 0x00	; 0
    1d8a:	e9 ec       	ldi	r30, 0xC9	; 201
    1d8c:	fe e0       	ldi	r31, 0x0E	; 14
    1d8e:	0c 94 02 11 	jmp	0x2204	; 0x2204 <__prologue_saves__>
    1d92:	8c 01       	movw	r16, r24
    1d94:	f6 2e       	mov	r15, r22
    1d96:	e7 2e       	mov	r14, r23
    1d98:	2a 83       	std	Y+2, r18	; 0x02
    1d9a:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1d9e:	d8 01       	movw	r26, r16
    1da0:	18 96       	adiw	r26, 0x08	; 8
    1da2:	bc 91       	ld	r27, X
    1da4:	b9 83       	std	Y+1, r27	; 0x01
    1da6:	2f 2d       	mov	r18, r15
    1da8:	3e 2d       	mov	r19, r14
    1daa:	c9 01       	movw	r24, r18
    1dac:	8c 01       	movw	r16, r24
    1dae:	55 24       	eor	r5, r5
    1db0:	44 24       	eor	r4, r4
    1db2:	66 24       	eor	r6, r6
    1db4:	77 24       	eor	r7, r7
    1db6:	43 01       	movw	r8, r6
    1db8:	1c 82       	std	Y+4, r1	; 0x04
    1dba:	1b 82       	std	Y+3, r1	; 0x03
    1dbc:	aa 24       	eor	r10, r10
    1dbe:	bb 24       	eor	r11, r11
    1dc0:	65 01       	movw	r12, r10
    1dc2:	b8 ee       	ldi	r27, 0xE8	; 232
    1dc4:	2b 2e       	mov	r2, r27
    1dc6:	b3 e0       	ldi	r27, 0x03	; 3
    1dc8:	3b 2e       	mov	r3, r27
    1dca:	32 c0       	rjmp	.+100    	; 0x1e30 <_ZN16PololuQTRSensors8readLineEPjhh+0xaa>
    1dcc:	f8 01       	movw	r30, r16
    1dce:	e0 80       	ld	r14, Z
    1dd0:	f1 80       	ldd	r15, Z+1	; 0x01
    1dd2:	fa 81       	ldd	r31, Y+2	; 0x02
    1dd4:	ff 23       	and	r31, r31
    1dd6:	21 f0       	breq	.+8      	; 0x1de0 <_ZN16PololuQTRSensors8readLineEPjhh+0x5a>
    1dd8:	c1 01       	movw	r24, r2
    1dda:	8e 19       	sub	r24, r14
    1ddc:	9f 09       	sbc	r25, r15
    1dde:	7c 01       	movw	r14, r24
    1de0:	99 ec       	ldi	r25, 0xC9	; 201
    1de2:	e9 16       	cp	r14, r25
    1de4:	f1 04       	cpc	r15, r1
    1de6:	14 f0       	brlt	.+4      	; 0x1dec <_ZN16PololuQTRSensors8readLineEPjhh+0x66>
    1de8:	44 24       	eor	r4, r4
    1dea:	43 94       	inc	r4
    1dec:	a3 e3       	ldi	r26, 0x33	; 51
    1dee:	ea 16       	cp	r14, r26
    1df0:	f1 04       	cpc	r15, r1
    1df2:	9c f0       	brlt	.+38     	; 0x1e1a <_ZN16PololuQTRSensors8readLineEPjhh+0x94>
    1df4:	b7 01       	movw	r22, r14
    1df6:	88 27       	eor	r24, r24
    1df8:	77 fd       	sbrc	r23, 7
    1dfa:	80 95       	com	r24
    1dfc:	98 2f       	mov	r25, r24
    1dfe:	a6 01       	movw	r20, r12
    1e00:	95 01       	movw	r18, r10
    1e02:	0e 94 92 10 	call	0x2124	; 0x2124 <__mulsi3>
    1e06:	66 0e       	add	r6, r22
    1e08:	77 1e       	adc	r7, r23
    1e0a:	88 1e       	adc	r8, r24
    1e0c:	99 1e       	adc	r9, r25
    1e0e:	eb 81       	ldd	r30, Y+3	; 0x03
    1e10:	fc 81       	ldd	r31, Y+4	; 0x04
    1e12:	ee 0d       	add	r30, r14
    1e14:	ff 1d       	adc	r31, r15
    1e16:	fc 83       	std	Y+4, r31	; 0x04
    1e18:	eb 83       	std	Y+3, r30	; 0x03
    1e1a:	53 94       	inc	r5
    1e1c:	88 ee       	ldi	r24, 0xE8	; 232
    1e1e:	93 e0       	ldi	r25, 0x03	; 3
    1e20:	a0 e0       	ldi	r26, 0x00	; 0
    1e22:	b0 e0       	ldi	r27, 0x00	; 0
    1e24:	a8 0e       	add	r10, r24
    1e26:	b9 1e       	adc	r11, r25
    1e28:	ca 1e       	adc	r12, r26
    1e2a:	db 1e       	adc	r13, r27
    1e2c:	0e 5f       	subi	r16, 0xFE	; 254
    1e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e30:	99 81       	ldd	r25, Y+1	; 0x01
    1e32:	59 16       	cp	r5, r25
    1e34:	58 f2       	brcs	.-106    	; 0x1dcc <_ZN16PololuQTRSensors8readLineEPjhh+0x46>
    1e36:	44 20       	and	r4, r4
    1e38:	09 f5       	brne	.+66     	; 0x1e7c <_ZN16PololuQTRSensors8readLineEPjhh+0xf6>
    1e3a:	49 2f       	mov	r20, r25
    1e3c:	50 e0       	ldi	r21, 0x00	; 0
    1e3e:	41 50       	subi	r20, 0x01	; 1
    1e40:	50 40       	sbci	r21, 0x00	; 0
    1e42:	84 ef       	ldi	r24, 0xF4	; 244
    1e44:	91 e0       	ldi	r25, 0x01	; 1
    1e46:	48 9f       	mul	r20, r24
    1e48:	90 01       	movw	r18, r0
    1e4a:	49 9f       	mul	r20, r25
    1e4c:	30 0d       	add	r19, r0
    1e4e:	58 9f       	mul	r21, r24
    1e50:	30 0d       	add	r19, r0
    1e52:	11 24       	eor	r1, r1
    1e54:	80 91 80 01 	lds	r24, 0x0180
    1e58:	90 91 81 01 	lds	r25, 0x0181
    1e5c:	82 17       	cp	r24, r18
    1e5e:	93 07       	cpc	r25, r19
    1e60:	1c f4       	brge	.+6      	; 0x1e68 <_ZN16PololuQTRSensors8readLineEPjhh+0xe2>
    1e62:	20 e0       	ldi	r18, 0x00	; 0
    1e64:	30 e0       	ldi	r19, 0x00	; 0
    1e66:	17 c0       	rjmp	.+46     	; 0x1e96 <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    1e68:	88 ee       	ldi	r24, 0xE8	; 232
    1e6a:	93 e0       	ldi	r25, 0x03	; 3
    1e6c:	48 9f       	mul	r20, r24
    1e6e:	90 01       	movw	r18, r0
    1e70:	49 9f       	mul	r20, r25
    1e72:	30 0d       	add	r19, r0
    1e74:	58 9f       	mul	r21, r24
    1e76:	30 0d       	add	r19, r0
    1e78:	11 24       	eor	r1, r1
    1e7a:	0d c0       	rjmp	.+26     	; 0x1e96 <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    1e7c:	ab 81       	ldd	r26, Y+3	; 0x03
    1e7e:	bc 81       	ldd	r27, Y+4	; 0x04
    1e80:	9d 01       	movw	r18, r26
    1e82:	40 e0       	ldi	r20, 0x00	; 0
    1e84:	50 e0       	ldi	r21, 0x00	; 0
    1e86:	c4 01       	movw	r24, r8
    1e88:	b3 01       	movw	r22, r6
    1e8a:	0e 94 c5 10 	call	0x218a	; 0x218a <__udivmodsi4>
    1e8e:	20 93 80 01 	sts	0x0180, r18
    1e92:	30 93 81 01 	sts	0x0181, r19
    1e96:	c9 01       	movw	r24, r18
    1e98:	24 96       	adiw	r28, 0x04	; 4
    1e9a:	e2 e1       	ldi	r30, 0x12	; 18
    1e9c:	0c 94 1e 11 	jmp	0x223c	; 0x223c <__epilogue_restores__>

00001ea0 <_ZN16PololuQTRSensorsD2Ev>:
    1ea0:	cf 93       	push	r28
    1ea2:	df 93       	push	r29
    1ea4:	ec 01       	movw	r28, r24
    1ea6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ea8:	9b 81       	ldd	r25, Y+3	; 0x03
    1eaa:	00 97       	sbiw	r24, 0x00	; 0
    1eac:	11 f0       	breq	.+4      	; 0x1eb2 <_ZN16PololuQTRSensorsD2Ev+0x12>
    1eae:	0e 94 d5 11 	call	0x23aa	; 0x23aa <free>
    1eb2:	8e 81       	ldd	r24, Y+6	; 0x06
    1eb4:	9f 81       	ldd	r25, Y+7	; 0x07
    1eb6:	00 97       	sbiw	r24, 0x00	; 0
    1eb8:	11 f0       	breq	.+4      	; 0x1ebe <_ZN16PololuQTRSensorsD2Ev+0x1e>
    1eba:	0e 94 d5 11 	call	0x23aa	; 0x23aa <free>
    1ebe:	88 81       	ld	r24, Y
    1ec0:	99 81       	ldd	r25, Y+1	; 0x01
    1ec2:	00 97       	sbiw	r24, 0x00	; 0
    1ec4:	11 f0       	breq	.+4      	; 0x1eca <_ZN16PololuQTRSensorsD2Ev+0x2a>
    1ec6:	0e 94 d5 11 	call	0x23aa	; 0x23aa <free>
    1eca:	8c 81       	ldd	r24, Y+4	; 0x04
    1ecc:	9d 81       	ldd	r25, Y+5	; 0x05
    1ece:	00 97       	sbiw	r24, 0x00	; 0
    1ed0:	11 f0       	breq	.+4      	; 0x1ed6 <_ZN16PololuQTRSensorsD2Ev+0x36>
    1ed2:	0e 94 d5 11 	call	0x23aa	; 0x23aa <free>
    1ed6:	df 91       	pop	r29
    1ed8:	cf 91       	pop	r28
    1eda:	08 95       	ret

00001edc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1edc:	a3 e6       	ldi	r26, 0x63	; 99
    1ede:	b0 e0       	ldi	r27, 0x00	; 0
    1ee0:	e4 e7       	ldi	r30, 0x74	; 116
    1ee2:	ff e0       	ldi	r31, 0x0F	; 15
    1ee4:	0c 94 02 11 	jmp	0x2204	; 0x2204 <__prologue_saves__>
    1ee8:	7c 01       	movw	r14, r24
    1eea:	5b 01       	movw	r10, r22
    1eec:	6a 01       	movw	r12, r20
    1eee:	a2 96       	adiw	r28, 0x22	; 34
    1ef0:	2f af       	sts	0x7f, r18
    1ef2:	a2 97       	sbiw	r28, 0x22	; 34
    1ef4:	da 01       	movw	r26, r20
    1ef6:	8d 91       	ld	r24, X+
    1ef8:	9c 91       	ld	r25, X
    1efa:	89 2b       	or	r24, r25
    1efc:	11 f5       	brne	.+68     	; 0x1f42 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x66>
    1efe:	f7 01       	movw	r30, r14
    1f00:	80 85       	ldd	r24, Z+8	; 0x08
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	88 0f       	add	r24, r24
    1f06:	99 1f       	adc	r25, r25
    1f08:	0e 94 3f 11 	call	0x227e	; 0x227e <malloc>
    1f0c:	d6 01       	movw	r26, r12
    1f0e:	8d 93       	st	X+, r24
    1f10:	9c 93       	st	X, r25
    1f12:	00 97       	sbiw	r24, 0x00	; 0
    1f14:	09 f4       	brne	.+2      	; 0x1f18 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x3c>
    1f16:	df c0       	rjmp	.+446    	; 0x20d6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1fa>
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	0c c0       	rjmp	.+24     	; 0x1f36 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5a>
    1f1e:	c9 01       	movw	r24, r18
    1f20:	88 0f       	add	r24, r24
    1f22:	99 1f       	adc	r25, r25
    1f24:	d6 01       	movw	r26, r12
    1f26:	ed 91       	ld	r30, X+
    1f28:	fc 91       	ld	r31, X
    1f2a:	e8 0f       	add	r30, r24
    1f2c:	f9 1f       	adc	r31, r25
    1f2e:	11 82       	std	Z+1, r1	; 0x01
    1f30:	10 82       	st	Z, r1
    1f32:	2f 5f       	subi	r18, 0xFF	; 255
    1f34:	3f 4f       	sbci	r19, 0xFF	; 255
    1f36:	f7 01       	movw	r30, r14
    1f38:	80 85       	ldd	r24, Z+8	; 0x08
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	28 17       	cp	r18, r24
    1f3e:	39 07       	cpc	r19, r25
    1f40:	74 f3       	brlt	.-36     	; 0x1f1e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x42>
    1f42:	d5 01       	movw	r26, r10
    1f44:	8d 91       	ld	r24, X+
    1f46:	9c 91       	ld	r25, X
    1f48:	89 2b       	or	r24, r25
    1f4a:	89 f0       	breq	.+34     	; 0x1f6e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x92>
    1f4c:	00 e0       	ldi	r16, 0x00	; 0
    1f4e:	10 e0       	ldi	r17, 0x00	; 0
    1f50:	3e 01       	movw	r6, r28
    1f52:	08 94       	sec
    1f54:	61 1c       	adc	r6, r1
    1f56:	71 1c       	adc	r7, r1
    1f58:	41 e4       	ldi	r20, 0x41	; 65
    1f5a:	24 2e       	mov	r2, r20
    1f5c:	31 2c       	mov	r3, r1
    1f5e:	2c 0e       	add	r2, r28
    1f60:	3d 1e       	adc	r3, r29
    1f62:	31 e2       	ldi	r19, 0x21	; 33
    1f64:	43 2e       	mov	r4, r19
    1f66:	51 2c       	mov	r5, r1
    1f68:	4c 0e       	add	r4, r28
    1f6a:	5d 1e       	adc	r5, r29
    1f6c:	28 c0       	rjmp	.+80     	; 0x1fbe <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xe2>
    1f6e:	f7 01       	movw	r30, r14
    1f70:	80 85       	ldd	r24, Z+8	; 0x08
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	88 0f       	add	r24, r24
    1f76:	99 1f       	adc	r25, r25
    1f78:	0e 94 3f 11 	call	0x227e	; 0x227e <malloc>
    1f7c:	d5 01       	movw	r26, r10
    1f7e:	8d 93       	st	X+, r24
    1f80:	9c 93       	st	X, r25
    1f82:	00 97       	sbiw	r24, 0x00	; 0
    1f84:	09 f4       	brne	.+2      	; 0x1f88 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xac>
    1f86:	a7 c0       	rjmp	.+334    	; 0x20d6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1fa>
    1f88:	20 e0       	ldi	r18, 0x00	; 0
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	11 c0       	rjmp	.+34     	; 0x1fb0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd4>
    1f8e:	c9 01       	movw	r24, r18
    1f90:	88 0f       	add	r24, r24
    1f92:	99 1f       	adc	r25, r25
    1f94:	d5 01       	movw	r26, r10
    1f96:	ed 91       	ld	r30, X+
    1f98:	fc 91       	ld	r31, X
    1f9a:	e8 0f       	add	r30, r24
    1f9c:	f9 1f       	adc	r31, r25
    1f9e:	d7 01       	movw	r26, r14
    1fa0:	1e 96       	adiw	r26, 0x0e	; 14
    1fa2:	8d 91       	ld	r24, X+
    1fa4:	9c 91       	ld	r25, X
    1fa6:	1f 97       	sbiw	r26, 0x0f	; 15
    1fa8:	91 83       	std	Z+1, r25	; 0x01
    1faa:	80 83       	st	Z, r24
    1fac:	2f 5f       	subi	r18, 0xFF	; 255
    1fae:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb0:	f7 01       	movw	r30, r14
    1fb2:	80 85       	ldd	r24, Z+8	; 0x08
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	28 17       	cp	r18, r24
    1fb8:	39 07       	cpc	r19, r25
    1fba:	4c f3       	brlt	.-46     	; 0x1f8e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb2>
    1fbc:	c7 cf       	rjmp	.-114    	; 0x1f4c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x70>
    1fbe:	c7 01       	movw	r24, r14
    1fc0:	b3 01       	movw	r22, r6
    1fc2:	a2 96       	adiw	r28, 0x22	; 34
    1fc4:	4f ad       	sts	0x6f, r20
    1fc6:	a2 97       	sbiw	r28, 0x22	; 34
    1fc8:	0e 94 67 0d 	call	0x1ace	; 0x1ace <_ZN16PololuQTRSensors4readEPjh>
    1fcc:	d7 01       	movw	r26, r14
    1fce:	18 96       	adiw	r26, 0x08	; 8
    1fd0:	8c 91       	ld	r24, X
    1fd2:	88 2e       	mov	r8, r24
    1fd4:	99 24       	eor	r9, r9
    1fd6:	a1 01       	movw	r20, r2
    1fd8:	f3 01       	movw	r30, r6
    1fda:	a4 96       	adiw	r28, 0x24	; 36
    1fdc:	5f ae       	sts	0xbf, r21
    1fde:	4e ae       	sts	0xbe, r20
    1fe0:	a4 97       	sbiw	r28, 0x24	; 36
    1fe2:	60 e0       	ldi	r22, 0x00	; 0
    1fe4:	70 e0       	ldi	r23, 0x00	; 0
    1fe6:	34 c0       	rjmp	.+104    	; 0x2050 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x174>
    1fe8:	01 15       	cp	r16, r1
    1fea:	11 05       	cpc	r17, r1
    1fec:	59 f0       	breq	.+22     	; 0x2004 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x128>
    1fee:	a4 96       	adiw	r28, 0x24	; 36
    1ff0:	ae ad       	sts	0x6e, r26
    1ff2:	bf ad       	sts	0x6f, r27
    1ff4:	a4 97       	sbiw	r28, 0x24	; 36
    1ff6:	2d 91       	ld	r18, X+
    1ff8:	3c 91       	ld	r19, X
    1ffa:	80 81       	ld	r24, Z
    1ffc:	91 81       	ldd	r25, Z+1	; 0x01
    1ffe:	28 17       	cp	r18, r24
    2000:	39 07       	cpc	r19, r25
    2002:	58 f4       	brcc	.+22     	; 0x201a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x13e>
    2004:	80 81       	ld	r24, Z
    2006:	91 81       	ldd	r25, Z+1	; 0x01
    2008:	a4 96       	adiw	r28, 0x24	; 36
    200a:	ae ad       	sts	0x6e, r26
    200c:	bf ad       	sts	0x6f, r27
    200e:	a4 97       	sbiw	r28, 0x24	; 36
    2010:	8d 93       	st	X+, r24
    2012:	9c 93       	st	X, r25
    2014:	01 15       	cp	r16, r1
    2016:	11 05       	cpc	r17, r1
    2018:	41 f0       	breq	.+16     	; 0x202a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14e>
    201a:	da 01       	movw	r26, r20
    201c:	2d 91       	ld	r18, X+
    201e:	3c 91       	ld	r19, X
    2020:	80 81       	ld	r24, Z
    2022:	91 81       	ldd	r25, Z+1	; 0x01
    2024:	82 17       	cp	r24, r18
    2026:	93 07       	cpc	r25, r19
    2028:	28 f4       	brcc	.+10     	; 0x2034 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x158>
    202a:	80 81       	ld	r24, Z
    202c:	91 81       	ldd	r25, Z+1	; 0x01
    202e:	da 01       	movw	r26, r20
    2030:	8d 93       	st	X+, r24
    2032:	9c 93       	st	X, r25
    2034:	6f 5f       	subi	r22, 0xFF	; 255
    2036:	7f 4f       	sbci	r23, 0xFF	; 255
    2038:	4e 5f       	subi	r20, 0xFE	; 254
    203a:	5f 4f       	sbci	r21, 0xFF	; 255
    203c:	32 96       	adiw	r30, 0x02	; 2
    203e:	a4 96       	adiw	r28, 0x24	; 36
    2040:	8e ad       	sts	0x6e, r24
    2042:	9f ad       	sts	0x6f, r25
    2044:	a4 97       	sbiw	r28, 0x24	; 36
    2046:	02 96       	adiw	r24, 0x02	; 2
    2048:	a4 96       	adiw	r28, 0x24	; 36
    204a:	9f af       	sts	0x7f, r25
    204c:	8e af       	sts	0x7e, r24
    204e:	a4 97       	sbiw	r28, 0x24	; 36
    2050:	68 15       	cp	r22, r8
    2052:	79 05       	cpc	r23, r9
    2054:	4c f2       	brlt	.-110    	; 0x1fe8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10c>
    2056:	0f 5f       	subi	r16, 0xFF	; 255
    2058:	1f 4f       	sbci	r17, 0xFF	; 255
    205a:	0a 30       	cpi	r16, 0x0A	; 10
    205c:	11 05       	cpc	r17, r1
    205e:	09 f0       	breq	.+2      	; 0x2062 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x186>
    2060:	ae cf       	rjmp	.-164    	; 0x1fbe <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xe2>
    2062:	40 e0       	ldi	r20, 0x00	; 0
    2064:	50 e0       	ldi	r21, 0x00	; 0
    2066:	20 e0       	ldi	r18, 0x00	; 0
    2068:	30 e0       	ldi	r19, 0x00	; 0
    206a:	8e 01       	movw	r16, r28
    206c:	0f 5b       	subi	r16, 0xBF	; 191
    206e:	1f 4f       	sbci	r17, 0xFF	; 255
    2070:	be 01       	movw	r22, r28
    2072:	6f 5d       	subi	r22, 0xDF	; 223
    2074:	7f 4f       	sbci	r23, 0xFF	; 255
    2076:	28 c0       	rjmp	.+80     	; 0x20c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ec>
    2078:	f8 01       	movw	r30, r16
    207a:	e2 0f       	add	r30, r18
    207c:	f3 1f       	adc	r31, r19
    207e:	80 80       	ld	r8, Z
    2080:	91 80       	ldd	r9, Z+1	; 0x01
    2082:	f6 01       	movw	r30, r12
    2084:	a0 81       	ld	r26, Z
    2086:	b1 81       	ldd	r27, Z+1	; 0x01
    2088:	a2 0f       	add	r26, r18
    208a:	b3 1f       	adc	r27, r19
    208c:	8d 91       	ld	r24, X+
    208e:	9c 91       	ld	r25, X
    2090:	11 97       	sbiw	r26, 0x01	; 1
    2092:	88 15       	cp	r24, r8
    2094:	99 05       	cpc	r25, r9
    2096:	10 f4       	brcc	.+4      	; 0x209c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c0>
    2098:	8d 92       	st	X+, r8
    209a:	9c 92       	st	X, r9
    209c:	fb 01       	movw	r30, r22
    209e:	e2 0f       	add	r30, r18
    20a0:	f3 1f       	adc	r31, r19
    20a2:	80 80       	ld	r8, Z
    20a4:	91 80       	ldd	r9, Z+1	; 0x01
    20a6:	f5 01       	movw	r30, r10
    20a8:	a0 81       	ld	r26, Z
    20aa:	b1 81       	ldd	r27, Z+1	; 0x01
    20ac:	a2 0f       	add	r26, r18
    20ae:	b3 1f       	adc	r27, r19
    20b0:	8d 91       	ld	r24, X+
    20b2:	9c 91       	ld	r25, X
    20b4:	11 97       	sbiw	r26, 0x01	; 1
    20b6:	88 16       	cp	r8, r24
    20b8:	99 06       	cpc	r9, r25
    20ba:	10 f4       	brcc	.+4      	; 0x20c0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1e4>
    20bc:	8d 92       	st	X+, r8
    20be:	9c 92       	st	X, r9
    20c0:	4f 5f       	subi	r20, 0xFF	; 255
    20c2:	5f 4f       	sbci	r21, 0xFF	; 255
    20c4:	2e 5f       	subi	r18, 0xFE	; 254
    20c6:	3f 4f       	sbci	r19, 0xFF	; 255
    20c8:	d7 01       	movw	r26, r14
    20ca:	18 96       	adiw	r26, 0x08	; 8
    20cc:	8c 91       	ld	r24, X
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	48 17       	cp	r20, r24
    20d2:	59 07       	cpc	r21, r25
    20d4:	8c f2       	brlt	.-94     	; 0x2078 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19c>
    20d6:	cd 59       	subi	r28, 0x9D	; 157
    20d8:	df 4f       	sbci	r29, 0xFF	; 255
    20da:	e2 e1       	ldi	r30, 0x12	; 18
    20dc:	0c 94 1e 11 	jmp	0x223c	; 0x223c <__epilogue_restores__>

000020e0 <_ZN16PololuQTRSensors9calibrateEh>:
    20e0:	1f 93       	push	r17
    20e2:	cf 93       	push	r28
    20e4:	df 93       	push	r29
    20e6:	ec 01       	movw	r28, r24
    20e8:	16 2f       	mov	r17, r22
    20ea:	86 2f       	mov	r24, r22
    20ec:	81 50       	subi	r24, 0x01	; 1
    20ee:	82 30       	cpi	r24, 0x02	; 2
    20f0:	40 f4       	brcc	.+16     	; 0x2102 <_ZN16PololuQTRSensors9calibrateEh+0x22>
    20f2:	ae 01       	movw	r20, r28
    20f4:	4e 5f       	subi	r20, 0xFE	; 254
    20f6:	5f 4f       	sbci	r21, 0xFF	; 255
    20f8:	ce 01       	movw	r24, r28
    20fa:	be 01       	movw	r22, r28
    20fc:	21 e0       	ldi	r18, 0x01	; 1
    20fe:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2102:	12 30       	cpi	r17, 0x02	; 2
    2104:	11 f0       	breq	.+4      	; 0x210a <_ZN16PololuQTRSensors9calibrateEh+0x2a>
    2106:	11 23       	and	r17, r17
    2108:	49 f4       	brne	.+18     	; 0x211c <_ZN16PololuQTRSensors9calibrateEh+0x3c>
    210a:	ae 01       	movw	r20, r28
    210c:	4a 5f       	subi	r20, 0xFA	; 250
    210e:	5f 4f       	sbci	r21, 0xFF	; 255
    2110:	ce 01       	movw	r24, r28
    2112:	24 96       	adiw	r28, 0x04	; 4
    2114:	be 01       	movw	r22, r28
    2116:	20 e0       	ldi	r18, 0x00	; 0
    2118:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    211c:	df 91       	pop	r29
    211e:	cf 91       	pop	r28
    2120:	1f 91       	pop	r17
    2122:	08 95       	ret

00002124 <__mulsi3>:
    2124:	62 9f       	mul	r22, r18
    2126:	d0 01       	movw	r26, r0
    2128:	73 9f       	mul	r23, r19
    212a:	f0 01       	movw	r30, r0
    212c:	82 9f       	mul	r24, r18
    212e:	e0 0d       	add	r30, r0
    2130:	f1 1d       	adc	r31, r1
    2132:	64 9f       	mul	r22, r20
    2134:	e0 0d       	add	r30, r0
    2136:	f1 1d       	adc	r31, r1
    2138:	92 9f       	mul	r25, r18
    213a:	f0 0d       	add	r31, r0
    213c:	83 9f       	mul	r24, r19
    213e:	f0 0d       	add	r31, r0
    2140:	74 9f       	mul	r23, r20
    2142:	f0 0d       	add	r31, r0
    2144:	65 9f       	mul	r22, r21
    2146:	f0 0d       	add	r31, r0
    2148:	99 27       	eor	r25, r25
    214a:	72 9f       	mul	r23, r18
    214c:	b0 0d       	add	r27, r0
    214e:	e1 1d       	adc	r30, r1
    2150:	f9 1f       	adc	r31, r25
    2152:	63 9f       	mul	r22, r19
    2154:	b0 0d       	add	r27, r0
    2156:	e1 1d       	adc	r30, r1
    2158:	f9 1f       	adc	r31, r25
    215a:	bd 01       	movw	r22, r26
    215c:	cf 01       	movw	r24, r30
    215e:	11 24       	eor	r1, r1
    2160:	08 95       	ret

00002162 <__udivmodhi4>:
    2162:	aa 1b       	sub	r26, r26
    2164:	bb 1b       	sub	r27, r27
    2166:	51 e1       	ldi	r21, 0x11	; 17
    2168:	07 c0       	rjmp	.+14     	; 0x2178 <__udivmodhi4_ep>

0000216a <__udivmodhi4_loop>:
    216a:	aa 1f       	adc	r26, r26
    216c:	bb 1f       	adc	r27, r27
    216e:	a6 17       	cp	r26, r22
    2170:	b7 07       	cpc	r27, r23
    2172:	10 f0       	brcs	.+4      	; 0x2178 <__udivmodhi4_ep>
    2174:	a6 1b       	sub	r26, r22
    2176:	b7 0b       	sbc	r27, r23

00002178 <__udivmodhi4_ep>:
    2178:	88 1f       	adc	r24, r24
    217a:	99 1f       	adc	r25, r25
    217c:	5a 95       	dec	r21
    217e:	a9 f7       	brne	.-22     	; 0x216a <__udivmodhi4_loop>
    2180:	80 95       	com	r24
    2182:	90 95       	com	r25
    2184:	bc 01       	movw	r22, r24
    2186:	cd 01       	movw	r24, r26
    2188:	08 95       	ret

0000218a <__udivmodsi4>:
    218a:	a1 e2       	ldi	r26, 0x21	; 33
    218c:	1a 2e       	mov	r1, r26
    218e:	aa 1b       	sub	r26, r26
    2190:	bb 1b       	sub	r27, r27
    2192:	fd 01       	movw	r30, r26
    2194:	0d c0       	rjmp	.+26     	; 0x21b0 <__udivmodsi4_ep>

00002196 <__udivmodsi4_loop>:
    2196:	aa 1f       	adc	r26, r26
    2198:	bb 1f       	adc	r27, r27
    219a:	ee 1f       	adc	r30, r30
    219c:	ff 1f       	adc	r31, r31
    219e:	a2 17       	cp	r26, r18
    21a0:	b3 07       	cpc	r27, r19
    21a2:	e4 07       	cpc	r30, r20
    21a4:	f5 07       	cpc	r31, r21
    21a6:	20 f0       	brcs	.+8      	; 0x21b0 <__udivmodsi4_ep>
    21a8:	a2 1b       	sub	r26, r18
    21aa:	b3 0b       	sbc	r27, r19
    21ac:	e4 0b       	sbc	r30, r20
    21ae:	f5 0b       	sbc	r31, r21

000021b0 <__udivmodsi4_ep>:
    21b0:	66 1f       	adc	r22, r22
    21b2:	77 1f       	adc	r23, r23
    21b4:	88 1f       	adc	r24, r24
    21b6:	99 1f       	adc	r25, r25
    21b8:	1a 94       	dec	r1
    21ba:	69 f7       	brne	.-38     	; 0x2196 <__udivmodsi4_loop>
    21bc:	60 95       	com	r22
    21be:	70 95       	com	r23
    21c0:	80 95       	com	r24
    21c2:	90 95       	com	r25
    21c4:	9b 01       	movw	r18, r22
    21c6:	ac 01       	movw	r20, r24
    21c8:	bd 01       	movw	r22, r26
    21ca:	cf 01       	movw	r24, r30
    21cc:	08 95       	ret

000021ce <__divmodsi4>:
    21ce:	97 fb       	bst	r25, 7
    21d0:	09 2e       	mov	r0, r25
    21d2:	05 26       	eor	r0, r21
    21d4:	0e d0       	rcall	.+28     	; 0x21f2 <__divmodsi4_neg1>
    21d6:	57 fd       	sbrc	r21, 7
    21d8:	04 d0       	rcall	.+8      	; 0x21e2 <__divmodsi4_neg2>
    21da:	d7 df       	rcall	.-82     	; 0x218a <__udivmodsi4>
    21dc:	0a d0       	rcall	.+20     	; 0x21f2 <__divmodsi4_neg1>
    21de:	00 1c       	adc	r0, r0
    21e0:	38 f4       	brcc	.+14     	; 0x21f0 <__divmodsi4_exit>

000021e2 <__divmodsi4_neg2>:
    21e2:	50 95       	com	r21
    21e4:	40 95       	com	r20
    21e6:	30 95       	com	r19
    21e8:	21 95       	neg	r18
    21ea:	3f 4f       	sbci	r19, 0xFF	; 255
    21ec:	4f 4f       	sbci	r20, 0xFF	; 255
    21ee:	5f 4f       	sbci	r21, 0xFF	; 255

000021f0 <__divmodsi4_exit>:
    21f0:	08 95       	ret

000021f2 <__divmodsi4_neg1>:
    21f2:	f6 f7       	brtc	.-4      	; 0x21f0 <__divmodsi4_exit>
    21f4:	90 95       	com	r25
    21f6:	80 95       	com	r24
    21f8:	70 95       	com	r23
    21fa:	61 95       	neg	r22
    21fc:	7f 4f       	sbci	r23, 0xFF	; 255
    21fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2200:	9f 4f       	sbci	r25, 0xFF	; 255
    2202:	08 95       	ret

00002204 <__prologue_saves__>:
    2204:	2f 92       	push	r2
    2206:	3f 92       	push	r3
    2208:	4f 92       	push	r4
    220a:	5f 92       	push	r5
    220c:	6f 92       	push	r6
    220e:	7f 92       	push	r7
    2210:	8f 92       	push	r8
    2212:	9f 92       	push	r9
    2214:	af 92       	push	r10
    2216:	bf 92       	push	r11
    2218:	cf 92       	push	r12
    221a:	df 92       	push	r13
    221c:	ef 92       	push	r14
    221e:	ff 92       	push	r15
    2220:	0f 93       	push	r16
    2222:	1f 93       	push	r17
    2224:	cf 93       	push	r28
    2226:	df 93       	push	r29
    2228:	cd b7       	in	r28, 0x3d	; 61
    222a:	de b7       	in	r29, 0x3e	; 62
    222c:	ca 1b       	sub	r28, r26
    222e:	db 0b       	sbc	r29, r27
    2230:	0f b6       	in	r0, 0x3f	; 63
    2232:	f8 94       	cli
    2234:	de bf       	out	0x3e, r29	; 62
    2236:	0f be       	out	0x3f, r0	; 63
    2238:	cd bf       	out	0x3d, r28	; 61
    223a:	09 94       	ijmp

0000223c <__epilogue_restores__>:
    223c:	2a 88       	ldd	r2, Y+18	; 0x12
    223e:	39 88       	ldd	r3, Y+17	; 0x11
    2240:	48 88       	ldd	r4, Y+16	; 0x10
    2242:	5f 84       	ldd	r5, Y+15	; 0x0f
    2244:	6e 84       	ldd	r6, Y+14	; 0x0e
    2246:	7d 84       	ldd	r7, Y+13	; 0x0d
    2248:	8c 84       	ldd	r8, Y+12	; 0x0c
    224a:	9b 84       	ldd	r9, Y+11	; 0x0b
    224c:	aa 84       	ldd	r10, Y+10	; 0x0a
    224e:	b9 84       	ldd	r11, Y+9	; 0x09
    2250:	c8 84       	ldd	r12, Y+8	; 0x08
    2252:	df 80       	ldd	r13, Y+7	; 0x07
    2254:	ee 80       	ldd	r14, Y+6	; 0x06
    2256:	fd 80       	ldd	r15, Y+5	; 0x05
    2258:	0c 81       	ldd	r16, Y+4	; 0x04
    225a:	1b 81       	ldd	r17, Y+3	; 0x03
    225c:	aa 81       	ldd	r26, Y+2	; 0x02
    225e:	b9 81       	ldd	r27, Y+1	; 0x01
    2260:	ce 0f       	add	r28, r30
    2262:	d1 1d       	adc	r29, r1
    2264:	0f b6       	in	r0, 0x3f	; 63
    2266:	f8 94       	cli
    2268:	de bf       	out	0x3e, r29	; 62
    226a:	0f be       	out	0x3f, r0	; 63
    226c:	cd bf       	out	0x3d, r28	; 61
    226e:	ed 01       	movw	r28, r26
    2270:	08 95       	ret

00002272 <__tablejump2__>:
    2272:	ee 0f       	add	r30, r30
    2274:	ff 1f       	adc	r31, r31

00002276 <__tablejump__>:
    2276:	05 90       	lpm	r0, Z+
    2278:	f4 91       	lpm	r31, Z
    227a:	e0 2d       	mov	r30, r0
    227c:	09 94       	ijmp

0000227e <malloc>:
    227e:	cf 93       	push	r28
    2280:	df 93       	push	r29
    2282:	ac 01       	movw	r20, r24
    2284:	82 30       	cpi	r24, 0x02	; 2
    2286:	91 05       	cpc	r25, r1
    2288:	10 f4       	brcc	.+4      	; 0x228e <malloc+0x10>
    228a:	42 e0       	ldi	r20, 0x02	; 2
    228c:	50 e0       	ldi	r21, 0x00	; 0
    228e:	e0 91 86 01 	lds	r30, 0x0186
    2292:	f0 91 87 01 	lds	r31, 0x0187
    2296:	20 e0       	ldi	r18, 0x00	; 0
    2298:	30 e0       	ldi	r19, 0x00	; 0
    229a:	a0 e0       	ldi	r26, 0x00	; 0
    229c:	b0 e0       	ldi	r27, 0x00	; 0
    229e:	24 c0       	rjmp	.+72     	; 0x22e8 <malloc+0x6a>
    22a0:	80 81       	ld	r24, Z
    22a2:	91 81       	ldd	r25, Z+1	; 0x01
    22a4:	84 17       	cp	r24, r20
    22a6:	95 07       	cpc	r25, r21
    22a8:	d0 f0       	brcs	.+52     	; 0x22de <malloc+0x60>
    22aa:	84 17       	cp	r24, r20
    22ac:	95 07       	cpc	r25, r21
    22ae:	71 f4       	brne	.+28     	; 0x22cc <malloc+0x4e>
    22b0:	82 81       	ldd	r24, Z+2	; 0x02
    22b2:	93 81       	ldd	r25, Z+3	; 0x03
    22b4:	10 97       	sbiw	r26, 0x00	; 0
    22b6:	29 f0       	breq	.+10     	; 0x22c2 <malloc+0x44>
    22b8:	13 96       	adiw	r26, 0x03	; 3
    22ba:	9c 93       	st	X, r25
    22bc:	8e 93       	st	-X, r24
    22be:	12 97       	sbiw	r26, 0x02	; 2
    22c0:	2c c0       	rjmp	.+88     	; 0x231a <malloc+0x9c>
    22c2:	90 93 87 01 	sts	0x0187, r25
    22c6:	80 93 86 01 	sts	0x0186, r24
    22ca:	27 c0       	rjmp	.+78     	; 0x231a <malloc+0x9c>
    22cc:	21 15       	cp	r18, r1
    22ce:	31 05       	cpc	r19, r1
    22d0:	19 f0       	breq	.+6      	; 0x22d8 <malloc+0x5a>
    22d2:	82 17       	cp	r24, r18
    22d4:	93 07       	cpc	r25, r19
    22d6:	18 f4       	brcc	.+6      	; 0x22de <malloc+0x60>
    22d8:	9c 01       	movw	r18, r24
    22da:	bd 01       	movw	r22, r26
    22dc:	ef 01       	movw	r28, r30
    22de:	92 81       	ldd	r25, Z+2	; 0x02
    22e0:	83 81       	ldd	r24, Z+3	; 0x03
    22e2:	df 01       	movw	r26, r30
    22e4:	e9 2f       	mov	r30, r25
    22e6:	f8 2f       	mov	r31, r24
    22e8:	30 97       	sbiw	r30, 0x00	; 0
    22ea:	d1 f6       	brne	.-76     	; 0x22a0 <malloc+0x22>
    22ec:	21 15       	cp	r18, r1
    22ee:	31 05       	cpc	r19, r1
    22f0:	f9 f0       	breq	.+62     	; 0x2330 <malloc+0xb2>
    22f2:	c9 01       	movw	r24, r18
    22f4:	84 1b       	sub	r24, r20
    22f6:	95 0b       	sbc	r25, r21
    22f8:	84 30       	cpi	r24, 0x04	; 4
    22fa:	91 05       	cpc	r25, r1
    22fc:	80 f4       	brcc	.+32     	; 0x231e <malloc+0xa0>
    22fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2300:	9b 81       	ldd	r25, Y+3	; 0x03
    2302:	61 15       	cp	r22, r1
    2304:	71 05       	cpc	r23, r1
    2306:	21 f0       	breq	.+8      	; 0x2310 <malloc+0x92>
    2308:	fb 01       	movw	r30, r22
    230a:	93 83       	std	Z+3, r25	; 0x03
    230c:	82 83       	std	Z+2, r24	; 0x02
    230e:	04 c0       	rjmp	.+8      	; 0x2318 <malloc+0x9a>
    2310:	90 93 87 01 	sts	0x0187, r25
    2314:	80 93 86 01 	sts	0x0186, r24
    2318:	fe 01       	movw	r30, r28
    231a:	32 96       	adiw	r30, 0x02	; 2
    231c:	42 c0       	rjmp	.+132    	; 0x23a2 <malloc+0x124>
    231e:	fe 01       	movw	r30, r28
    2320:	e8 0f       	add	r30, r24
    2322:	f9 1f       	adc	r31, r25
    2324:	41 93       	st	Z+, r20
    2326:	51 93       	st	Z+, r21
    2328:	02 97       	sbiw	r24, 0x02	; 2
    232a:	99 83       	std	Y+1, r25	; 0x01
    232c:	88 83       	st	Y, r24
    232e:	39 c0       	rjmp	.+114    	; 0x23a2 <malloc+0x124>
    2330:	80 91 84 01 	lds	r24, 0x0184
    2334:	90 91 85 01 	lds	r25, 0x0185
    2338:	00 97       	sbiw	r24, 0x00	; 0
    233a:	41 f4       	brne	.+16     	; 0x234c <malloc+0xce>
    233c:	80 91 15 01 	lds	r24, 0x0115
    2340:	90 91 16 01 	lds	r25, 0x0116
    2344:	90 93 85 01 	sts	0x0185, r25
    2348:	80 93 84 01 	sts	0x0184, r24
    234c:	20 91 13 01 	lds	r18, 0x0113
    2350:	30 91 14 01 	lds	r19, 0x0114
    2354:	21 15       	cp	r18, r1
    2356:	31 05       	cpc	r19, r1
    2358:	41 f4       	brne	.+16     	; 0x236a <malloc+0xec>
    235a:	2d b7       	in	r18, 0x3d	; 61
    235c:	3e b7       	in	r19, 0x3e	; 62
    235e:	80 91 17 01 	lds	r24, 0x0117
    2362:	90 91 18 01 	lds	r25, 0x0118
    2366:	28 1b       	sub	r18, r24
    2368:	39 0b       	sbc	r19, r25
    236a:	e0 91 84 01 	lds	r30, 0x0184
    236e:	f0 91 85 01 	lds	r31, 0x0185
    2372:	e2 17       	cp	r30, r18
    2374:	f3 07       	cpc	r31, r19
    2376:	98 f4       	brcc	.+38     	; 0x239e <malloc+0x120>
    2378:	2e 1b       	sub	r18, r30
    237a:	3f 0b       	sbc	r19, r31
    237c:	24 17       	cp	r18, r20
    237e:	35 07       	cpc	r19, r21
    2380:	70 f0       	brcs	.+28     	; 0x239e <malloc+0x120>
    2382:	ca 01       	movw	r24, r20
    2384:	02 96       	adiw	r24, 0x02	; 2
    2386:	28 17       	cp	r18, r24
    2388:	39 07       	cpc	r19, r25
    238a:	48 f0       	brcs	.+18     	; 0x239e <malloc+0x120>
    238c:	8e 0f       	add	r24, r30
    238e:	9f 1f       	adc	r25, r31
    2390:	90 93 85 01 	sts	0x0185, r25
    2394:	80 93 84 01 	sts	0x0184, r24
    2398:	41 93       	st	Z+, r20
    239a:	51 93       	st	Z+, r21
    239c:	02 c0       	rjmp	.+4      	; 0x23a2 <malloc+0x124>
    239e:	e0 e0       	ldi	r30, 0x00	; 0
    23a0:	f0 e0       	ldi	r31, 0x00	; 0
    23a2:	cf 01       	movw	r24, r30
    23a4:	df 91       	pop	r29
    23a6:	cf 91       	pop	r28
    23a8:	08 95       	ret

000023aa <free>:
    23aa:	0f 93       	push	r16
    23ac:	1f 93       	push	r17
    23ae:	cf 93       	push	r28
    23b0:	df 93       	push	r29
    23b2:	9c 01       	movw	r18, r24
    23b4:	00 97       	sbiw	r24, 0x00	; 0
    23b6:	09 f4       	brne	.+2      	; 0x23ba <free+0x10>
    23b8:	8c c0       	rjmp	.+280    	; 0x24d2 <free+0x128>
    23ba:	dc 01       	movw	r26, r24
    23bc:	12 97       	sbiw	r26, 0x02	; 2
    23be:	13 96       	adiw	r26, 0x03	; 3
    23c0:	1c 92       	st	X, r1
    23c2:	1e 92       	st	-X, r1
    23c4:	12 97       	sbiw	r26, 0x02	; 2
    23c6:	60 91 86 01 	lds	r22, 0x0186
    23ca:	70 91 87 01 	lds	r23, 0x0187
    23ce:	61 15       	cp	r22, r1
    23d0:	71 05       	cpc	r23, r1
    23d2:	89 f4       	brne	.+34     	; 0x23f6 <free+0x4c>
    23d4:	8d 91       	ld	r24, X+
    23d6:	9c 91       	ld	r25, X
    23d8:	11 97       	sbiw	r26, 0x01	; 1
    23da:	82 0f       	add	r24, r18
    23dc:	93 1f       	adc	r25, r19
    23de:	20 91 84 01 	lds	r18, 0x0184
    23e2:	30 91 85 01 	lds	r19, 0x0185
    23e6:	28 17       	cp	r18, r24
    23e8:	39 07       	cpc	r19, r25
    23ea:	69 f5       	brne	.+90     	; 0x2446 <free+0x9c>
    23ec:	b0 93 85 01 	sts	0x0185, r27
    23f0:	a0 93 84 01 	sts	0x0184, r26
    23f4:	6e c0       	rjmp	.+220    	; 0x24d2 <free+0x128>
    23f6:	fb 01       	movw	r30, r22
    23f8:	40 e0       	ldi	r20, 0x00	; 0
    23fa:	50 e0       	ldi	r21, 0x00	; 0
    23fc:	01 c0       	rjmp	.+2      	; 0x2400 <free+0x56>
    23fe:	fc 01       	movw	r30, r24
    2400:	ea 17       	cp	r30, r26
    2402:	fb 07       	cpc	r31, r27
    2404:	30 f4       	brcc	.+12     	; 0x2412 <free+0x68>
    2406:	82 81       	ldd	r24, Z+2	; 0x02
    2408:	93 81       	ldd	r25, Z+3	; 0x03
    240a:	af 01       	movw	r20, r30
    240c:	00 97       	sbiw	r24, 0x00	; 0
    240e:	b9 f7       	brne	.-18     	; 0x23fe <free+0x54>
    2410:	1f c0       	rjmp	.+62     	; 0x2450 <free+0xa6>
    2412:	e9 01       	movw	r28, r18
    2414:	22 97       	sbiw	r28, 0x02	; 2
    2416:	fb 83       	std	Y+3, r31	; 0x03
    2418:	ea 83       	std	Y+2, r30	; 0x02
    241a:	08 81       	ld	r16, Y
    241c:	19 81       	ldd	r17, Y+1	; 0x01
    241e:	c9 01       	movw	r24, r18
    2420:	80 0f       	add	r24, r16
    2422:	91 1f       	adc	r25, r17
    2424:	8e 17       	cp	r24, r30
    2426:	9f 07       	cpc	r25, r31
    2428:	59 f4       	brne	.+22     	; 0x2440 <free+0x96>
    242a:	80 81       	ld	r24, Z
    242c:	91 81       	ldd	r25, Z+1	; 0x01
    242e:	80 0f       	add	r24, r16
    2430:	91 1f       	adc	r25, r17
    2432:	02 96       	adiw	r24, 0x02	; 2
    2434:	99 83       	std	Y+1, r25	; 0x01
    2436:	88 83       	st	Y, r24
    2438:	82 81       	ldd	r24, Z+2	; 0x02
    243a:	93 81       	ldd	r25, Z+3	; 0x03
    243c:	9b 83       	std	Y+3, r25	; 0x03
    243e:	8a 83       	std	Y+2, r24	; 0x02
    2440:	41 15       	cp	r20, r1
    2442:	51 05       	cpc	r21, r1
    2444:	29 f4       	brne	.+10     	; 0x2450 <free+0xa6>
    2446:	b0 93 87 01 	sts	0x0187, r27
    244a:	a0 93 86 01 	sts	0x0186, r26
    244e:	41 c0       	rjmp	.+130    	; 0x24d2 <free+0x128>
    2450:	fa 01       	movw	r30, r20
    2452:	b3 83       	std	Z+3, r27	; 0x03
    2454:	a2 83       	std	Z+2, r26	; 0x02
    2456:	c1 91       	ld	r28, Z+
    2458:	d1 91       	ld	r29, Z+
    245a:	ec 0f       	add	r30, r28
    245c:	fd 1f       	adc	r31, r29
    245e:	ae 17       	cp	r26, r30
    2460:	bf 07       	cpc	r27, r31
    2462:	81 f4       	brne	.+32     	; 0x2484 <free+0xda>
    2464:	f9 01       	movw	r30, r18
    2466:	92 91       	ld	r25, -Z
    2468:	82 91       	ld	r24, -Z
    246a:	8c 0f       	add	r24, r28
    246c:	9d 1f       	adc	r25, r29
    246e:	02 96       	adiw	r24, 0x02	; 2
    2470:	da 01       	movw	r26, r20
    2472:	11 96       	adiw	r26, 0x01	; 1
    2474:	9c 93       	st	X, r25
    2476:	8e 93       	st	-X, r24
    2478:	82 81       	ldd	r24, Z+2	; 0x02
    247a:	93 81       	ldd	r25, Z+3	; 0x03
    247c:	13 96       	adiw	r26, 0x03	; 3
    247e:	9c 93       	st	X, r25
    2480:	8e 93       	st	-X, r24
    2482:	12 97       	sbiw	r26, 0x02	; 2
    2484:	e0 e0       	ldi	r30, 0x00	; 0
    2486:	f0 e0       	ldi	r31, 0x00	; 0
    2488:	02 c0       	rjmp	.+4      	; 0x248e <free+0xe4>
    248a:	fb 01       	movw	r30, r22
    248c:	bc 01       	movw	r22, r24
    248e:	db 01       	movw	r26, r22
    2490:	12 96       	adiw	r26, 0x02	; 2
    2492:	8d 91       	ld	r24, X+
    2494:	9c 91       	ld	r25, X
    2496:	13 97       	sbiw	r26, 0x03	; 3
    2498:	00 97       	sbiw	r24, 0x00	; 0
    249a:	b9 f7       	brne	.-18     	; 0x248a <free+0xe0>
    249c:	cb 01       	movw	r24, r22
    249e:	02 96       	adiw	r24, 0x02	; 2
    24a0:	2d 91       	ld	r18, X+
    24a2:	3c 91       	ld	r19, X
    24a4:	11 97       	sbiw	r26, 0x01	; 1
    24a6:	82 0f       	add	r24, r18
    24a8:	93 1f       	adc	r25, r19
    24aa:	20 91 84 01 	lds	r18, 0x0184
    24ae:	30 91 85 01 	lds	r19, 0x0185
    24b2:	28 17       	cp	r18, r24
    24b4:	39 07       	cpc	r19, r25
    24b6:	69 f4       	brne	.+26     	; 0x24d2 <free+0x128>
    24b8:	30 97       	sbiw	r30, 0x00	; 0
    24ba:	29 f4       	brne	.+10     	; 0x24c6 <free+0x11c>
    24bc:	10 92 87 01 	sts	0x0187, r1
    24c0:	10 92 86 01 	sts	0x0186, r1
    24c4:	02 c0       	rjmp	.+4      	; 0x24ca <free+0x120>
    24c6:	13 82       	std	Z+3, r1	; 0x03
    24c8:	12 82       	std	Z+2, r1	; 0x02
    24ca:	70 93 85 01 	sts	0x0185, r23
    24ce:	60 93 84 01 	sts	0x0184, r22
    24d2:	df 91       	pop	r29
    24d4:	cf 91       	pop	r28
    24d6:	1f 91       	pop	r17
    24d8:	0f 91       	pop	r16
    24da:	08 95       	ret

000024dc <__do_global_dtors>:
    24dc:	10 e0       	ldi	r17, 0x00	; 0
    24de:	ca e6       	ldi	r28, 0x6A	; 106
    24e0:	d0 e0       	ldi	r29, 0x00	; 0
    24e2:	04 c0       	rjmp	.+8      	; 0x24ec <__do_global_dtors+0x10>
    24e4:	fe 01       	movw	r30, r28
    24e6:	0e 94 3b 11 	call	0x2276	; 0x2276 <__tablejump__>
    24ea:	22 96       	adiw	r28, 0x02	; 2
    24ec:	cc 36       	cpi	r28, 0x6C	; 108
    24ee:	d1 07       	cpc	r29, r17
    24f0:	c9 f7       	brne	.-14     	; 0x24e4 <__do_global_dtors+0x8>
    24f2:	f8 94       	cli

000024f4 <__stop_program>:
    24f4:	ff cf       	rjmp	.-2      	; 0x24f4 <__stop_program>
